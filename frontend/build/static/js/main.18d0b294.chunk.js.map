{"version":3,"sources":["views/Routers.js","actions/settings/updateTheme.js","components/ButtonTheme.js","components/HeaderRenders/RenderHeaderNoAuth.js","components/HeaderRenders/HeaderAuth/NoticiasButton.js","components/HeaderRenders/HeaderAuth/MenuButtonOpen.js","actions/login/logout.js","components/HeaderRenders/HeaderAuth/ButtonUser.js","components/HeaderRenders/RenderHeaderAuth.js","components/HeaderMenu.js","views/App.js","reducers/settings.js","reducers/dataLogin.js","reducers/news.js","reducers/loginStatus.js","reducers/userData.js","reducers/panelSettings.js","store.js","serviceWorker.js","index.js","actions/panel/toggleDrawer.js","actions/login/reloginSuccess.js","actions/panel/updatePanelContent.js","actions/panel/updateIndexDrawer.js","components/ReloginVerify.js","actions/login/updateDataUser.js"],"names":["PageIndex","lazy","PageNews","PagePanel","Loader","className","style","display","justifyContent","alignItems","height","type","color","width","noFound","flexDirection","fontSize","marginBottom","marginTop","textAlign","Routers","fallback","exact","path","component","updateTheme","mapDispatchToProps","connect","state","tema","settings","mode","Tooltip","title","arrow","IconButton","onClick","changeThemeTo","localStorage","setItem","RenderHeaderNoAuth","to","updatePanelContent","updateIndexDrawer","toggleDrawer","enterDelay","leaveDelay","logout","MenuAvatar","buttonItem","handleClose","handleSelected","id","anchorEl","keepMounted","open","Boolean","onClose","anchorOrigin","vertical","horizontal","transformOrigin","MenuItem","data-option","name","userData","React","useState","setButtonItem","enqueueSnackbar","useSnackbar","Fragment","aria-controls","aria-haspopup","event","currentTarget","Avatar","alt","backgroundColor","substring","toUpperCase","e","target","dataset","option","clearAllData","variant","RenderHeaderAuth","Badge","badgeContent","max","auth","loginStatus","themeConfig","createMuiTheme","palette","primary","main","secondary","background","default","overrides","MuiListItem","root","alertRef","createRef","onClickDismiss","key","current","closeSnackbar","ThemeProvider","theme","CssBaseline","maxSnack","preventDuplicate","action","size","ref","getItem","initialState","user","pass","checkbox","dataA","dataN","content","loginSI","validating","redirect","cedula","cedulaSin","curso","seccion","nota","horario","profeGuia","privilegio","avatar","token","infoDialog","drawer","index","modifySection","loading","reducers","combineReducers","payload","temaActual","dataLogin","input","value","checked","news","console","log","panelSettings","noInfo","found","storage","JSON","parse","map","store","createStore","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","reloginSuccess","valor","LoadingVerifyRelogin","dialogList","clear","sessionStorage","updateDataUser","children","useEffect","fetchData","a","async","CanselaSHION","keyL","keyS","click"],"mappings":"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","file":"static/js/main.18d0b294.chunk.js","sourcesContent":["//React\nimport React, { Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport ReactLoading from 'react-loading';\n\n//Componentes\nconst PageIndex = lazy(() => import(/* webpackChunkName: \"Index\" */ './index/PageIndex'));\nconst PageNews = lazy(() => import(/* webpackChunkName: \"News\" */ './news/PageNews'));\nconst PagePanel = lazy(() => import(/* webpackChunkName: \"Panel\" */ './panel/PagePanel'));\n\nfunction Routers() {\n\treturn (\n\t\t/* Switch sirve para escojer la ruta la que mas se acerque a la\n    ruta actual, es decir, que de todas esas rutas, la app escogerรก\n    la que mรกs se asemeje, excepto si se coloca el atributo \"exact\" */\n\t\t<Suspense fallback={<Loader />}>\n\t\t\t<Switch>\n\t\t\t\t<Route exact path=\"/\" component={PageIndex} />\n\t\t\t\t<Route exact path=\"/login\" component={PageIndex} />\n\t\t\t\t<Route exact path=\"/news\" component={PageNews} />\n\t\t\t\t<Route exact path=\"/panel\" component={PagePanel} />\n\t\t\t\t<Route component={noFound} />\n\t\t\t</Switch>\n\t\t</Suspense>\n\t);\n}\n\nfunction Loader(){\n\treturn (\n\t\t<main className=\"BoxPage\">\n\t\t\t<div className=\"loading\" style={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"80vh\"}}>\n\t\t\t\t<ReactLoading type=\"bars\" color=\"#6B8DD6\" width={150} height={100} />\n\t\t\t</div>\n\t\t</main>\n\t)\n}\n\nfunction noFound() {\n\treturn (\n\t\t<main className=\"BoxPage\" style={{display: \"flex\", flexDirection: \"column\", alignItems: \"center\"}}>\n\t\t\t<h1 style={{fontSize: 50, marginBottom: 0, marginTop: 0}}>\n\t\t\t\t4<span color=\"primary\">0</span>4\n\t\t\t</h1>\n\t\t\t<ReactLoading type=\"cylon\" color=\"#6B8DD6\" />\n\t\t\t<p style={{marginTop: 0, textAlign: \"center\"}}>\n\t\t\t\tLa página solicitada no se ha podido encontrar, por favor intente \n\t\t\t\tcon una diferente.\n\t\t\t</p>\n\t\t</main>\n\t);\n}\n\nexport default Routers;","//Se crea una acción la cual será capturada\n//por el reducer correspondiente.\nconst updateTheme = () => {\n  return {\n    type: \"UPDATE_THEME\"\n  }\n}\n\nexport default updateTheme;","import React from 'react';\n\n//Redux\nimport { connect } from 'react-redux';\nimport updateTheme from '../actions/settings/updateTheme';\n\n//Icono\nimport WbIncandescentIcon from '@material-ui/icons/WbIncandescent';\nimport { IconButton, Tooltip } from '@material-ui/core';\n\n\n//Se agrega el state y actions del redux como un prop dentro del\n//componente\nfunction ButtonTheme({tema, updateTheme}) {\n\n  //Aplicar cambios de estilos.\n  const useDarkMode = () => {\n    //Verificar el estado del State y cambiarlo.\n    let changeThemeTo = tema === 'light' ? 'dark' : 'light';\n\n    //Cambiar el estado en el componente\n    updateTheme()\n\n    //Aplicar los cambios del State en el almacenamiento local \n    //para que al recargar la página los cambios hechos se \n    //mantengan.\n    localStorage.setItem(\"theme\", changeThemeTo);\n  }\n\n  const mode = tema === 'dark' ? 'Claro' : 'Nocturno';\n  return (\n  <Tooltip title={`Modo ${mode}`} arrow>\n    <IconButton onClick={useDarkMode}>\n      <WbIncandescentIcon />\n    </IconButton>\n  </Tooltip>);\n}\n\n//Mapeo del store de redux\nconst mapStateToProps = state => {\n  return {\n    tema: state.settings.tema\n  }\n}\n\n//Obtener acciones\nconst mapDispatchToProps = {\n  updateTheme,\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonTheme);","import React from 'react';\nimport ButtonTheme from '../ButtonTheme';\nimport { Link } from 'react-router-dom';\nimport { IconButton, Tooltip } from '@material-ui/core';\n\n//Icons\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\n\n\nfunction RenderHeaderNoAuth() {\n  return (\n    <header className=\"headerNoPanel\">\n      <nav>\n        <span className=\"IconBoxButton\">\n          <ButtonTheme />\n        </span>\n        <span className=\"IconBoxButton\">\n          <Link to=\"/news\">\n            <Tooltip title=\"Noticias\" arrow>\n              <IconButton>\n                <AnnouncementIcon />\n              </IconButton>\n            </Tooltip>\n          </Link>\n        </span>\n        <span className=\"IconBoxButton\">\n          <Link to=\"/login\">\n          <Tooltip title=\"Login\" arrow>\n              <IconButton>\n                <VpnKeyIcon />\n              </IconButton>\n            </Tooltip>\n          </Link>\n        </span>\n      </nav>\n    </header>\n  )\n}\n\nexport default RenderHeaderNoAuth;","import React from 'react';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport AnnouncementIcon from '@material-ui/icons/Announcement';\n\n//Redux\nimport { connect } from 'react-redux';\nimport updatePanelContent from '../../../actions/panel/updatePanelContent';\nimport updateIndexDrawer from '../../../actions/panel/updateIndexDrawer';\n\nfunction NoticiasButton({updatePanelContent, updateIndexDrawer}) {\n  return (\n    <Tooltip title=\"Noticias\" arrow>\n      <IconButton onClick={()=>{\n\t\t\t\tupdatePanelContent(\"news\");\n\t\t\t\tupdateIndexDrawer(null);\n\t\t\t}}>\n        <AnnouncementIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n\nconst mapDispatchToProps = {\n  updatePanelContent,\n\tupdateIndexDrawer\n}\n\nexport default connect(null,mapDispatchToProps)(NoticiasButton);","import React from 'react';\nimport { IconButton, Tooltip } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\n\n//Redux\nimport { connect } from 'react-redux';\nimport toggleDrawer from '../../../actions/panel/toggleDrawer';\n\nfunction MenuButtonOpen({toggleDrawer}) {\n  return (\n    <Tooltip \n      enterDelay={1000} \n      leaveDelay={200} \n      title='Mostrar menú' \n      arrow\n    >\n      <IconButton onClick={toggleDrawer}>\n        <MenuIcon />\n      </IconButton>\n    </Tooltip>\n  );\n}\n\nconst mapDispatchToProps = {\n  toggleDrawer,\n}\n\nexport default connect(null,mapDispatchToProps)(MenuButtonOpen);","//Se crea una acciรณn la cual serรก capturada\n//por el reducer correspondiente.\nconst logout = () => {\n  return {\n    type: \"LOGOUT\"\n  }\n}\n\nexport default logout;","import React from 'react';\n\n//Material-UI\nimport { IconButton, MenuItem, Menu, Avatar, Tooltip } from '@material-ui/core';\n\n//Redux\nimport { connect } from 'react-redux';\nimport logout from '../../../actions/login/logout';\n\n//Componentes\nimport { clearAllData } from '../../ReloginVerify';\n\n//SnackBar\nimport { useSnackbar } from 'notistack';\n\n//Boton con MENU INTERNO BOYYYYYYYYYYS\nfunction ButtonUser({ name, logout }) {\n\t//State la cual controlará el estado del menú.\n\tconst [buttonItem, setButtonItem] = React.useState(null);\n\n\t//Crear un SnackBar\n\tconst { enqueueSnackbar } = useSnackbar();\n\n\t//El que seteará el item en el cual debe aparecer el menú.\n\tconst handleClick = event => {\n\t\tsetButtonItem(event.currentTarget);\n\t};\n\n\t//Cerrar pos.\n\tconst handleClose = () => {\n\t\tsetButtonItem(null);\n\t};\n\n\t//Funcion del menú.\n\tconst handleSelected = e => {\n\t\tconst option = e.target.dataset.option;\n\t\tif (option === 'exit') {\n\t\t\tclearAllData();\n\t\t\tsetButtonItem(null);\n\t\t\tenqueueSnackbar('Sección cerrada', {\n\t\t\t\tvariant: 'info'\n\t\t\t});\n\t\t\tlogout();\n\t\t}\n\t};\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Tooltip title=\"Opciones\" arrow>\n\t\t\t\t{/*Aria-controls indica el item por ID el cual será controlado el\n      en este caso será controlado por el MENÚ.\n      aria-haspopud no sé que hace. xDDD\n      */}\n\t\t\t\t<IconButton aria-controls=\"ButtonUser\" aria-haspopup=\"true\" onClick={handleClick}>\n\t\t\t\t\t<Avatar\n\t\t\t\t\t\talt=\"Usuario\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tbackgroundColor: '#B46BD6',\n\t\t\t\t\t\t\theight: '35px',\n\t\t\t\t\t\t\twidth: '35px'\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/*Mostrar el nombre del usuario en caso de que no tenga\n          una foto*/}\n\t\t\t\t\t\t{name.substring(0, 1).toUpperCase()}\n\t\t\t\t\t</Avatar>\n\t\t\t\t</IconButton>\n\t\t\t</Tooltip>\n\t\t\t{/* Recordar que el archoEl es simplemente el item en el cual\n    se posicionará el menú. */}\n\t\t\t<MenuAvatar\n\t\t\t\thandleClose={handleClose}\n\t\t\t\tbuttonItem={buttonItem}\n\t\t\t\thandleSelected={handleSelected}\n\t\t\t/>\n\t\t</React.Fragment>\n\t);\n}\n\nfunction MenuAvatar({ buttonItem, handleClose, handleSelected }) {\n\treturn (\n\t\t<Menu\n\t\t\tid=\"ButtonUser\"\n\t\t\tanchorEl={buttonItem}\n\t\t\tkeepMounted\n\t\t\topen={Boolean(buttonItem)}\n\t\t\tonClose={handleClose}\n\t\t\tanchorOrigin={{\n\t\t\t\tvertical: 'top',\n\t\t\t\thorizontal: 'left'\n\t\t\t}}\n\t\t\ttransformOrigin={{\n\t\t\t\tvertical: 'top',\n\t\t\t\thorizontal: 'right'\n\t\t\t}}\n\t\t>\n\t\t\t<MenuItem data-option=\"avatar\" onClick={handleSelected}>\n\t\t\t\tCambiar avatar\n\t\t\t</MenuItem>\n\t\t\t<MenuItem data-option=\"password\" onClick={handleSelected}>\n\t\t\t\tCambiar contraseña\n\t\t\t</MenuItem>\n\t\t\t<MenuItem data-option=\"exit\" onClick={handleSelected}>\n\t\t\t\tSalir\n\t\t\t</MenuItem>\n\t\t</Menu>\n\t);\n}\n\n//REDUX\nconst mapStateToProps = state => ({\n\tname: state.userData.name\n});\n\nconst mapDispatchToProps = {\n\tlogout\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ButtonUser);","import React from 'react';\nimport { \n  IconButton, \n  Badge,\n  Tooltip\n} from '@material-ui/core';\n\n//Componentes\nimport ButtonTheme from '../ButtonTheme';\nimport NoticiasButton from './HeaderAuth/NoticiasButton';\nimport MenuButtonOpen from './HeaderAuth/MenuButtonOpen';\nimport ButtonUser from './HeaderAuth/ButtonUser';\n\n//Icons\nimport MailIcon from '@material-ui/icons/Mail';\n\n\nfunction RenderHeaderAuth() {\n  return (\n    <div>\n      <header className=\"headerNoPanel fixPanel\">\n        <nav>\n          <MenuButtonOpen />\n          <div className=\"Options\">\n            <span className=\"IconBoxButton\">\n              <ButtonTheme />\n            </span>\n            <span className=\"IconBoxButton\">\n              <Tooltip title=\"Mensajes\" arrow>\n                <IconButton>\n                  <Badge color=\"secondary\" badgeContent={12} max={10}>\n                    <MailIcon />\n                  </Badge>\n                </IconButton>\n              </Tooltip>\n            </span>\n            <span className=\"IconBoxButton\">\n                <NoticiasButton />\n            </span>\n            <span className=\"IconBoxButton\">\n              <ButtonUser />\n            </span>\n          </div>\n        </nav>\n      </header>\n    </div>\n  )\n}\n\nexport default RenderHeaderAuth;","import React from 'react';\n\n//Componentes\nimport RenderHeaderNoAuth from './HeaderRenders/RenderHeaderNoAuth';\nimport RenderHeaderAuth from './HeaderRenders/RenderHeaderAuth';\n\n//Redux\nimport { connect } from 'react-redux';\n\nfunction HeaderMenu({auth}){\n\tif (auth) {\n\t\treturn <RenderHeaderAuth />\n\t}\n\t\n\treturn <RenderHeaderNoAuth />\n}\n\nconst mapStateToProps = (state) => ({\n  auth: state.loginStatus.auth\n})\n\nexport default connect(mapStateToProps)(HeaderMenu);","import React from 'react';\n\n//Componentes\nimport Routers from './Routers';\nimport HeaderMenu from '../components/HeaderMenu';\n\n//Material-UI\nimport { CssBaseline, IconButton } from '@material-ui/core';\nimport { ThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\n\n//SnackBar\nimport { SnackbarProvider } from 'notistack';\n\n//Redux\nimport { connect } from 'react-redux';\n\n//Funcion a exportar\nfunction App({ tema }) {\n\t// obtener el valor del tema de la store\n\n\t//Creación de los estilos a aplicar en toda la WEB.\n\t//Todo esto es material-ui, revisar documentaciรณn para mรกs info.\n\tconst themeConfig = createMuiTheme({\n\t\tpalette: {\n\t\t\ttype: tema,\n\t\t\tprimary: {\n\t\t\t\tmain: '#6B8DD6',\n\t\t\t},\n\t\t\tsecondary: {\n\t\t\t\tmain: '#B46BD6',\n\t\t\t},\n\t\t\tbackground: {\n\t\t\t\tdefault: tema === 'light' ? '#E9EBEE' : '#191919'\n\t\t\t}\n\t\t},\n\t\toverrides: {\n\t\t\tMuiListItem: {\n\t\t\t\troot: {\n\t\t\t\t\t/*\n\t\t\t\t\t&$: Pone estilos a Mui-Selected, clase interna\n\t\t\t\t\tdel Material-UI.\n\t\t\t\t\t\n\t\t\t\t\t& \"clase\" : Pone estilos a las clases nombradas\n\t\t\t\t\tdespues del \"&\".\n\t\t\t\t\t*/\n\t\t\t\t\t'&$selected': {\n\t\t\t\t\t\tbackground: 'none',\n\t\t\t\t\t\t'& .MuiListItemIcon-root,& .MuiListItemText-root': {\n\t\t\t\t\t\t\tcolor: '#6B8DD6',\n\t\t\t\t\t\t},\n\t\t\t\t\t}\n\t\t\t\t}\t\n\t\t\t},\n  \t},\n\t});\n\n\t//Añadir action a todos los snackbar\n\tconst alertRef = React.createRef();\n\tconst onClickDismiss = key => () => {\n\t\talertRef.current.closeSnackbar(key);\n\t};\n\n\treturn (\n\t\t/* Selecciona el tema en TODA la app, o en lo que encierra. xD  */\n\t\t<ThemeProvider theme={themeConfig}>\n\t\t\t{/* Sin el CssBaseLine el programa no aplica el tema correctamente\n      debido a que necesita reinicar los css por defecto. */}\n\t\t\t<CssBaseline />\n\t\t\t{/* Stack Snackbar en toda la APP */}\n\t\t\t<SnackbarProvider\n\t\t\t\tmaxSnack={3}\n\t\t\t\tpreventDuplicate\n\t\t\t\t//Botones con acciones.\n\t\t\t\taction={key => (\n\t\t\t\t\t<IconButton size=\"small\" onClick={onClickDismiss(key)}>\n\t\t\t\t\t\t<CloseIcon style={{color: tema === \"light\" ? 'white' : 'black'}} />\n\t\t\t\t\t</IconButton>\n\t\t\t\t)}\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'bottom',\n\t\t\t\t\thorizontal: 'right'\n\t\t\t\t}}\n\t\t\t\tref={alertRef}\n\t\t\t>\n\t\t\t\t<HeaderMenu />\n\t\t\t\t<Routers />\n\t\t\t</SnackbarProvider>\n\t\t</ThemeProvider>\n\t);\n}\n\n//Mapeo del store de redux\nconst mapStateToProps = state => {\n\treturn {\n\t\ttema: state.settings.tema\n\t};\n};\n\n//Conectar con redux\nexport default connect(mapStateToProps)(App);","//Verificar si ya existe el almacenamiento local de la variable\n//theme para evitar reescribirla\nif (!localStorage.getItem(\"theme\")){\n  localStorage.setItem(\"theme\", \"light\");\n}\n\n//Inicar valor del state.\nconst initialState = {\n  tema: localStorage.getItem(\"theme\")\n};\n\n// action es el valor devuelto por el action\n//action.payload será el valor que quiero añadir, borrar, etc\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case \"UPDATE_THEME\": {\n      //Verificar tema actual\n      const temaActual = state.tema;\n\n      //Cambiar tema actual\n      let changeThemeTo = temaActual === 'light' ? 'dark' : 'light';\n\n      //Aplicar cambio en el almacenamiento local.\n      localStorage.setItem(\"theme\", changeThemeTo);\n\n      //Regresar state.\n      return {\n        ...state,\n        tema: changeThemeTo\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n// Seleccionar estado del state.\n// export const selectTheme = state => state.settings.tema;\n","//Inicar valor del state.\nconst initialState = {\n  user: '',\n  pass: '',\n  checkbox: false,\n};\n\n// action es el valor devuelto por el action\n//action.payload será el valor que quiero añadir, borrar, etc\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case \"UPDATE_INPUT_VALUE\": {\n      //Obtener input\n      const e = payload.input;\n\n      //Obtener valores del input\n      const name = e.target.name;\n      const value = name === 'checkbox' ? e.target.checked : e.target.value;\n\n      //Regresar state.\n      return {\n        ...state,\n        [name]: value,\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n// Seleccionar estado del state.\n// export const selectDataLogin = state => state.dataLogin.tema;\n","//Inicar valor del state.\nconst initialState = {\n  dataA: null,\n  dataN: null,\n  content: 'noticias',\n};\n\n// action es el valor devuelto por el action\n//action.payload será el valor que quiero añadir, borrar, etc\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'CHANGE_CONTENT_NEWS': {\n      return {\n        ...state,\n        content: payload,\n      }\n    }\n    case 'UPDATE_NEWS_ANUNCIOS': {\n      return {\n        ...state,\n        dataA: payload\n      }\n    }\n    case 'UPDATE_NEWS_NOTICIAS': {\n      return {\n        ...state,\n        dataN: payload\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n// Seleccionar estado del state.\n// export const selectDataLogin = state => state.dataLogin.tema;\n","//Inicar valor del state.\nconst initialState = {\n\tauth: false,\n\tloginSI: false,\n\tvalidating: false,\n\tredirect: false\n};\n\n// action es el valor devuelto por el action\n//action.payload será el valor que quiero añadir, borrar, etc\nexport default (state = initialState, { type, payload }) => {\n\tswitch (type) {\n\t\tcase 'UPDATE_VALIDATING_FORM': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tvalidating: payload.validating\n\t\t\t};\n\t\t}\n\t\tcase 'LOGIN_SUCCESS_FROM_LOGIN': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauth: true,\n\t\t\t\tloginSI: true\n\t\t\t};\n\t\t}\n\t\tcase 'RELOGIN_SUCCESS': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tauth: true,\n\t\t\t\tredirect: payload\n\t\t\t};\n\t\t}\n\t\tcase 'LOGOUT': {\n\t\t\treturn {\n\t\t\t\tauth: false,\n\t\t\t\tloginSI: false,\n\t\t\t\tvalidating: false,\n\t\t\t\tredirect: false\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\n// Seleccionar estado del state.\n// export const selectDataLogin = state => state.dataLogin.tema;","//Inicar valor del state.\nconst initialState = {\n  cedula: '',\n  cedulaSin: '',\n  name: '',\n  curso: '',\n  seccion: '',\n  nota: '',\n  horario: '',\n  profeGuia: '',\n  privilegio: '',\n  avatar: '',\n  token: '',\n};\n\n// action es el valor devuelto por el action\n//action.payload será el valor que quiero añadir, borrar, etc\nexport default (state = initialState, { type, payload }) => {\n  switch (type) {\n    case 'UPDATE_DATA_USER': {\n      console.log(payload);\n      return {\n        ...state,\n        ...payload,\n      }\n    }\n    default: {\n      return state;\n    }\n  }\n};\n\n// Seleccionar estado del state.\n// export const selectDataLogin = state => state.dataLogin.tema;\n","//Inicar valor del state.\nconst initialState = {\n\tcontent: 'home',\n\tinfoDialog: false,\n\tdrawer: {\n\t\topen: false,\n\t\tindex: 0\n\t},\n\tmodifySection: {\n\t\tcedula: '',\n\t\tname: '',\n\t\toption: 'insert',\n\t\tpass: '',\n\t\tprivilegio: 'V-',\n\t\tcurso: '',\n\t\tseccion: '',\n\t\tloading: false\n\t}\n};\n\n// action es el valor devuelto por el action\n//action.payload será el valor que quiero añadir, borrar, etc\nexport default (state = initialState, { type, payload }) => {\n\tswitch (type) {\n\t\tcase 'UPDATE_PANEL_CONTENT': {\n\t\t\tconst noInfo = ['home', 'news'];\n\t\t\tlet found = false;\n\t\t\tconst storage = JSON.parse(localStorage.getItem('noListStorage'));\n\n\t\t\t//Verificar listas\n\t\t\tnoInfo.map(content => {\n\t\t\t\tif (payload === content && !found) {\n\t\t\t\t\tfound = true;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t});\n\n\t\t\tif (storage !== null) {\n\t\t\t\tstorage.map(content => {\n\t\t\t\t\tif (payload === content && !found) {\n\t\t\t\t\t\tfound = true;\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst open = found ? false : true;\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcontent: payload,\n\t\t\t\tinfoDialog: open\n\t\t\t};\n\t\t}\n\t\tcase 'UPDATE_INFO_DIALOG': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinfoDialog: !state.infoDialog\n\t\t\t};\n\t\t}\n\t\tcase 'TOGGLE_DRAWER': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdrawer: {\n\t\t\t\t\t...state.drawer,\n\t\t\t\t\topen: !state.drawer.open\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase 'UPDATE_INDEX_DRAWER': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tdrawer: {\n\t\t\t\t\t...state.drawer,\n\t\t\t\t\tindex: payload\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase 'UPDATE_INFO_MODIFY': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmodifySection: {\n\t\t\t\t\t...payload,\n\t\t\t\t\tpass: 'none',\n\t\t\t\t\toption: 'update'\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase 'UPDATE_INFO_INPUT': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmodifySection: {\n\t\t\t\t\t...state.modifySection,\n\t\t\t\t\t...payload\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase 'UPDATE_MODIFY_LOADING': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tmodifySection: {\n\t\t\t\t\t...state.modifySection,\n\t\t\t\t\tloading: !state.modifySection.loading\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tcase 'LOGOUT': {\n\t\t\t//Reset State\n\t\t\treturn {\n\t\t\t\tcontent: 'home',\n\t\t\t\tinfoDialog: false,\n\t\t\t\ttoggleDrawer: false,\n\t\t\t\tmodifySection: {\n\t\t\t\t\tcedula: '',\n\t\t\t\t\tname: '',\n\t\t\t\t\toption: 'insert',\n\t\t\t\t\tpass: '',\n\t\t\t\t\tprivilegio: 'V-',\n\t\t\t\t\tcurso: '',\n\t\t\t\t\tseccion: '',\n\t\t\t\t\tloading: false\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\n// Seleccionar estado del state.\n// export const selectTheme = state => state.settings.tema;","//Redux\nimport { createStore, combineReducers } from 'redux';\n\n//Reducers\nimport settings from './reducers/settings';\nimport dataLogin from './reducers/dataLogin';\nimport news from './reducers/news';\nimport loginStatus from './reducers/loginStatus';\nimport userData from './reducers/userData';\nimport panelSettings from './reducers/panelSettings';\n\nconst reducers = combineReducers({\n    settings,\n    dataLogin,\n    news,\n    loginStatus,\n    userData,\n    panelSettings\n});\n\n\nconst store = createStore(\n    reducers\n);\n\nexport default store;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","//React\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\n//Components\nimport App from './views/App';\n\n\n//Redux\nimport store from './store';\nimport { Provider } from 'react-redux';\n\n//Styles\nimport './assets/scss/Base.scss';\n\n//ServiceWorker\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>, document.getElementById('root'));\nserviceWorker.unregister();\n","//Se crea una acciรณn la cual serรก capturada\n//por el reducer correspondiente.\nconst toggleDrawer = () => {\n  return {\n    type: \"TOGGLE_DRAWER\"\n  }\n}\n\nexport default toggleDrawer;","//Se crea una acción la cual será capturada\n//por el reducer correspondiente.\nconst reloginSuccess = (redirect) => {\n  return {\n    type: \"RELOGIN_SUCCESS\",\n    payload: redirect\n  }\n}\n\nexport default reloginSuccess;","//Se crea una acción la cual será capturada\n//por el reducer correspondiente.\nconst updatePanelContent = (valor) => {\n  return {\n    type: \"UPDATE_PANEL_CONTENT\",\n    payload: valor\n  }\n}\n\nexport default updatePanelContent;","//Se crea una acciรณn la cual serรก capturada\n//por el reducer correspondiente.\nconst updateIndexDrawer = (index) => {\n  return {\n    type: \"UPDATE_INDEX_DRAWER\",\n\t\tpayload: index\n  }\n}\n\nexport default updateIndexDrawer;","//React\nimport React, { useEffect } from 'react';\nimport { Link } from 'react-router-dom';\n\n//Material-UI\nimport { Backdrop } from '@material-ui/core';\n\n//redux\nimport { connect } from 'react-redux';\nimport updateDataUser from '../actions/login/updateDataUser';\nimport reloginSuccess from '../actions/login/reloginSuccess';\n\nfunction ReloginVerify({\n\tauth,\n\tcheckbox,\n\tloginSI,\n\tupdateDataUser,\n\treloginSuccess,\n\tredirect,\n\tchildren\n}) {\n\tuseEffect(() => {\n\t\t//Titulo\n\t\tdocument.title = 'La Candelaria - Panel';\n\n\t\t//Lugar de petición hacia el servidor\n\t\tconst fetchData = async key => {\n\t\t\t//QUERY\n\t\t\tconst query = true;\n\t\t\tif (query) {\n\t\t\t\tconst dataTest = {\n\t\t\t\t\tcedula: 'A-28432441',\n\t\t\t\t\tcedulaSin: '28432441',\n\t\t\t\t\tname: 'José ortiz',\n\t\t\t\t\tcurso: '',\n\t\t\t\t\tseccion: '',\n\t\t\t\t\tnota: '',\n\t\t\t\t\thorario: '',\n\t\t\t\t\tprofeGuia: '',\n\t\t\t\t\tprivilegio: 'A-',\n\t\t\t\t\tavatar: 'reckerSITO',\n\t\t\t\t\ttoken: 'testDATA47'\n\t\t\t\t};\n\n\t\t\t\tupdateDataUser(dataTest);\n\n\t\t\t\t//Se le pasa el parámetro false para evitar que vuelva\n\t\t\t\t//a verificar la redirección si está activa. Así se\n\t\t\t\t//evita que la app revise el usuario 2 veces o más.\n\t\t\t\treloginSuccess(false);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\tlet CanselaSHION = false;\n\n\t\tif (!CanselaSHION) {\n\t\t\t//console.log('Contador los render');\n\n\t\t\t//Verificar login desde el FORM\n\t\t\tif (loginSI) {\n\t\t\t\t//Verificar checkbox para guardar datos.\n\t\t\t\t// console.log(\"KEY seteada\");\n\t\t\t\tif (checkbox) {\n\t\t\t\t\t//Datos permanentes.\n\t\t\t\t\tlocalStorage.setItem('key', true);\n\t\t\t\t\tsessionStorage.setItem('key', true);\n\t\t\t\t} else {\n\t\t\t\t\t//Datos de SOLO sesión.\n\t\t\t\t\tsessionStorage.setItem('key', true);\n\t\t\t\t}\n\t\t\t\t//Verificar si no viene de una redirección de la misma app\n\t\t\t\t//y proviene entrando directamente al panel.\n\t\t\t} else if (!auth) {\n\t\t\t\t// console.log(\"verificando datos locales....\");\n\t\t\t\tconst keyL = JSON.parse(localStorage.getItem('key'));\n\t\t\t\tconst keyS = JSON.parse(sessionStorage.getItem('key'));\n\n\t\t\t\t//Verificar primero si existe key local.\n\t\t\t\tif (keyL === true) {\n\t\t\t\t\tfetchData(keyL);\n\t\t\t\t} else if (keyS === true) {\n\t\t\t\t\tfetchData(keyS);\n\t\t\t\t} else {\n\t\t\t\t\t//Redirecciona al usuario al LOGIN al no estar auth\n\t\t\t\t\t//por la web y al no tener datos locales guardados.\n\t\t\t\t\tdocument.getElementById('redirectToLogin').click();\n\t\t\t\t}\n\t\t\t} else if (auth) {\n\t\t\t\t//Verificar la redirección SIN datos seteados.\n\t\t\t\tif (redirect) {\n\t\t\t\t\t//keys\n\t\t\t\t\tconst keyL = JSON.parse(localStorage.getItem('key'));\n\t\t\t\t\tconst keyS = JSON.parse(sessionStorage.getItem('key'));\n\n\t\t\t\t\t//Verificar primero si existe key local.\n\t\t\t\t\tif (keyL === true) {\n\t\t\t\t\t\tfetchData(keyL);\n\t\t\t\t\t} else if (keyS === true) {\n\t\t\t\t\t\tfetchData(keyS);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//El checkeo de la redirección es obligatorio si no se\n\t\t\t\t//quiere que el programa entre en bucle. xD\n\t\t\t}\n\t\t}\n\n\t\t//Al desmontar componente\n\t\treturn () => {\n\t\t\tCanselaSHION = true;\n\t\t};\n\t});\n\n\t//Verificar auth\n\tif (auth) {\n\t\t//Renderizar contenido\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t{ children }\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n\t//Al no estar verificado.\n\treturn <LoadingVerifyRelogin />;\n}\n\nfunction LoadingVerifyRelogin() {\n\treturn (\n\t\t<Backdrop open={true}>\n\t\t\t<div className=\"VerifyReloginDiv\">\n\t\t\t\t<h1>Fallo al intentar loguear</h1>\n\t\t\t\t<p>\n\t\t\t\t\tA ocurrido un fallo al intertar acceder al panel, para\n\t\t\t\t\tsolucionar este inconveniente de click{' '}\n\t\t\t\t\t<Link id=\"redirectToLogin\" onClick={clearAllData} to=\"/\">\n\t\t\t\t\t\taquí\n\t\t\t\t\t</Link>{' '}\n\t\t\t\t\tsi no es redirijido automáticamente.\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t</Backdrop>\n\t);\n}\n\nexport function clearAllData() {\n\t//Limpiar toda la data para solventar errores.\n\tconst theme = localStorage.getItem('theme');\n\tconst dialogList = localStorage.getItem('noListStorage');\n\n\tlocalStorage.clear();\n\tsessionStorage.clear();\n\n\t//Para mantener la configuración del usuario.\n\tlocalStorage.setItem('theme', theme);\n\tlocalStorage.setItem('noListStorage', dialogList);\n}\n\n//REDUX\nconst mapStateToProps = state => ({\n\tauth: state.loginStatus.auth,\n\tcheckbox: state.dataLogin.checkbox,\n\tloginSI: state.loginStatus.loginSI,\n\tredirect: state.loginStatus.redirect\n});\n\nconst mapDispatchToProps = {\n\tupdateDataUser,\n\treloginSuccess\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ReloginVerify);","//Se crea una acción la cual será capturada\n//por el reducer correspondiente.\nconst updateDataUser = (valor) => {\n  return {\n    type: \"UPDATE_DATA_USER\",\n    payload: valor\n  }\n}\n\nexport default updateDataUser;"],"sourceRoot":""}