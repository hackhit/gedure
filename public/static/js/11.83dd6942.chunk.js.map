{"version":3,"sources":["actions/updateValue.js","actions/updateLoading.js","components/ButtonLoading.js","components/RendersGlobal.js","../../../node_modules/@material-ui/icons/Visibility.js","../../../node_modules/@material-ui/icons/VisibilityOff.js","actions/errorInfo.js","components/reutilizar/verifyErrorCustom.js","components/reutilizar/donwloadFiles.js","components/LoadArchives.js","views/panel/contentChangeAdmin/cargar/RenderCargar.js"],"names":["updateInputValue","input","type","payload","updateLoading","value","ProgressBar","color","progress","label","Fragment","variant","style","position","top","BackDropLoading","loading","progressBar","colorsito","progressLabel","open","zIndex","ButtonLoading","estilo","text","onClick","backDrop","RenderSelect","val","action","data","error","empty","classNameSet","customWidth","status","width","displayEmpty","name","onChange","className","values","map","element","i","key","message","RenderRadios","accion","component","title","aria-label","row","control","labelPlacement","RenderInputs","textarea","maxRows","maxWidth","size","visibleToggle","focus","useState","visibility","setVisibility","textareaConfig","rows","rowsMax","autoFocus","multiline","InputProps","endAdornment","helperText","_interopRequireDefault","require","Object","defineProperty","exports","default","_react","_default","createElement","d","errorInfo","verifyErrorCustom","InputsArray","errorStatus","length","minValue","downloadFilesNotResponse","url","link","document","href","fileName","split","setAttribute","body","appendChild","click","downloadFiles","response","fileExtension","window","URL","createObjectURL","Blob","LoadArchives","reset","idName","accepted","maxSizeFile","maxInfo","multiple","updatePreview","archivos","setArchivos","useEffect","e","target","files","textAlign","accept","id","display","change","update","currentAvatar","htmlFor","startIcon","disableElevation","unique","flexDirection","marginTop","UploadSelectBox","upload","ShowCursos","curso","seccion","cursoSelect","CursosList","seccionSelect","SeccionList","item","xs","sm","md","mapDispatchToProps","updateValue","connect","state","panelSettings","uploadSection","axios","enqueueSnackbar","useSnackbar","option","setProgress","setProgressLabel","handleChange","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","fetchData","dataForm","a","post","headers","res","description","get","responseType","donwloadFiles","handleSubmit","preventDefault","formData","FormData","maxPerList","listArchivos","colas","ceil","maxFilesFound","nCola","archivo","append","container","spacing","justify","autoComplete","encType","method","onSubmit","direction","alignItems"],"mappings":"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","file":"static/js/11.83dd6942.chunk.js","sourcesContent":["const updateInputValue = (input,type) => {\n  return {\n    type: `UPDATE_VALUE_${type}`,\n    payload: input\n  }\n}\n\nexport default updateInputValue;","//Se crea una acciรณn la cual será capturada\n//por el reducer correspondiente.\nconst updateLoading = (value,type) => {\n  return {\n    type: `UPDATE_LOADING_${type}`,\n    payload: value\n  }\n}\n\nexport default updateLoading;","//React\nimport React from 'react';\n\n//Material-UI\nimport { Button, CircularProgress, Backdrop } from '@material-ui/core';\n\nfunction ProgressBar({color, progress, label}) {\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<CircularProgress \n\t\t\t\tcolor={color} \n\t\t\t\tvariant=\"static\" \n\t\t\t\tvalue={progress} \n\t\t\t/>\n\t\t\t<span style={{position: 'relative', top: '-30px'}}>\n\t\t\t\t{progress}%\n\t\t\t</span>\n\t\t\t{label && (\n\t\t\t\t<span style={{position: 'relative', top: '-10px'}}>\n\t\t\t\t\t{label}\n\t\t\t\t</span>\n\t\t\t)}\n\t\t</React.Fragment>\n\t);\n}\n\nfunction BackDropLoading({ \n\tloading, \n\tprogress, \n\tprogressBar, \n\tcolorsito, \n\tprogressLabel \n}) {\n\tif(loading && progressBar && progress !== 100) {\n\t\treturn (\n\t\t\t<Backdrop open={true} style={{zIndex: 200}}>\n\t\t\t\t<ProgressBar \n\t\t\t\t\tcolor={colorsito} \n\t\t\t\t\tprogress={progress} \n\t\t\t\t\tlabel={progressLabel}\n\t\t\t\t/>\n\t\t\t</Backdrop>\n\t\t);\n\t}else {\n\t\treturn (\n\t\t\t<Backdrop open={true} style={{zIndex: 200}}>\n\t\t\t\t<CircularProgress color={colorsito} />\n\t\t\t</Backdrop>\n\t\t);\n\t}\n}\n\nfunction ButtonLoading({ \n\testilo, \n\tcolorsito, \n\tloading, \n\ttext, \n\tonClick = ()=>{},\n\tprogressBar = false, \n\tprogress = 0,\n\tprogressLabel = false,\n\tbackDrop = false\n}) {\n\tif (loading && !backDrop) {\n\t\tif (progressBar && progress !== 100) {\n\t\t\treturn (\n\t\t\t\t<ProgressBar \n\t\t\t\t\tcolor={colorsito} \n\t\t\t\t\tprogress={progress} \n\t\t\t\t\tlabel={progressLabel}\n\t\t\t\t/>\n\t\t\t);\n\t\t}else {\n\t\t\treturn (\n\t\t\t\t<CircularProgress color={colorsito} />\n\t\t\t);\n\t\t}\n\t} else {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Button onClick={onClick} variant={estilo} type=\"submit\" color={colorsito}>\n\t\t\t\t\t{text}\n\t\t\t\t</Button>\n\t\t\t\t{loading && <BackDropLoading\n\t\t\t\t\tloading={true}\n\t\t\t\t\tprogress={progress}\n\t\t\t\t\tprogressBar={progressBar}\n\t\t\t\t\tcolorsito={colorsito}\n\t\t\t\t\tprogressLabel={progressLabel}\n\t\t\t\t/> }\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default ButtonLoading;","//React\nimport React, { useState } from 'react';\n\n//Material-UI\nimport {\n  TextField,\n  Select,\n  MenuItem,\n  Radio,\n  RadioGroup,\n  FormControl,\n  FormLabel,\n  FormControlLabel,\n  FormHelperText,\n  InputAdornment,\n  IconButton\n} from '@material-ui/core';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nexport function RenderSelect({ val, action, data, error = false, empty = true, classNameSet = false, customWidth = false }) {\n  return (\n    <FormControl error={error && error.status} style={{ width: customWidth ? (customWidth) : '100%' }}>\n      <Select\n        displayEmpty\n        name={data.name}\n        value={val}\n        onChange={action}\n        className={classNameSet ? (classNameSet) : null}\n      >\n        {data.values.map((element, i) => {\n          if (i === 0 && empty) {\n            return (\n              <MenuItem key={i} value={element.value}>\n                <em>{element.name}</em>\n              </MenuItem>\n            );\n          } else {\n            return <MenuItem key={i} value={element.value}>{element.name}</MenuItem>;\n          }\n        })}\n      </Select>\n      {error && <FormHelperText>{error.message}</FormHelperText>}\n    </FormControl>\n  );\n}\n\nexport function RenderRadios({ val, accion, data }) {\n  return (\n    <FormControl component=\"fieldset\">\n      <FormLabel color={data.color} component=\"legend\">\n        {data.title}\n      </FormLabel>\n      <RadioGroup aria-label={data.name} name={data.name} value={val} onChange={accion} row>\n        {data.values.map((element, i) => {\n          return (\n            <FormControlLabel\n              key={i}\n              value={element.value}\n              control={<Radio color={data.color} />}\n              label={element.name}\n              labelPlacement=\"end\"\n            />\n          );\n        })}\n      </RadioGroup>\n    </FormControl>\n  );\n}\n\nexport function RenderInputs({ \n\tdata, \n\taccion, \n\terror, \n\tvariant=\"outlined\", \n\ttextarea=false, \n\tmaxRows=6,\n\tmaxWidth = false, \n\tsize = 'medium', \n\tvisibleToggle = false, \n\tfocus = false\n}) {\n  const { val, name, label } = data;\n  const { status, message } = error;\n  \n  const [visibility, setVisibility] = useState(false);\n\n  const handleClick = () => {\n    setVisibility(!visibility);\n  }\n\n  const textareaConfig = {\n    rows: 4,\n    rowsMax: maxRows\n  }\n  return (\n    <TextField\n      type={visibleToggle ? visibility ? \"text\": \"password\" : \"text\"}\n      name={name}\n      value={val}\n      label={label}\n      size={size}\n      autoFocus={focus}\n      style={{ width: '100%', maxWidth: maxWidth ? maxWidth : \"none\"}}\n      variant={variant}\n      onChange={accion}\n      multiline={textarea}\n      InputProps={{\n        endAdornment: visibleToggle ? \n        (\n          <InputAdornment position=\"end\">\n            <IconButton onClick={handleClick} size={size}>\n              {visibility ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        )\n        :\n        null\n      }}\n      {...textareaConfig}\n      error={status}\n      helperText={status && message}\n    />\n  );\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","//Se crea una acciรณn la cual será capturada\n//por el reducer correspondiente.\nconst errorInfo = (input,message,type) => {\n  return {\n    type: `ERROR_INFO_${type}`,\n    payload: {\n      input,\n      message\n    }\n  }\n}\n\nexport default errorInfo;","const verifyErrorCustom = (InputsArray, errorInfo, type) => {\n\tlet errorStatus = false;\n\t//Verificar datos\n\tInputsArray.map(input => {\n\t\tif (input.value.length === 0) {\n\t\t\t//Empty\n\t\t\terrorInfo(input.name, 'Campo obligatorio', type);\n\t\t\terrorStatus = true;\n\t\t} else if (input.minValue && input.value.length < input.minValue) {\n\t\t\t//No valid cédula\n\t\t\terrorInfo(input.name, 'No válido', type);\n\t\t\terrorStatus = true;\n\t\t}\n\t\treturn null;\n\t});\n\t\n\treturn errorStatus;\n}\n\n\nexport default verifyErrorCustom;","const downloadFiles = (response, fileName, fileExtension) => {\n\t//Url del archivo\n\tconst url = window.URL.createObjectURL(new Blob([response]));\n\t//Elemento Link\n\tconst link = document.createElement('a');\n\t//Linkear url\n\tlink.href = url;\n\t//Atributos,\n\tlink.setAttribute('download', `${fileName}.${fileExtension}`);\n\t//Insertar elemento\n\tdocument.body.appendChild(link);\n\t//Descargar\n\tlink.click();\n}\n\nexport const downloadFilesNotResponse = (url) => {\n\t//Elemento Link\n\tconst link = document.createElement('a');\n\t//Linkear url\n\tlink.href = url;\n\t//Obtener nombre del archivo\n\tlet fileName = url.split('/');\n\tfileName = fileName[fileName.length - 1];\n\t//Atributos,\n\tlink.setAttribute('download', `${fileName}`);\n\t//Insertar elemento\n\tdocument.body.appendChild(link);\n\t//Descargar\n\tlink.click();\n}\n\nexport default downloadFiles;","//Reacy\nimport React, { useState, useEffect } from 'react';\n\n//Material-UI\nimport { Button } from '@material-ui/core';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\n\nfunction LoadArchives({\n\tname,\n\tlabel,\n\treset,\n\taction,\n\tidName,\n\ttype,\n\taccepted,\n\tmaxSizeFile,\n\tmaxInfo = true,\n\tmultiple = false,\n\tupdatePreview = false\n}) {\n\tconst [archivos, setArchivos] = useState(0);\n\t//Acción al cambiar los archivos\n\tconst handleChange = e => {\n\t\tconst data = e.target.files;\n\t\tlet change = false;\n\n\t\t//Actualizar datos\n\t\taction(e, type);\n\n\t\t//Update Preview Avatar\n\t\tif (updatePreview) {\n\t\t\tconst { update, currentAvatar } = updatePreview;\n\t\t\tif (data[0]) {\n\t\t\t\tupdate(URL.createObjectURL(data[0]));\n\t\t\t} else {\n\t\t\t\tupdate(currentAvatar);\n\t\t\t}\n\t\t}\n\n\t\t//Visor de archivos actuales\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tsetArchivos(i + 1);\n\t\t\tchange = true;\n\t\t}\n\t\t//Verificar cambios\n\t\t!change && setArchivos(0);\n\t};\n\n\t//EFECT RESET\n\tuseEffect(\n\t\t() => {\n\t\t\t//Custom Input\n\t\t\tconst e = {\n\t\t\t\ttarget: {\n\t\t\t\t\tname: name,\n\t\t\t\t\tfiles: []\n\t\t\t\t}\n\t\t\t};\n\t\t\t//Set values\n\t\t\tsetArchivos(0);\n\t\t\t//Actualizar datos\n\t\t\taction(e, type);\n\t\t},\n\t\t[reset, action, name, type]\n\t);\n\n\treturn (\n\t\t<div className=\"uploadArchives\" style={{ textAlign: 'center' }}>\n\t\t\t<input\n\t\t\t\taccept={accepted}\n\t\t\t\tid={idName}\n\t\t\t\tmultiple={multiple}\n\t\t\t\ttype=\"file\"\n\t\t\t\tname={name}\n\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\tonChange={handleChange}\n\t\t\t/>\n\t\t\t<label htmlFor={idName}>\n\t\t\t\t<Button\n\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\tstartIcon={<CloudUploadIcon />}\n\t\t\t\t\tdisableElevation\n\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t>\n\t\t\t\t\tCargar {(multiple && label.multiple) ? label.multiple : label.unique}\n\t\t\t\t</Button>\n\t\t\t</label>\n\t\t\t{maxInfo && \n\t\t\t\t<div \n\t\t\t\t\tstyle={{ display: 'flex', flexDirection: 'column', marginTop: '5px' }}\n\t\t\t\t>\n\t\t\t\t\t{(multiple && maxSizeFile.multiple) ? (\n\t\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t\t<span>Archivos seleccionados: {archivos}</span>\n\t\t\t\t\t\t\t<span>(Tamaño máximo: {maxSizeFile.multiple})</span>\n\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<span>(Tamaño máximo: {maxSizeFile.unique})</span>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n}\n\nexport default LoadArchives;","import React, { useState } from 'react';\n\n//Material-UI\nimport { Grid, Paper } from '@material-ui/core';\n\n//Components\nimport { RenderSelect } from '../../../../components/RendersGlobal';\nimport { CursosList, SeccionList } from '../../../../components/ListDataGlobal';\nimport ButtonLoading from '../../../../components/ButtonLoading';\nimport LoadArchives from '../../../../components/LoadArchives';\nimport verifyErrorCustom from '../../../../components/reutilizar/verifyErrorCustom';\nimport donwloadFiles from '../../../../components/reutilizar/donwloadFiles';\n\n//Redux\nimport { connect } from 'react-redux';\nimport updateValue from '../../../../actions/updateValue';\nimport errorInfo from '../../../../actions/errorInfo';\nimport updateLoading from '../../../../actions/updateLoading';\n\n//Notistack\nimport { useSnackbar } from 'notistack';\n\nfunction RenderCargar({ data, updateValue, errorInfo, updateLoading }) {\n\t// Global Const\n\tconst axios = window.axios;\n\t\n\t//Crear un SnackBar\n\tconst { enqueueSnackbar } = useSnackbar();\n\t//Destruct\n\tconst { option, curso, seccion, loading, files, error } = data;\n\t\n\t//Progress\n\tconst [progress, setProgress] = useState(0);\n\t\n\t//Label\n\tconst [progressLabel, setProgressLabel] = useState('');\n\n\tfunction handleChange(e) {\n\t\t//Actualizar\n\t\tupdateValue(e, 'UPLOAD');\n\t}\n\t\n\t//OnProgress\n\tconst onUploadProgress = (progressEvent) => {\n\t\tlet percentCompleted = Math.round(\n\t\t\tprogressEvent.loaded * 100 / progressEvent.total\n\t\t);\n\t\t\n\t\tsetProgress(percentCompleted);\n\t}\n\n\tconst fetchData = async (dataForm, type) => {\n\t\ttry {\n\t\t\tlet res;\n\n\t\t\tif (type === 'matricula') {\n\t\t\t\tres = await axios.post('api/upload/matricula', dataForm, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'multipart/form-data'\n\t\t\t\t\t},\n\t\t\t\t\tonUploadProgress: onUploadProgress\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tres = await axios.post('api/upload/boletas', dataForm, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'multipart/form-data'\n\t\t\t\t\t},\n\t\t\t\t\tonUploadProgress: onUploadProgress\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst { description, status } = res.data;\n\t\t\t\n\t\t\tlet color;\n\t\t\tif (status === 'not_all_upload_boletas') {\n\t\t\t\tcolor = 'warning';\n\t\t\t}else {\n\t\t\t\tcolor = 'success';\n\t\t\t}\n\n\t\t\tenqueueSnackbar(description, {\n\t\t\t\tvariant: color\n\t\t\t});\n\t\t\t\n\t\t\t//Otras acciones a realizar\n\t\t\tif (type === 'boletas') {\n\t\t\t\t//Actualizar log\n\t\t\t}else {\n\t\t\t\t//Descargar excel\n\t\t\t\tconst fileName = res.data.fileName;\n\t\t\t\tconst fileExtension = res.data.fileExtension;\n\t\t\t\t\n\t\t\t\t//Consultar archivo\n\t\t\t\tres = await axios.get(\n\t\t\t\t\t`api/matricula/${fileName}.${fileExtension}`, {\n\t\t\t\t\tresponseType: 'blob'\n\t\t\t\t});\n\t\t\t\t\n\t\t\t\tdonwloadFiles(res.data, fileName, fileExtension);\n\t\t\t}\n\t\t} catch (error) {\n\t\t\t\n\t\t\tif (error.response){\n\t\t\t\t//Errores HTTP\n\t\t\t\tconst { status, data } = error.response;\n\n\t\t\t\tif (status === 400) {\n\t\t\t\tenqueueSnackbar(data.description, {\n\t\t\t\t\t\tvariant: 'warning'\n\t\t\t\t\t});\n\t\t\t\t} else if (status === 403) {\n\t\t\t\t\tenqueueSnackbar(data.description, {\n\t\t\t\t\t\tvariant: 'error'\n\t\t\t\t\t});\n\t\t\t\t} else if (status === 422) {\n\t\t\t\t\tenqueueSnackbar(data.description, {\n\t\t\t\t\t\tvariant: 'error'\n\t\t\t\t\t});\n\t\t\t\t} else if (status === 500) {\n\t\t\t\t\tenqueueSnackbar('No se ha podido conectar con la base de datos', {\n\t\t\t\t\t\tvariant: 'error'\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tenqueueSnackbar('Error interno en el servidor', {\n\t\t\t\t\t\tvariant: 'error'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}else {\n\t\t\t\tenqueueSnackbar('Error interno en el sistema', {\n\t\t\t\t\tvariant: 'error'\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t//Loading Toggle\n\t\tupdateLoading(false, 'UPLOAD');\n\t\t\n\t\t//Reset progress\n\t\tsetProgress(0);\n\t};\n\n\tconst handleSubmit = async e => {\n\t\te.preventDefault();\n\t\tlet error;\n\n\t\t//Verificar datos\n\t\tif (files.length === 0) {\n\t\t\tenqueueSnackbar('Debe cargar algún archivo primero', {\n\t\t\t\tvariant: 'warning'\n\t\t\t});\n\t\t\terror = true;\n\t\t}\n\n\t\tconst InputsArray = [\n\t\t\t{\n\t\t\t\tvalue: curso,\n\t\t\t\tname: 'curso'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: seccion,\n\t\t\t\tname: 'seccion'\n\t\t\t}\n\t\t];\n\n\t\terror = verifyErrorCustom(InputsArray, errorInfo, 'UPDATE');\n\n\t\t//Verificar que no existan errores en los datos\n\t\tif (error) {\n\t\t\treturn null;\n\t\t}\n\n\t\t//Config\n\t\tlet formData = new FormData();\n\t\tconst maxPerList = 20;\n\t\tconst listArchivos = files.length;\n\n\t\t//Verificar máximo\n\t\tif (listArchivos > 20) {\n\t\t\t//Calcular cuantas colas hay que hacer.\n\t\t\tconst colas = Math.ceil(listArchivos / maxPerList);\n\t\t\t\n\t\t\t//Boton para evitar seguir buscando archivos.\n\t\t\tlet maxFilesFound = false;\n\t\t\t\n\t\t\t//Repetir cada cola\n\t\t\tfor (let nCola = 0; nCola < colas; nCola++) {\n\t\t\t\t//Repetir cada añadido de datos en cada cola\n\t\t\t\tfor (let i = 0; i < maxPerList && !maxFilesFound; i++) {\n\t\t\t\t\t//Archivo\n\t\t\t\t\tconst archivo = files[i + (maxPerList * nCola)];\n\n\t\t\t\t\t//Insertar en la DATA\n\t\t\t\t\tformData.append(`files[]`, archivo);\n\t\t\t\t\t\n\t\t\t\t\tif (archivo.size / 1024 > 2048) {\n\t\t\t\t\t\tenqueueSnackbar(`Uno de los archivos supera el tamaño máximo`, {\n\t\t\t\t\t\t\tvariant: 'warning'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\n\t\t\t\t\t//Salir al llegar al máximo de archivos encontrados\n\t\t\t\t\tif (nCola === colas - 1 && i === (listArchivos - 1) - (maxPerList * nCola)) {\n\t\t\t\t\t\tmaxFilesFound = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//Data\n\t\t\t\tformData.append('curso', curso);\n\t\t\t\tformData.append('seccion', seccion);\n\t\t\t\t\n\t\t\t\t//Preparar todo\n\t\t\t\tsetProgressLabel(`${nCola+1}/${colas}`);\n\t\t\t\tupdateLoading(true, 'UPLOAD');\n\t\t\t\t\n\t\t\t\t//Esperar a la respuesta\n\t\t\t\tawait fetchData(formData, option);\n\t\t\t\t\n\t\t\t\t//Limpiar el dataForm después de cada consulta\n\t\t\t\tformData = new FormData();\n\t\t\t}\n\t\t} else {\n\t\t\t//Guardar todos los archivos en un array\n\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\tconst archivo = files[i];\n\t\t\t\tformData.append('files[]', archivo);\n\t\t\t}\n\t\t\t//Data\n\t\t\tformData.append('curso', curso);\n\t\t\tformData.append('seccion', seccion);\n\n\t\t\t//Verificar tamaños\n\t\t\tif (option === 'matricula' && files[0].size / 1024 > 1024) {\n\t\t\t\tenqueueSnackbar('El archivo supera el tamaño máximo', {\n\t\t\t\t\tvariant: 'warning'\n\t\t\t\t});\n\t\t\t\treturn null;\n\t\t\t} else if (option === 'boletas') {\n\t\t\t\tfor (let i = 0; i < files.length; i++) {\n\t\t\t\t\tconst archivo = files[i];\n\n\t\t\t\t\tif (archivo.size / 1024 > 2048) {\n\t\t\t\t\t\tenqueueSnackbar(`Uno de los archivos supera el tamaño máximo`, {\n\t\t\t\t\t\t\tvariant: 'warning'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//ENVIAR AJAX si no hay errores\n\t\t\tupdateLoading(true, 'UPLOAD');\n\t\t\tfetchData(formData, option);\n\t\t}\n\t};\n\n\treturn (\n\t\t<Grid container spacing={2} justify=\"center\">\n\t\t\t<Grid item xs={12} sm={5} md={3}>\n\t\t\t\t<Paper>\n\t\t\t\t\t<UploadSelectBox upload={option} action={handleChange} />\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={12} sm={10}>\n\t\t\t\t<Paper>\n\t\t\t\t\t<div className=\"Box\">\n\t\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\t\tencType=\"multipart/form-data\"\n\t\t\t\t\t\t\t\tmethod=\"POST\"\n\t\t\t\t\t\t\t\tonSubmit={handleSubmit}\n\t\t\t\t\t\t\t\tstyle={{ marginTop: '0' }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Grid container spacing={2} justify=\"center\">\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t\t<LoadArchives\n\t\t\t\t\t\t\t\t\t\t\taccepted={option === \n\t\t\t\t\t\t\t\t\t\t\t\t'matricula' ? '.csv,.xls,.xlsx,.ods' \n\t\t\t\t\t\t\t\t\t\t\t: \n\t\t\t\t\t\t\t\t\t\t\t'.pdf,.doc,.docx'}\n\t\t\t\t\t\t\t\t\t\t\tidName=\"uploadFiles\"\n\t\t\t\t\t\t\t\t\t\t\treset={option}\n\t\t\t\t\t\t\t\t\t\t\tfiles={files}\n\t\t\t\t\t\t\t\t\t\t\taction={updateValue}\n\t\t\t\t\t\t\t\t\t\t\tmultiple={option === 'matricula' ? false : true}\n\t\t\t\t\t\t\t\t\t\t\tmaxSizeFile={{ unique: '1MB', multiple: '2MB' }}\n\t\t\t\t\t\t\t\t\t\t\tlabel={{ unique: 'matricula', multiple: 'boletas' }}\n\t\t\t\t\t\t\t\t\t\t\tname=\"files\"\n\t\t\t\t\t\t\t\t\t\t\ttype=\"UPLOAD\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t<ShowCursos \n\t\t\t\t\t\t\t\t\t\terror={error} \n\t\t\t\t\t\t\t\t\t\taction={handleChange} \n\t\t\t\t\t\t\t\t\t\tcurso={curso} \n\t\t\t\t\t\t\t\t\t\tseccion={seccion} \n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} style={{ textAlign: 'center' }}>\n\t\t\t\t\t\t\t\t\t\t<Grid container \n\t\t\t\t\t\t\t\t\t\t\tdirection={'column'} \n\t\t\t\t\t\t\t\t\t\t\tjustify={'center'} \n\t\t\t\t\t\t\t\t\t\t\talignItems={'center'}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<ButtonLoading\n\t\t\t\t\t\t\t\t\t\t\t\testilo=\"outlined\"\n\t\t\t\t\t\t\t\t\t\t\t\tcolorsito=\"inherit\"\n\t\t\t\t\t\t\t\t\t\t\t\ttext=\"Cargar\"\n\t\t\t\t\t\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t\t\t\t\t\t\tprogressBar={true}\n\t\t\t\t\t\t\t\t\t\t\t\tprogress={progress}\n\t\t\t\t\t\t\t\t\t\t\t\tprogressLabel={progressLabel}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n}\n\nfunction UploadSelectBox({ upload, action }) {\n\t//Config de cargar\n\tconst uploadSelect = {\n\t\tname: 'option',\n\t\tvalues: [\n\t\t\t{\n\t\t\t\tvalue: 'matricula',\n\t\t\t\tname: 'Matricula'\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: 'boletas',\n\t\t\t\tname: 'Boletas'\n\t\t\t}\n\t\t]\n\t};\n\n\treturn (\n\t\t<div className=\"Box\">\n\t\t\t<span className=\"Box__Title\">Seleccionar carga</span>\n\t\t\t<div className=\"Box__Content\">\n\t\t\t\t<RenderSelect\n\t\t\t\t\taction={action}\n\t\t\t\t\tval={upload}\n\t\t\t\t\tdata={uploadSelect}\n\t\t\t\t\tclassNameSet=\"select\"\n\t\t\t\t\tcustomWidth=\"auto\"\n\t\t\t\t\tempty={false}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction ShowCursos({ action, curso, seccion, error }) {\n\t//Config de curso\n\tconst cursoSelect = {\n\t\tname: 'curso',\n\t\tvalues: [\n\t\t\t{\n\t\t\t\tvalue: '',\n\t\t\t\tname: 'Grado/Año'\n\t\t\t},\n\t\t\t...CursosList\n\t\t]\n\t};\n\n\t//Config de seccion\n\tconst seccionSelect = {\n\t\tname: 'seccion',\n\t\tvalues: [\n\t\t\t{\n\t\t\t\tvalue: '',\n\t\t\t\tname: 'Seccion'\n\t\t\t},\n\t\t\t...SeccionList\n\t\t]\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid item xs={5} sm={4} md={3}>\n\t\t\t\t<RenderSelect error={error.curso} action={action} val={curso} data={cursoSelect} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={5} sm={4} md={3}>\n\t\t\t\t<RenderSelect error={error.seccion} action={action} val={seccion} data={seccionSelect} />\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t);\n}\n\nconst mapStateToProps = state => ({\n\tdata: state.panelSettings.uploadSection\n});\n\nconst mapDispatchToProps = {\n\tupdateValue,\n\terrorInfo,\n\tupdateLoading\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RenderCargar);"],"sourceRoot":""}