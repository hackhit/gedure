{"version":3,"sources":["../../../node_modules/react-hook-form/dist/index.esm.js","../../../node_modules/@material-ui/icons/Visibility.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../../../node_modules/@material-ui/icons/VisibilityOff.js","../../../node_modules/@material-ui/core/esm/internal/SwitchBase.js","../../../node_modules/@material-ui/core/esm/RadioGroup/useRadioGroup.js","../../../node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","../../../node_modules/@material-ui/core/esm/RadioGroup/RadioGroup.js","../../../node_modules/@material-ui/core/esm/RadioGroup/RadioGroupContext.js","../../../node_modules/@material-ui/core/esm/FormGroup/FormGroup.js","../../../node_modules/@material-ui/core/esm/FormControlLabel/FormControlLabel.js","../../../node_modules/@material-ui/core/esm/internal/svg-icons/Cancel.js","../../../node_modules/@material-ui/core/esm/Chip/Chip.js","../../../node_modules/@material-ui/core/esm/ListSubheader/ListSubheader.js","../../../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonUnchecked.js","../../../node_modules/@material-ui/core/esm/internal/svg-icons/RadioButtonChecked.js","../../../node_modules/@material-ui/core/esm/Radio/RadioButtonIcon.js","../../../node_modules/@material-ui/core/esm/Radio/Radio.js","../../../node_modules/@material-ui/lab/esm/internal/svg-icons/Close.js","../../../node_modules/@material-ui/lab/esm/internal/svg-icons/ArrowDropDown.js","../../../node_modules/@material-ui/lab/esm/useAutocomplete/useAutocomplete.js","../../../node_modules/@material-ui/lab/esm/Autocomplete/Autocomplete.js"],"names":["isHTMLElement","value","HTMLElement","EVENTS","VALIDATION_MODE","INPUT_VALIDATION_RULES","attachEventListeners","shouldAttachChangeEvent","handleChange","ref","addEventListener","isNullOrUndefined","isArray","Array","isObjectType","isObject","isKey","test","stringToPath","input","result","replace","match","mathNumber","mathQuote","originalString","push","set","object","path","index","tempPath","length","lastIndex","key","newValue","objValue","isNaN","transformToNestObject","data","Object","entries","reduce","previous","assign","isUndefined","val","undefined","unique","filter","Boolean","get","obj","defaultValue","split","focusOnErrorField","fields","fieldErrors","field","focus","options","removeAllEventListeners","validateWithStateUpdate","removeEventListener","defaultReturn","isValid","getRadioValue","option","checked","isRadioInput","element","type","isFileInput","isCheckBoxInput","isMultipleSelect","defaultResult","validResult","getCheckboxValue","values","map","attributes","getFieldValue","fieldsRef","name","unmountFieldsStateRef","current","files","selected","isDetached","nodeType","Node","DOCUMENT_NODE","parentNode","isEmptyObject","keys","unset","updatePath","childObject","slice","baseGet","previousObjRef","k","objectRef","currentPaths","currentPathsLength","item","isSameRef","fieldValue","findRemovedFieldAndRemoveListener","shouldUnregister","forceDelete","mutationWatcher","fieldRef","forEach","disconnect","isString","getFieldsValues","search","output","startsWith","find","deepMerge","target","source","targetValue","sourceValue","isSameError","error","types","message","every","shouldRenderBasedOnError","errors","validFields","fieldsWithValidation","isFieldValid","isFormValid","currentFieldError","existFieldError","has","isRegex","RegExp","getValueAndMessage","validationData","isFunction","isBoolean","isMessage","isValidElement","getValidateError","appendErrors","validateAllFieldCriteria","validateField","a","required","maxLength","minLength","min","max","pattern","validate","isRadio","isCheckBox","isRadioOrCheckbox","isEmpty","appendErrorsCurry","bind","getMinMaxMessage","exceedMax","maxLengthMessage","minLengthMessage","maxType","minType","requiredValue","requiredMessage","maxValue","maxMessage","minValue","minMessage","valueNumber","valueAsNumber","parseFloat","exceedMin","valueDate","valueAsDate","Date","maxLengthValue","minLengthValue","inputLength","toString","patternValue","patternMessage","validateRef","validateError","validationResult","validateFunction","validateResult","isPrimitive","getPath","pathWithIndex","getInnerPath","flat","Infinity","assignWatchFields","fieldValues","fieldName","watchFields","inputValue","isSingleField","add","skipValidation","isOnBlur","isOnChange","isReValidateOnBlur","isReValidateOnChange","isBlurEvent","isSubmitted","isOnAll","getFieldArrayParentName","substring","indexOf","deepEqual","object1","object2","keys1","keys2","val1","val2","isMatchFieldArrayName","searchName","isNameInFieldArray","names","some","isSelectInput","onDomRemove","onDetachCallback","observer","MutationObserver","observe","window","document","childList","subtree","modeChecker","mode","isOnSubmit","isRadioOrCheckboxFunction","isWindowUndefined","isWeb","isProxyEnabled","Proxy","useForm","reValidateMode","resolver","context","defaultValues","shouldFocusError","criteriaMode","useRef","errorsRef","touchedFieldsRef","fieldArrayDefaultValues","dirtyFieldsRef","watchFieldsRef","Set","watchFieldsHookRef","watchFieldsHookRenderRef","fieldsWithValidationRef","validFieldsRef","isValidRef","defaultValuesRef","defaultValuesAtRenderRef","isUnMount","isWatchAllRef","isSubmittedRef","isDirtyRef","submitCountRef","isSubmittingRef","handleChangeRef","resetFieldArrayFunctionRef","contextRef","resolverRef","fieldArrayNamesRef","useState","render","modeRef","isValidateAllFieldCriteria","readFormStateRef","isDirty","dirtyFields","submitCount","touched","isSubmitting","reRender","useCallback","shouldRenderBaseOnError","shouldRender","shouldReRender","previousError","delete","setFieldValue","rawValue","radioRef","selectRef","includes","checkboxRef","String","setDirty","isFieldDirty","isDirtyFieldExist","isFieldArray","previousIsDirty","getValues","executeValidation","skipReRender","executeSchemaOrResolverValidation","payload","previousFormIsValid","isInputsValid","trigger","Promise","all","setInternalValues","shouldDirty","shouldValidate","setInternalValue","config","isFieldWatched","renderWatchedInputs","found","size","setValue","shouldSkipValidation","validateResolver","removeFieldEventListener","removeFieldEventListenerAndRef","clearErrors","inputName","setError","watchInternal","fieldNames","watchId","combinedDefaultValues","watch","unregister","registerFieldRef","validateOptions","fieldRefAndValidationOptions","isEmptyDefaultValue","isEmptyUnmountFields","then","register","refOrValidationOptions","rules","handleSubmit","callback","e","preventDefault","persist","fieldError","resetRefs","reset","omitResetState","inputRef","closest","_a","resetFieldArray","useEffect","formState","commonProps","prop","control","validateSchemaIsValid","__rest","s","t","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","propertyIsEnumerable","FormContext","createContext","displayName","useFormContext","useContext","FormProvider","children","props","createElement","Provider","Controller","as","onFocus","rest","methods","isNotFieldArray","getInitialValue","setInputStateValue","valueRef","onFocusRef","commonTask","event","getInputValue","registerField","defineProperty","onBlur","onChange","cloneElement","_interopRequireDefault","require","exports","default","_react","_default","d","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","SwitchBase","React","autoFocus","checkedProp","checkedIcon","classes","className","defaultChecked","disabledProp","disabled","icon","id","inputProps","readOnly","tabIndex","other","_objectWithoutProperties","_useControlled","useControlled","controlled","state","_useControlled2","_slicedToArray","setCheckedState","muiFormControl","useFormControl","hasLabelFor","IconButton","_extends","component","clsx","root","role","newChecked","withStyles","padding","cursor","position","opacity","width","height","top","left","margin","zIndex","useRadioGroup","RadioGroupContext","easeOut","Math","CircularProgress","_props$color","color","_props$disableShrink","disableShrink","_props$size","style","_props$thickness","thickness","_props$value","_props$variant","variant","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","capitalize","indeterminate","static","svg","viewBox","SIZE","circle","circleDisableShrink","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","theme","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","transformOrigin","flip","RadioGroup","actions","nameProp","valueProp","rootRef","querySelector","handleRef","useForkRef","useId","FormGroup","_props$row","row","flexDirection","flexWrap","FormControlLabel","label","_props$labelPlacement","labelPlacement","controlProps","Typography","alignItems","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","labelPlacementStart","labelPlacementTop","labelPlacementBottom","text","createSvgIcon","isDeleteKeyboardEvent","keyboardEvent","Chip","avatarProp","avatar","clickableProp","clickable","ComponentProp","deleteIconProp","deleteIcon","_props$disabled","iconProp","onClick","onDelete","onKeyDown","onKeyUp","chipRef","handleDeleteIconClick","stopPropagation","small","Component","ButtonBase","moreProps","customClasses","deleteIconSmall","CancelIcon","avatarSmall","iconSmall","outlined","outlinedPrimary","outlinedSecondary","sizeSmall","deletable","currentTarget","blur","labelSmall","backgroundColor","grey","deleteIconColor","fade","fontFamily","typography","fontSize","pxToRem","justifyContent","getContrastText","borderRadius","whiteSpace","outline","textDecoration","border","boxSizing","pointerEvents","contrastText","dark","userSelect","emphasize","boxShadow","shadows","clickableColorPrimary","clickableColorSecondary","deletableColorPrimary","deletableColorSecondary","action","hoverOpacity","avatarColorPrimary","avatarColorSecondary","iconColorPrimary","iconColorSecondary","overflow","textOverflow","paddingLeft","paddingRight","deleteIconColorPrimary","deleteIconColorSecondary","deleteIconOutlinedColorPrimary","deleteIconOutlinedColorSecondary","ListSubheader","_props$component","_props$disableGutters","disableGutters","_props$disableSticky","disableSticky","_props$inset","inset","sticky","gutters","lineHeight","listStyle","fontWeight","fontWeightMedium","colorInherit","easing","duration","shortest","layer","easeIn","RadioButtonUncheckedIcon","RadioButtonCheckedIcon","defaultCheckedIcon","RadioButtonIcon","defaultIcon","Radio","onChangeProp","radioGroup","createChainedFunction","stripDiacritics","string","normalize","findIndex","array","comp","defaultFilterOptions","arguments","_config$ignoreAccents","ignoreAccents","_config$ignoreCase","ignoreCase","limit","_config$matchFrom","matchFrom","stringify","_config$trim","trim","_ref","getOptionLabel","toLowerCase","filteredOptions","candidate","createFilterOptions","useAutocomplete","_props$autoComplete","autoComplete","_props$autoHighlight","autoHighlight","_props$autoSelect","autoSelect","_props$blurOnSelect","blurOnSelect","_props$clearOnBlur","clearOnBlur","freeSolo","_props$clearOnEscape","clearOnEscape","_props$componentName","componentName","_props$debug","debug","_props$defaultValue","multiple","_props$disableClearab","disableClearable","_props$disableCloseOn","disableCloseOnSelect","_props$disabledItemsF","disabledItemsFocusable","_props$disableListWra","disableListWrap","_props$filterOptions","filterOptions","_props$filterSelected","filterSelectedOptions","_props$freeSolo","getOptionDisabled","_props$getOptionLabel","getOptionLabelProp","_props$getOptionSelec","getOptionSelected","groupBy","_props$handleHomeEndK","handleHomeEndKeys","idProp","_props$includeInputIn","includeInputInList","inputValueProp","_props$multiple","onClose","onHighlightChange","onInputChange","onOpen","openProp","open","_props$openOnFocus","openOnFocus","_props$selectOnFocus","selectOnFocus","ignoreFocus","firstFocus","listboxRef","_React$useState","anchorEl","setAnchorEl","_React$useState2","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","_useControlled3","_useControlled4","setInputValue","_React$useState3","focused","setFocused","resetInputValue","useEventCallback","newInputValue","optionLabel","_useControlled5","_useControlled6","setOpenState","inputValueIsSelectedValue","popupOpen","value2","focusTag","tagToFocus","setHighlightedIndex","_ref2","_ref2$reason","reason","removeAttribute","setAttribute","prev","listboxNode","parentElement","scrollHeight","clientHeight","scrollBottom","scrollTop","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","_ref3","diff","_ref3$direction","direction","_ref3$reason","nextIndex","nextFocus","nextFocusDisabled","getAttribute","hasAttribute","validOptionIndex","maxIndex","newIndex","abs","getNextIndex","setSelectionRange","syncHighlightedIndex","valueItem","currentOption","itemIndex","optionItem","handleListboxRef","node","setRef","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","splice","handleFocusTag","nextTag","validTagIndex","handleClear","handleKeyDown","which","handleFocus","handleBlur","activeElement","handleInputChange","handleOptionMouseOver","Number","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","Map","acc","group","getRootProps","onMouseDown","getInputLabelProps","htmlFor","getInputProps","autoCapitalize","spellCheck","getClearProps","getPopupIndicatorProps","getTagProps","_ref4","getListboxProps","getOptionProps","_ref5","onMouseOver","onTouchStart","DisablePortal","CloseIcon","ArrowDropDownIcon","Autocomplete","startAdornment","ChipProps","_props$clearText","clearText","_props$closeIcon","closeIcon","_props$closeText","closeText","_props$disablePortal","disablePortal","_props$forcePopupIcon","forcePopupIcon","_props$fullWidth","fullWidth","_props$getLimitTagsTe","getLimitTagsText","more","x","_props$limitTags","limitTags","_props$ListboxCompone","ListboxComponent","ListboxProps","_props$loading","loading","_props$loadingText","loadingText","_props$noOptionsText","noOptionsText","_props$openText","openText","_props$PaperComponent","PaperComponent","Paper","_props$PopperComponen","PopperComponent","PopperComponentProp","Popper","_props$popupIcon","popupIcon","renderGroupProp","renderGroup","renderInput","renderOptionProp","renderOption","renderTags","_useAutocomplete","getCustomizedTagProps","params","tag","tagSizeSmall","groupLabel","groupUl","renderListOption","optionProps","hasClearIcon","hasPopupIcon","InputLabelProps","InputProps","inputRoot","endAdornment","title","clearIndicator","clearIndicatorDirty","popupIndicator","popupIndicatorOpen","inputFocused","popper","popperDisablePortal","clientWidth","paper","noOptions","listbox","option2","index2","_option","visibility","maxWidth","minWidth","paddingBottom","right","paddingTop","flexGrow","modal","body1","maxHeight","minHeight","_defineProperty","breakpoints","up","hover","disabledOpacity","background"],"mappings":"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","file":"static/js/1.582094cc.chunk.js","sourcesContent":["import { isValidElement, useRef, useState, useCallback, useEffect, createContext, useContext, createElement, cloneElement } from 'react';\n\nvar isHTMLElement = (value) => value instanceof HTMLElement;\n\nconst EVENTS = {\r\n    BLUR: 'blur',\r\n    CHANGE: 'change',\r\n    INPUT: 'input',\r\n};\r\nconst VALIDATION_MODE = {\r\n    onBlur: 'onBlur',\r\n    onChange: 'onChange',\r\n    onSubmit: 'onSubmit',\r\n    all: 'all',\r\n};\r\nconst VALUE = 'value';\r\nconst SELECT = 'select';\r\nconst UNDEFINED = 'undefined';\r\nconst INPUT_VALIDATION_RULES = {\r\n    max: 'max',\r\n    min: 'min',\r\n    maxLength: 'maxLength',\r\n    minLength: 'minLength',\r\n    pattern: 'pattern',\r\n    required: 'required',\r\n    validate: 'validate',\r\n};\n\nfunction attachEventListeners({ ref }, shouldAttachChangeEvent, handleChange) {\r\n    if (isHTMLElement(ref) && handleChange) {\r\n        ref.addEventListener(shouldAttachChangeEvent ? EVENTS.CHANGE : EVENTS.INPUT, handleChange);\r\n        ref.addEventListener(EVENTS.BLUR, handleChange);\r\n    }\r\n}\n\nvar isNullOrUndefined = (value) => value == null;\n\nvar isArray = (value) => Array.isArray(value);\n\nconst isObjectType = (value) => typeof value === 'object';\r\nvar isObject = (value) => !isNullOrUndefined(value) && !isArray(value) && isObjectType(value);\n\nvar isKey = (value) => !isArray(value) &&\r\n    (/^\\w*$/.test(value) ||\r\n        !/\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/.test(value));\n\nvar stringToPath = (input) => {\r\n    const result = [];\r\n    input.replace(/[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g, (match, mathNumber, mathQuote, originalString) => {\r\n        result.push(mathQuote\r\n            ? originalString.replace(/\\\\(\\\\)?/g, '$1')\r\n            : mathNumber || match);\r\n    });\r\n    return result;\r\n};\n\nfunction set(object, path, value) {\r\n    let index = -1;\r\n    const tempPath = isKey(path) ? [path] : stringToPath(path);\r\n    const length = tempPath.length;\r\n    const lastIndex = length - 1;\r\n    while (++index < length) {\r\n        const key = tempPath[index];\r\n        let newValue = value;\r\n        if (index !== lastIndex) {\r\n            const objValue = object[key];\r\n            newValue =\r\n                isObject(objValue) || isArray(objValue)\r\n                    ? objValue\r\n                    : !isNaN(+tempPath[index + 1])\r\n                        ? []\r\n                        : {};\r\n        }\r\n        object[key] = newValue;\r\n        object = object[key];\r\n    }\r\n    return object;\r\n}\n\nvar transformToNestObject = (data) => Object.entries(data).reduce((previous, [key, value]) => {\r\n    if (!isKey(key)) {\r\n        set(previous, key, value);\r\n        return previous;\r\n    }\r\n    return Object.assign(Object.assign({}, previous), { [key]: value });\r\n}, {});\n\nvar isUndefined = (val) => val === undefined;\n\nvar unique = (value) => value.filter(Boolean);\n\nvar get = (obj, path, defaultValue) => {\r\n    const result = unique(path.split(/[,[\\].]+?/)).reduce((result, key) => (isNullOrUndefined(result) ? result : result[key]), obj);\r\n    return isUndefined(result) || result === obj\r\n        ? isUndefined(obj[path])\r\n            ? defaultValue\r\n            : obj[path]\r\n        : result;\r\n};\n\nvar focusOnErrorField = (fields, fieldErrors) => {\r\n    for (const key in fields) {\r\n        if (get(fieldErrors, key)) {\r\n            const field = fields[key];\r\n            if (field) {\r\n                if (field.ref.focus) {\r\n                    field.ref.focus();\r\n                    break;\r\n                }\r\n                else if (field.options) {\r\n                    field.options[0].ref.focus();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\n\nvar removeAllEventListeners = (ref, validateWithStateUpdate) => {\r\n    if (isHTMLElement(ref) && ref.removeEventListener) {\r\n        ref.removeEventListener(EVENTS.INPUT, validateWithStateUpdate);\r\n        ref.removeEventListener(EVENTS.CHANGE, validateWithStateUpdate);\r\n        ref.removeEventListener(EVENTS.BLUR, validateWithStateUpdate);\r\n    }\r\n};\n\nconst defaultReturn = {\r\n    isValid: false,\r\n    value: '',\r\n};\r\nvar getRadioValue = (options) => isArray(options)\r\n    ? options.reduce((previous, option) => option && option.ref.checked\r\n        ? {\r\n            isValid: true,\r\n            value: option.ref.value,\r\n        }\r\n        : previous, defaultReturn)\r\n    : defaultReturn;\n\nvar getMultipleSelectValue = (options) => [...options]\r\n    .filter(({ selected }) => selected)\r\n    .map(({ value }) => value);\n\nvar isRadioInput = (element) => element.type === 'radio';\n\nvar isFileInput = (element) => element.type === 'file';\n\nvar isCheckBoxInput = (element) => element.type === 'checkbox';\n\nvar isMultipleSelect = (element) => element.type === `${SELECT}-multiple`;\n\nconst defaultResult = {\r\n    value: false,\r\n    isValid: false,\r\n};\r\nconst validResult = { value: true, isValid: true };\r\nvar getCheckboxValue = (options) => {\r\n    if (isArray(options)) {\r\n        if (options.length > 1) {\r\n            const values = options\r\n                .filter((option) => option && option.ref.checked)\r\n                .map(({ ref: { value } }) => value);\r\n            return { value: values, isValid: !!values.length };\r\n        }\r\n        const { checked, value, attributes } = options[0].ref;\r\n        return checked\r\n            ? attributes && !isUndefined(attributes.value)\r\n                ? isUndefined(value) || value === ''\r\n                    ? validResult\r\n                    : { value: value, isValid: true }\r\n                : validResult\r\n            : defaultResult;\r\n    }\r\n    return defaultResult;\r\n};\n\nfunction getFieldValue(fieldsRef, name, unmountFieldsStateRef) {\r\n    const field = fieldsRef.current[name];\r\n    if (field) {\r\n        const { ref: { value }, ref, } = field;\r\n        if (isFileInput(ref)) {\r\n            return ref.files;\r\n        }\r\n        if (isRadioInput(ref)) {\r\n            return getRadioValue(field.options).value;\r\n        }\r\n        if (isMultipleSelect(ref)) {\r\n            return getMultipleSelectValue(ref.options);\r\n        }\r\n        if (isCheckBoxInput(ref)) {\r\n            return getCheckboxValue(field.options).value;\r\n        }\r\n        return value;\r\n    }\r\n    if (unmountFieldsStateRef) {\r\n        return unmountFieldsStateRef.current[name];\r\n    }\r\n}\n\nfunction isDetached(element) {\r\n    if (!element) {\r\n        return true;\r\n    }\r\n    if (!(element instanceof HTMLElement) ||\r\n        element.nodeType === Node.DOCUMENT_NODE) {\r\n        return false;\r\n    }\r\n    return isDetached(element.parentNode);\r\n}\n\nvar isEmptyObject = (value) => isObject(value) && !Object.keys(value).length;\n\nfunction baseGet(object, updatePath) {\r\n    const path = updatePath.slice(0, -1);\r\n    const length = path.length;\r\n    let index = 0;\r\n    while (index < length) {\r\n        object = isUndefined(object) ? index++ : object[updatePath[index++]];\r\n    }\r\n    return object;\r\n}\r\nfunction unset(object, path) {\r\n    const updatePath = isKey(path) ? [path] : stringToPath(path);\r\n    const childObject = updatePath.length == 1 ? object : baseGet(object, updatePath);\r\n    const key = updatePath[updatePath.length - 1];\r\n    let previousObjRef = undefined;\r\n    if (childObject) {\r\n        delete childObject[key];\r\n    }\r\n    for (let k = 0; k < updatePath.slice(0, -1).length; k++) {\r\n        let index = -1;\r\n        let objectRef = undefined;\r\n        const currentPaths = updatePath.slice(0, -(k + 1));\r\n        const currentPathsLength = currentPaths.length - 1;\r\n        if (k > 0) {\r\n            previousObjRef = object;\r\n        }\r\n        while (++index < currentPaths.length) {\r\n            const item = currentPaths[index];\r\n            objectRef = objectRef ? objectRef[item] : object[item];\r\n            if (currentPathsLength === index &&\r\n                ((isObject(objectRef) && isEmptyObject(objectRef)) ||\r\n                    (isArray(objectRef) &&\r\n                        !objectRef.filter((data) => isObject(data) && !isEmptyObject(data))\r\n                            .length))) {\r\n                previousObjRef ? delete previousObjRef[item] : delete object[item];\r\n            }\r\n            previousObjRef = objectRef;\r\n        }\r\n    }\r\n    return object;\r\n}\n\nconst isSameRef = (fieldValue, ref) => fieldValue && fieldValue.ref === ref;\r\nfunction findRemovedFieldAndRemoveListener(fieldsRef, handleChange, field, unmountFieldsStateRef, shouldUnregister, forceDelete) {\r\n    const { ref, ref: { name, type }, mutationWatcher, } = field;\r\n    const fieldRef = fieldsRef.current[name];\r\n    if (!shouldUnregister) {\r\n        const value = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\r\n        if (!isUndefined(value)) {\r\n            unmountFieldsStateRef.current[name] = value;\r\n        }\r\n    }\r\n    if (!type) {\r\n        delete fieldsRef.current[name];\r\n        return;\r\n    }\r\n    if ((isRadioInput(ref) || isCheckBoxInput(ref)) && fieldRef) {\r\n        const { options } = fieldRef;\r\n        if (isArray(options) && options.length) {\r\n            unique(options).forEach((option, index) => {\r\n                const { ref, mutationWatcher } = option;\r\n                if ((ref && isDetached(ref) && isSameRef(option, ref)) || forceDelete) {\r\n                    removeAllEventListeners(ref, handleChange);\r\n                    if (mutationWatcher) {\r\n                        mutationWatcher.disconnect();\r\n                    }\r\n                    unset(options, `[${index}]`);\r\n                }\r\n            });\r\n            if (options && !unique(options).length) {\r\n                delete fieldsRef.current[name];\r\n            }\r\n        }\r\n        else {\r\n            delete fieldsRef.current[name];\r\n        }\r\n    }\r\n    else if ((isDetached(ref) && isSameRef(fieldRef, ref)) || forceDelete) {\r\n        removeAllEventListeners(ref, handleChange);\r\n        if (mutationWatcher) {\r\n            mutationWatcher.disconnect();\r\n        }\r\n        delete fieldsRef.current[name];\r\n    }\r\n}\n\nvar isString = (value) => typeof value === 'string';\n\nfunction deepMerge(target, source) {\r\n    if (!isObject(target) || !isObject(source)) {\r\n        return source;\r\n    }\r\n    for (const key in source) {\r\n        const targetValue = target[key];\r\n        const sourceValue = source[key];\r\n        if (isObject(targetValue) && isObject(sourceValue)) {\r\n            target[key] = deepMerge(targetValue, sourceValue);\r\n        }\r\n        else {\r\n            target[key] = sourceValue;\r\n        }\r\n    }\r\n    return target;\r\n}\n\nvar getFieldsValues = (fieldsRef, unmountFieldsStateRef, search) => {\r\n    const output = {};\r\n    for (const name in fieldsRef.current) {\r\n        if (isUndefined(search) ||\r\n            (isString(search)\r\n                ? name.startsWith(search)\r\n                : isArray(search) && search.find((data) => name.startsWith(data)))) {\r\n            output[name] = getFieldValue(fieldsRef, name);\r\n        }\r\n    }\r\n    return deepMerge(transformToNestObject((unmountFieldsStateRef || {}).current || {}), transformToNestObject(output));\r\n};\n\nvar isSameError = (error, { type, types = {}, message }) => isObject(error) &&\r\n    error.type === type &&\r\n    error.message === message &&\r\n    Object.keys(error.types || {}).length === Object.keys(types).length &&\r\n    Object.entries(error.types || {}).every(([key, value]) => types[key] === value);\n\nfunction shouldRenderBasedOnError({ errors, name, error, validFields, fieldsWithValidation, }) {\r\n    const isFieldValid = isEmptyObject(error);\r\n    const isFormValid = isEmptyObject(errors);\r\n    const currentFieldError = get(error, name);\r\n    const existFieldError = get(errors, name);\r\n    if (isFieldValid && validFields.has(name)) {\r\n        return false;\r\n    }\r\n    if (isFormValid !== isFieldValid ||\r\n        (!isFormValid && !existFieldError) ||\r\n        (isFieldValid && fieldsWithValidation.has(name) && !validFields.has(name))) {\r\n        return true;\r\n    }\r\n    return currentFieldError && !isSameError(existFieldError, currentFieldError);\r\n}\n\nvar isRegex = (value) => value instanceof RegExp;\n\nconst isValueMessage = (value) => isObject(value) && !isRegex(value);\r\nvar getValueAndMessage = (validationData) => isValueMessage(validationData)\r\n    ? validationData\r\n    : {\r\n        value: validationData,\r\n        message: '',\r\n    };\n\nvar isFunction = (value) => typeof value === 'function';\n\nvar isBoolean = (value) => typeof value === 'boolean';\n\nvar isMessage = (value) => isString(value) || (isObject(value) && isValidElement(value));\n\nfunction getValidateError(result, ref, type = 'validate') {\r\n    if (isMessage(result) || (isBoolean(result) && !result)) {\r\n        return {\r\n            type,\r\n            message: isMessage(result) ? result : '',\r\n            ref,\r\n        };\r\n    }\r\n}\n\nvar appendErrors = (name, validateAllFieldCriteria, errors, type, message) => {\r\n    if (validateAllFieldCriteria) {\r\n        const error = errors[name];\r\n        return Object.assign(Object.assign({}, error), { types: Object.assign(Object.assign({}, (error && error.types ? error.types : {})), { [type]: message || true }) });\r\n    }\r\n    return {};\r\n};\n\nvar validateField = async (fieldsRef, validateAllFieldCriteria, { ref, ref: { type, value }, options, required, maxLength, minLength, min, max, pattern, validate, }, unmountFieldsStateRef) => {\r\n    const fields = fieldsRef.current;\r\n    const name = ref.name;\r\n    const error = {};\r\n    const isRadio = isRadioInput(ref);\r\n    const isCheckBox = isCheckBoxInput(ref);\r\n    const isRadioOrCheckbox = isRadio || isCheckBox;\r\n    const isEmpty = value === '';\r\n    const appendErrorsCurry = appendErrors.bind(null, name, validateAllFieldCriteria, error);\r\n    const getMinMaxMessage = (exceedMax, maxLengthMessage, minLengthMessage, maxType = INPUT_VALIDATION_RULES.maxLength, minType = INPUT_VALIDATION_RULES.minLength) => {\r\n        const message = exceedMax ? maxLengthMessage : minLengthMessage;\r\n        error[name] = Object.assign({ type: exceedMax ? maxType : minType, message,\r\n            ref }, (exceedMax\r\n            ? appendErrorsCurry(maxType, message)\r\n            : appendErrorsCurry(minType, message)));\r\n    };\r\n    if (required &&\r\n        ((!isRadio && !isCheckBox && (isEmpty || isNullOrUndefined(value))) ||\r\n            (isBoolean(value) && !value) ||\r\n            (isCheckBox && !getCheckboxValue(options).isValid) ||\r\n            (isRadio && !getRadioValue(options).isValid))) {\r\n        const { value: requiredValue, message: requiredMessage } = isMessage(required)\r\n            ? { value: !!required, message: required }\r\n            : getValueAndMessage(required);\r\n        if (requiredValue) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.required, message: requiredMessage, ref: isRadioOrCheckbox\r\n                    ? (fields[name].options || [])[0].ref\r\n                    : ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.required, requiredMessage));\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (!isNullOrUndefined(min) || !isNullOrUndefined(max)) {\r\n        let exceedMax;\r\n        let exceedMin;\r\n        const { value: maxValue, message: maxMessage } = getValueAndMessage(max);\r\n        const { value: minValue, message: minMessage } = getValueAndMessage(min);\r\n        if (type === 'number' || (!type && !isNaN(value))) {\r\n            const valueNumber = ref.valueAsNumber || parseFloat(value);\r\n            if (!isNullOrUndefined(maxValue)) {\r\n                exceedMax = valueNumber > maxValue;\r\n            }\r\n            if (!isNullOrUndefined(minValue)) {\r\n                exceedMin = valueNumber < minValue;\r\n            }\r\n        }\r\n        else {\r\n            const valueDate = ref.valueAsDate || new Date(value);\r\n            if (isString(maxValue)) {\r\n                exceedMax = valueDate > new Date(maxValue);\r\n            }\r\n            if (isString(minValue)) {\r\n                exceedMin = valueDate < new Date(minValue);\r\n            }\r\n        }\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxMessage, minMessage, INPUT_VALIDATION_RULES.max, INPUT_VALIDATION_RULES.min);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (isString(value) && !isEmpty && (maxLength || minLength)) {\r\n        const { value: maxLengthValue, message: maxLengthMessage, } = getValueAndMessage(maxLength);\r\n        const { value: minLengthValue, message: minLengthMessage, } = getValueAndMessage(minLength);\r\n        const inputLength = value.toString().length;\r\n        const exceedMax = !isNullOrUndefined(maxLengthValue) && inputLength > maxLengthValue;\r\n        const exceedMin = !isNullOrUndefined(minLengthValue) && inputLength < minLengthValue;\r\n        if (exceedMax || exceedMin) {\r\n            getMinMaxMessage(!!exceedMax, maxLengthMessage, minLengthMessage);\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (pattern && !isEmpty) {\r\n        const { value: patternValue, message: patternMessage } = getValueAndMessage(pattern);\r\n        if (isRegex(patternValue) && !patternValue.test(value)) {\r\n            error[name] = Object.assign({ type: INPUT_VALIDATION_RULES.pattern, message: patternMessage, ref }, appendErrorsCurry(INPUT_VALIDATION_RULES.pattern, patternMessage));\r\n            if (!validateAllFieldCriteria) {\r\n                return error;\r\n            }\r\n        }\r\n    }\r\n    if (validate) {\r\n        const fieldValue = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\r\n        const validateRef = isRadioOrCheckbox && options ? options[0].ref : ref;\r\n        if (isFunction(validate)) {\r\n            const result = await validate(fieldValue);\r\n            const validateError = getValidateError(result, validateRef);\r\n            if (validateError) {\r\n                error[name] = Object.assign(Object.assign({}, validateError), appendErrorsCurry(INPUT_VALIDATION_RULES.validate, validateError.message));\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n        else if (isObject(validate)) {\r\n            let validationResult = {};\r\n            for (const [key, validateFunction] of Object.entries(validate)) {\r\n                if (!isEmptyObject(validationResult) && !validateAllFieldCriteria) {\r\n                    break;\r\n                }\r\n                const validateResult = await validateFunction(fieldValue);\r\n                const validateError = getValidateError(validateResult, validateRef, key);\r\n                if (validateError) {\r\n                    validationResult = Object.assign(Object.assign({}, validateError), appendErrorsCurry(key, validateError.message));\r\n                    if (validateAllFieldCriteria) {\r\n                        error[name] = validationResult;\r\n                    }\r\n                }\r\n            }\r\n            if (!isEmptyObject(validationResult)) {\r\n                error[name] = Object.assign({ ref: validateRef }, validationResult);\r\n                if (!validateAllFieldCriteria) {\r\n                    return error;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return error;\r\n};\n\nvar isPrimitive = (value) => isNullOrUndefined(value) || !isObjectType(value);\n\nconst getPath = (path, values) => {\r\n    const getInnerPath = (value, key, isObject) => {\r\n        const pathWithIndex = isObject ? `${path}.${key}` : `${path}[${key}]`;\r\n        return isPrimitive(value) ? pathWithIndex : getPath(pathWithIndex, value);\r\n    };\r\n    return Object.entries(values)\r\n        .map(([key, value]) => getInnerPath(value, key, isObject(values)))\r\n        .flat(Infinity);\r\n};\n\nvar assignWatchFields = (fieldValues, fieldName, watchFields, inputValue, isSingleField) => {\r\n    let value;\r\n    watchFields.add(fieldName);\r\n    if (isEmptyObject(fieldValues)) {\r\n        value = undefined;\r\n    }\r\n    else {\r\n        value = get(fieldValues, fieldName);\r\n        if (isObject(value) || isArray(value)) {\r\n            getPath(fieldName, value).forEach((name) => watchFields.add(name));\r\n        }\r\n    }\r\n    return isUndefined(value)\r\n        ? isSingleField\r\n            ? inputValue\r\n            : get(inputValue, fieldName)\r\n        : value;\r\n};\n\nvar skipValidation = ({ isOnBlur, isOnChange, isReValidateOnBlur, isReValidateOnChange, isBlurEvent, isSubmitted, isOnAll, }) => {\r\n    if (isOnAll) {\r\n        return false;\r\n    }\r\n    else if (isSubmitted ? isReValidateOnBlur : isOnBlur) {\r\n        return !isBlurEvent;\r\n    }\r\n    else if (isSubmitted ? isReValidateOnChange : isOnChange) {\r\n        return isBlurEvent;\r\n    }\r\n    return true;\r\n};\n\nvar getFieldArrayParentName = (name) => name.substring(0, name.indexOf('['));\n\nfunction deepEqual(object1 = [], object2 = []) {\r\n    const keys1 = Object.keys(object1);\r\n    const keys2 = Object.keys(object2);\r\n    if (keys1.length !== keys2.length) {\r\n        return false;\r\n    }\r\n    for (const key of keys1) {\r\n        const val1 = object1[key];\r\n        const val2 = object2[key];\r\n        if ((isObject(val1) || isArray(val1)) && (isObject(val2) || isArray(val2))\r\n            ? !deepEqual(val1, val2)\r\n            : val1 !== val2) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\n\nconst isMatchFieldArrayName = (name, searchName) => RegExp(`^${searchName}[\\\\d+]`.replace(/\\[/g, '\\\\[').replace(/\\]/g, '\\\\]')).test(name);\r\nvar isNameInFieldArray = (names, name) => [...names].some((current) => isMatchFieldArrayName(name, current));\n\nvar isSelectInput = (element) => element.type === `${SELECT}-one`;\n\nfunction onDomRemove(element, onDetachCallback) {\r\n    const observer = new MutationObserver(() => {\r\n        if (isDetached(element)) {\r\n            observer.disconnect();\r\n            onDetachCallback();\r\n        }\r\n    });\r\n    observer.observe(window.document, {\r\n        childList: true,\r\n        subtree: true,\r\n    });\r\n    return observer;\r\n}\n\nvar modeChecker = (mode) => ({\r\n    isOnSubmit: !mode || mode === VALIDATION_MODE.onSubmit,\r\n    isOnBlur: mode === VALIDATION_MODE.onBlur,\r\n    isOnChange: mode === VALIDATION_MODE.onChange,\r\n    isOnAll: mode === VALIDATION_MODE.all,\r\n});\n\nvar isRadioOrCheckboxFunction = (ref) => isRadioInput(ref) || isCheckBoxInput(ref);\n\nconst isWindowUndefined = typeof window === UNDEFINED;\r\nconst isWeb = typeof document !== UNDEFINED &&\r\n    !isWindowUndefined &&\r\n    !isUndefined(window.HTMLElement);\r\nconst isProxyEnabled = isWeb ? 'Proxy' in window : typeof Proxy !== UNDEFINED;\r\nfunction useForm({ mode = VALIDATION_MODE.onSubmit, reValidateMode = VALIDATION_MODE.onChange, resolver, context, defaultValues = {}, shouldFocusError = true, shouldUnregister = true, criteriaMode, } = {}) {\r\n    const fieldsRef = useRef({});\r\n    const errorsRef = useRef({});\r\n    const touchedFieldsRef = useRef({});\r\n    const fieldArrayDefaultValues = useRef({});\r\n    const dirtyFieldsRef = useRef({});\r\n    const watchFieldsRef = useRef(new Set());\r\n    const watchFieldsHookRef = useRef({});\r\n    const watchFieldsHookRenderRef = useRef({});\r\n    const fieldsWithValidationRef = useRef(new Set());\r\n    const validFieldsRef = useRef(new Set());\r\n    const isValidRef = useRef(true);\r\n    const defaultValuesRef = useRef(defaultValues);\r\n    const defaultValuesAtRenderRef = useRef({});\r\n    const isUnMount = useRef(false);\r\n    const isWatchAllRef = useRef(false);\r\n    const isSubmittedRef = useRef(false);\r\n    const isDirtyRef = useRef(false);\r\n    const submitCountRef = useRef(0);\r\n    const isSubmittingRef = useRef(false);\r\n    const handleChangeRef = useRef();\r\n    const unmountFieldsStateRef = useRef({});\r\n    const resetFieldArrayFunctionRef = useRef({});\r\n    const contextRef = useRef(context);\r\n    const resolverRef = useRef(resolver);\r\n    const fieldArrayNamesRef = useRef(new Set());\r\n    const [, render] = useState();\r\n    const modeRef = useRef(modeChecker(mode));\r\n    const { current: { isOnSubmit, isOnAll }, } = modeRef;\r\n    const isValidateAllFieldCriteria = criteriaMode === VALIDATION_MODE.all;\r\n    const readFormStateRef = useRef({\r\n        isDirty: !isProxyEnabled,\r\n        dirtyFields: !isProxyEnabled,\r\n        isSubmitted: isOnSubmit,\r\n        submitCount: !isProxyEnabled,\r\n        touched: !isProxyEnabled,\r\n        isSubmitting: !isProxyEnabled,\r\n        isValid: !isProxyEnabled,\r\n    });\r\n    const { current: { isOnBlur: isReValidateOnBlur, isOnChange: isReValidateOnChange }, } = useRef(modeChecker(reValidateMode));\r\n    contextRef.current = context;\r\n    resolverRef.current = resolver;\r\n    const reRender = useCallback(() => !isUnMount.current && render({}), []);\r\n    const shouldRenderBaseOnError = useCallback((name, error, shouldRender = false) => {\r\n        let shouldReRender = shouldRender ||\r\n            shouldRenderBasedOnError({\r\n                errors: errorsRef.current,\r\n                error,\r\n                name,\r\n                validFields: validFieldsRef.current,\r\n                fieldsWithValidation: fieldsWithValidationRef.current,\r\n            });\r\n        const previousError = get(errorsRef.current, name);\r\n        if (isEmptyObject(error)) {\r\n            if (fieldsWithValidationRef.current.has(name) || resolverRef.current) {\r\n                validFieldsRef.current.add(name);\r\n                shouldReRender = shouldReRender || previousError;\r\n            }\r\n            errorsRef.current = unset(errorsRef.current, name);\r\n        }\r\n        else {\r\n            validFieldsRef.current.delete(name);\r\n            shouldReRender =\r\n                shouldReRender ||\r\n                    !previousError ||\r\n                    !isSameError(previousError, error[name]);\r\n            set(errorsRef.current, name, error[name]);\r\n        }\r\n        if (shouldReRender && !isNullOrUndefined(shouldRender)) {\r\n            reRender();\r\n            return true;\r\n        }\r\n    }, []);\r\n    const setFieldValue = useCallback(({ ref, options }, rawValue) => {\r\n        const value = isWeb && isHTMLElement(ref) && isNullOrUndefined(rawValue)\r\n            ? ''\r\n            : rawValue;\r\n        if (isRadioInput(ref) && options) {\r\n            options.forEach(({ ref: radioRef }) => (radioRef.checked = radioRef.value === value));\r\n        }\r\n        else if (isFileInput(ref) && !isString(value)) {\r\n            ref.files = value;\r\n        }\r\n        else if (isMultipleSelect(ref)) {\r\n            [...ref.options].forEach((selectRef) => (selectRef.selected = value.includes(selectRef.value)));\r\n        }\r\n        else if (isCheckBoxInput(ref) && options) {\r\n            options.length > 1\r\n                ? options.forEach(({ ref: checkboxRef }) => (checkboxRef.checked = String(value).includes(checkboxRef.value)))\r\n                : (options[0].ref.checked = !!value);\r\n        }\r\n        else {\r\n            ref.value = value;\r\n        }\r\n    }, []);\r\n    const setDirty = useCallback((name) => {\r\n        const { isDirty, dirtyFields } = readFormStateRef.current;\r\n        if (!fieldsRef.current[name] || (!isDirty && !dirtyFields)) {\r\n            return false;\r\n        }\r\n        const isFieldDirty = defaultValuesAtRenderRef.current[name] !==\r\n            getFieldValue(fieldsRef, name, unmountFieldsStateRef);\r\n        const isDirtyFieldExist = get(dirtyFieldsRef.current, name);\r\n        const isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\r\n        const previousIsDirty = isDirtyRef.current;\r\n        if (isFieldDirty) {\r\n            set(dirtyFieldsRef.current, name, true);\r\n        }\r\n        else {\r\n            unset(dirtyFieldsRef.current, name);\r\n        }\r\n        isDirtyRef.current =\r\n            (isFieldArray &&\r\n                !deepEqual(get(getValues(), getFieldArrayParentName(name)), get(defaultValuesRef.current, getFieldArrayParentName(name)))) ||\r\n                !isEmptyObject(dirtyFieldsRef.current);\r\n        return ((isDirty && previousIsDirty !== isDirtyRef.current) ||\r\n            (dirtyFields && isDirtyFieldExist !== get(dirtyFieldsRef.current, name)));\r\n    }, []);\r\n    const executeValidation = useCallback(async (name, skipReRender) => {\r\n        if (fieldsRef.current[name]) {\r\n            const error = await validateField(fieldsRef, isValidateAllFieldCriteria, fieldsRef.current[name], unmountFieldsStateRef);\r\n            shouldRenderBaseOnError(name, error, skipReRender ? null : false);\r\n            return isEmptyObject(error);\r\n        }\r\n        return false;\r\n    }, [shouldRenderBaseOnError, isValidateAllFieldCriteria]);\r\n    const executeSchemaOrResolverValidation = useCallback(async (payload) => {\r\n        const { errors } = await resolverRef.current(getValues(), contextRef.current, isValidateAllFieldCriteria);\r\n        const previousFormIsValid = isValidRef.current;\r\n        isValidRef.current = isEmptyObject(errors);\r\n        if (isArray(payload)) {\r\n            const isInputsValid = payload\r\n                .map((name) => {\r\n                const error = get(errors, name);\r\n                if (error) {\r\n                    set(errorsRef.current, name, error);\r\n                }\r\n                else {\r\n                    unset(errorsRef.current, name);\r\n                }\r\n                return !error;\r\n            })\r\n                .every(Boolean);\r\n            reRender();\r\n            return isInputsValid;\r\n        }\r\n        else {\r\n            const error = get(errors, payload);\r\n            shouldRenderBaseOnError(payload, (error ? { [payload]: error } : {}), previousFormIsValid !== isValidRef.current);\r\n            return !error;\r\n        }\r\n    }, [shouldRenderBaseOnError, isValidateAllFieldCriteria]);\r\n    const trigger = useCallback(async (name) => {\r\n        const fields = name || Object.keys(fieldsRef.current);\r\n        if (resolverRef.current) {\r\n            return executeSchemaOrResolverValidation(fields);\r\n        }\r\n        if (isArray(fields)) {\r\n            const result = await Promise.all(fields.map(async (data) => await executeValidation(data, true)));\r\n            reRender();\r\n            return result.every(Boolean);\r\n        }\r\n        return await executeValidation(fields);\r\n    }, [executeSchemaOrResolverValidation, executeValidation]);\r\n    const setInternalValues = useCallback((name, value, { shouldDirty, shouldValidate }) => {\r\n        getPath(name, value).forEach((fieldName) => {\r\n            const data = {};\r\n            const field = fieldsRef.current[fieldName];\r\n            if (field) {\r\n                set(data, name, value);\r\n                setFieldValue(field, get(data, fieldName));\r\n                if (shouldDirty) {\r\n                    setDirty(fieldName);\r\n                }\r\n                if (shouldValidate) {\r\n                    trigger(fieldName);\r\n                }\r\n            }\r\n        });\r\n    }, [trigger, setFieldValue, setDirty]);\r\n    const setInternalValue = useCallback((name, value, config) => {\r\n        if (fieldsRef.current[name]) {\r\n            setFieldValue(fieldsRef.current[name], value);\r\n            return config.shouldDirty && setDirty(name);\r\n        }\r\n        else if (!isPrimitive(value)) {\r\n            setInternalValues(name, value, config);\r\n        }\r\n        if (!shouldUnregister) {\r\n            unmountFieldsStateRef.current[name] = value;\r\n        }\r\n        return true;\r\n    }, [setDirty, setFieldValue, setInternalValues]);\r\n    const isFieldWatched = (name) => isWatchAllRef.current ||\r\n        watchFieldsRef.current.has(name) ||\r\n        watchFieldsRef.current.has((name.match(/\\w+/) || [])[0]);\r\n    const renderWatchedInputs = (name, found = true) => {\r\n        if (!isEmptyObject(watchFieldsHookRef.current)) {\r\n            for (const key in watchFieldsHookRef.current) {\r\n                if (name === '' ||\r\n                    watchFieldsHookRef.current[key].has(name) ||\r\n                    watchFieldsHookRef.current[key].has(getFieldArrayParentName(name)) ||\r\n                    !watchFieldsHookRef.current[key].size) {\r\n                    watchFieldsHookRenderRef.current[key]();\r\n                    found = false;\r\n                }\r\n            }\r\n        }\r\n        return found;\r\n    };\r\n    function setValue(name, value, config = {}) {\r\n        const shouldRender = setInternalValue(name, value, config) ||\r\n            isFieldWatched(name);\r\n        renderWatchedInputs(name);\r\n        if (shouldRender) {\r\n            reRender();\r\n        }\r\n        if (config.shouldValidate) {\r\n            trigger(name);\r\n        }\r\n    }\r\n    handleChangeRef.current = handleChangeRef.current\r\n        ? handleChangeRef.current\r\n        : async ({ type, target }) => {\r\n            const name = target.name;\r\n            const field = fieldsRef.current[name];\r\n            let error;\r\n            if (field) {\r\n                const isBlurEvent = type === EVENTS.BLUR;\r\n                const shouldSkipValidation = !isOnAll &&\r\n                    skipValidation(Object.assign({ isBlurEvent,\r\n                        isReValidateOnChange,\r\n                        isReValidateOnBlur, isSubmitted: isSubmittedRef.current }, modeRef.current));\r\n                let shouldRender = setDirty(name) || isFieldWatched(name);\r\n                if (isBlurEvent &&\r\n                    !get(touchedFieldsRef.current, name) &&\r\n                    readFormStateRef.current.touched) {\r\n                    set(touchedFieldsRef.current, name, true);\r\n                    shouldRender = true;\r\n                }\r\n                if (shouldSkipValidation) {\r\n                    renderWatchedInputs(name);\r\n                    return shouldRender && reRender();\r\n                }\r\n                if (resolverRef.current) {\r\n                    const { errors } = await resolverRef.current(getValues(), contextRef.current, isValidateAllFieldCriteria);\r\n                    const previousFormIsValid = isValidRef.current;\r\n                    isValidRef.current = isEmptyObject(errors);\r\n                    error = (get(errors, name)\r\n                        ? { [name]: get(errors, name) }\r\n                        : {});\r\n                    if (previousFormIsValid !== isValidRef.current) {\r\n                        shouldRender = true;\r\n                    }\r\n                }\r\n                else {\r\n                    error = await validateField(fieldsRef, isValidateAllFieldCriteria, field, unmountFieldsStateRef);\r\n                }\r\n                renderWatchedInputs(name);\r\n                if (!shouldRenderBaseOnError(name, error) && shouldRender) {\r\n                    reRender();\r\n                }\r\n            }\r\n        };\r\n    function getValues(payload) {\r\n        if (isString(payload)) {\r\n            return getFieldValue(fieldsRef, payload, unmountFieldsStateRef);\r\n        }\r\n        if (isArray(payload)) {\r\n            return payload.reduce((previous, name) => (Object.assign(Object.assign({}, previous), { [name]: getFieldValue(fieldsRef, name, unmountFieldsStateRef) })), {});\r\n        }\r\n        return getFieldsValues(fieldsRef, unmountFieldsStateRef);\r\n    }\r\n    const validateResolver = useCallback(async (values = {}) => {\r\n        const { errors } = await resolverRef.current(Object.assign(Object.assign(Object.assign({}, defaultValuesRef.current), getValues()), values), contextRef.current, isValidateAllFieldCriteria);\r\n        const previousFormIsValid = isValidRef.current;\r\n        isValidRef.current = isEmptyObject(errors);\r\n        if (previousFormIsValid !== isValidRef.current) {\r\n            reRender();\r\n        }\r\n    }, [isValidateAllFieldCriteria]);\r\n    const removeFieldEventListener = useCallback((field, forceDelete) => findRemovedFieldAndRemoveListener(fieldsRef, handleChangeRef.current, field, unmountFieldsStateRef, shouldUnregister, forceDelete), [shouldUnregister]);\r\n    const removeFieldEventListenerAndRef = useCallback((field, forceDelete) => {\r\n        if (field &&\r\n            (!isNameInFieldArray(fieldArrayNamesRef.current, field.ref.name) ||\r\n                forceDelete)) {\r\n            removeFieldEventListener(field, forceDelete);\r\n            if (shouldUnregister) {\r\n                [\r\n                    errorsRef,\r\n                    touchedFieldsRef,\r\n                    dirtyFieldsRef,\r\n                    defaultValuesAtRenderRef,\r\n                ].forEach((data) => unset(data.current, field.ref.name));\r\n                [fieldsWithValidationRef, validFieldsRef].forEach((data) => data.current.delete(field.ref.name));\r\n                if (readFormStateRef.current.isValid ||\r\n                    readFormStateRef.current.touched ||\r\n                    readFormStateRef.current.isDirty) {\r\n                    isDirtyRef.current = !isEmptyObject(dirtyFieldsRef.current);\r\n                    reRender();\r\n                    if (resolverRef.current) {\r\n                        validateResolver();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }, [validateResolver, removeFieldEventListener]);\r\n    function clearErrors(name) {\r\n        if (name) {\r\n            (isArray(name) ? name : [name]).forEach((inputName) => unset(errorsRef.current, inputName));\r\n        }\r\n        else {\r\n            errorsRef.current = {};\r\n        }\r\n        reRender();\r\n    }\r\n    function setError(name, error) {\r\n        isValidRef.current = false;\r\n        set(errorsRef.current, name, Object.assign(Object.assign({}, error), { ref: (fieldsRef.current[name] || {}).ref }));\r\n        reRender();\r\n    }\r\n    const watchInternal = useCallback((fieldNames, defaultValue, watchId) => {\r\n        const watchFields = watchId\r\n            ? watchFieldsHookRef.current[watchId]\r\n            : watchFieldsRef.current;\r\n        const combinedDefaultValues = isUndefined(defaultValue)\r\n            ? defaultValuesRef.current\r\n            : defaultValue;\r\n        const fieldValues = getFieldsValues(fieldsRef, unmountFieldsStateRef, fieldNames);\r\n        if (isString(fieldNames)) {\r\n            return assignWatchFields(fieldValues, fieldNames, watchFields, isUndefined(defaultValue)\r\n                ? get(combinedDefaultValues, fieldNames)\r\n                : defaultValue, true);\r\n        }\r\n        if (isArray(fieldNames)) {\r\n            return fieldNames.reduce((previous, name) => (Object.assign(Object.assign({}, previous), { [name]: assignWatchFields(fieldValues, name, watchFields, combinedDefaultValues) })), {});\r\n        }\r\n        if (isUndefined(watchId)) {\r\n            isWatchAllRef.current = true;\r\n        }\r\n        return transformToNestObject((!isEmptyObject(fieldValues) && fieldValues) ||\r\n            combinedDefaultValues);\r\n    }, []);\r\n    function watch(fieldNames, defaultValue) {\r\n        return watchInternal(fieldNames, defaultValue);\r\n    }\r\n    function unregister(name) {\r\n        (isArray(name) ? name : [name]).forEach((fieldName) => removeFieldEventListenerAndRef(fieldsRef.current[fieldName], true));\r\n    }\r\n    function registerFieldRef(ref, validateOptions = {}) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (!ref.name) {\r\n                return console.warn('📋 Field is missing `name` attribute:', ref);\r\n            }\r\n            if (fieldArrayNamesRef.current.has(ref.name.split(/\\[\\d+\\]$/)[0]) &&\r\n                !RegExp(`^${ref.name.split(/\\[\\d+\\]$/)[0]}[\\\\d+]\\.\\\\w+`\r\n                    .replace(/\\[/g, '\\\\[')\r\n                    .replace(/\\]/g, '\\\\]')).test(ref.name)) {\r\n                return console.warn('📋 `name` prop should be in object shape: name=\"test[index].name\". https://react-hook-form.com/api#useFieldArray');\r\n            }\r\n        }\r\n        const { name, type, value } = ref;\r\n        const fieldRefAndValidationOptions = Object.assign({ ref }, validateOptions);\r\n        const fields = fieldsRef.current;\r\n        const isRadioOrCheckbox = isRadioOrCheckboxFunction(ref);\r\n        let field = fields[name];\r\n        let isEmptyDefaultValue = true;\r\n        let isFieldArray;\r\n        let defaultValue;\r\n        if (field &&\r\n            (isRadioOrCheckbox\r\n                ? isArray(field.options) &&\r\n                    unique(field.options).find((option) => {\r\n                        return value === option.ref.value && option.ref === ref;\r\n                    })\r\n                : ref === field.ref)) {\r\n            fields[name] = Object.assign(Object.assign({}, field), validateOptions);\r\n            return;\r\n        }\r\n        if (type) {\r\n            const mutationWatcher = onDomRemove(ref, () => removeFieldEventListenerAndRef(field));\r\n            field = isRadioOrCheckbox\r\n                ? Object.assign({ options: [\r\n                        ...unique((field && field.options) || []),\r\n                        {\r\n                            ref,\r\n                            mutationWatcher,\r\n                        },\r\n                    ], ref: { type, name } }, validateOptions) : Object.assign(Object.assign({}, fieldRefAndValidationOptions), { mutationWatcher });\r\n        }\r\n        else {\r\n            field = fieldRefAndValidationOptions;\r\n        }\r\n        fields[name] = field;\r\n        const isEmptyUnmountFields = isUndefined(get(unmountFieldsStateRef.current, name));\r\n        if (!isEmptyObject(defaultValuesRef.current) || !isEmptyUnmountFields) {\r\n            defaultValue = get(isEmptyUnmountFields\r\n                ? defaultValuesRef.current\r\n                : unmountFieldsStateRef.current, name);\r\n            isEmptyDefaultValue = isUndefined(defaultValue);\r\n            isFieldArray = isNameInFieldArray(fieldArrayNamesRef.current, name);\r\n            if (!isEmptyDefaultValue && !isFieldArray) {\r\n                setFieldValue(field, defaultValue);\r\n            }\r\n        }\r\n        if (resolver && !isFieldArray && readFormStateRef.current.isValid) {\r\n            validateResolver();\r\n        }\r\n        else if (!isEmptyObject(validateOptions)) {\r\n            fieldsWithValidationRef.current.add(name);\r\n            if (!isOnSubmit && readFormStateRef.current.isValid) {\r\n                validateField(fieldsRef, isValidateAllFieldCriteria, field, unmountFieldsStateRef).then((error) => {\r\n                    const previousFormIsValid = isValidRef.current;\r\n                    isEmptyObject(error)\r\n                        ? validFieldsRef.current.add(name)\r\n                        : (isValidRef.current = false);\r\n                    if (previousFormIsValid !== isValidRef.current) {\r\n                        reRender();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        if (!defaultValuesAtRenderRef.current[name] &&\r\n            !(isFieldArray && isEmptyDefaultValue)) {\r\n            const fieldValue = getFieldValue(fieldsRef, name, unmountFieldsStateRef);\r\n            defaultValuesAtRenderRef.current[name] = isEmptyDefaultValue\r\n                ? isObject(fieldValue)\r\n                    ? Object.assign({}, fieldValue) : fieldValue\r\n                : defaultValue;\r\n        }\r\n        if (type) {\r\n            attachEventListeners(isRadioOrCheckbox && field.options\r\n                ? field.options[field.options.length - 1]\r\n                : field, isRadioOrCheckbox || isSelectInput(ref), handleChangeRef.current);\r\n        }\r\n    }\r\n    function register(refOrValidationOptions, rules) {\r\n        if (!isWindowUndefined) {\r\n            if (isString(refOrValidationOptions)) {\r\n                registerFieldRef({ name: refOrValidationOptions }, rules);\r\n            }\r\n            else if (isObject(refOrValidationOptions) &&\r\n                'name' in refOrValidationOptions) {\r\n                registerFieldRef(refOrValidationOptions, rules);\r\n            }\r\n            else {\r\n                return (ref) => ref && registerFieldRef(ref, refOrValidationOptions);\r\n            }\r\n        }\r\n    }\r\n    const handleSubmit = useCallback((callback) => async (e) => {\r\n        if (e && e.preventDefault) {\r\n            e.preventDefault();\r\n            e.persist();\r\n        }\r\n        let fieldErrors = {};\r\n        let fieldValues = getFieldsValues(fieldsRef, unmountFieldsStateRef);\r\n        if (readFormStateRef.current.isSubmitting) {\r\n            isSubmittingRef.current = true;\r\n            reRender();\r\n        }\r\n        try {\r\n            if (resolverRef.current) {\r\n                const { errors, values } = await resolverRef.current(fieldValues, contextRef.current, isValidateAllFieldCriteria);\r\n                errorsRef.current = errors;\r\n                fieldErrors = errors;\r\n                fieldValues = values;\r\n            }\r\n            else {\r\n                for (const field of Object.values(fieldsRef.current)) {\r\n                    if (field) {\r\n                        const { ref: { name }, } = field;\r\n                        const fieldError = await validateField(fieldsRef, isValidateAllFieldCriteria, field, unmountFieldsStateRef);\r\n                        if (fieldError[name]) {\r\n                            set(fieldErrors, name, fieldError[name]);\r\n                            validFieldsRef.current.delete(name);\r\n                        }\r\n                        else if (fieldsWithValidationRef.current.has(name)) {\r\n                            unset(errorsRef.current, name);\r\n                            validFieldsRef.current.add(name);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (isEmptyObject(fieldErrors) &&\r\n                Object.keys(errorsRef.current).every((name) => Object.keys(fieldsRef.current).includes(name))) {\r\n                errorsRef.current = {};\r\n                reRender();\r\n                await callback(fieldValues, e);\r\n            }\r\n            else {\r\n                errorsRef.current = Object.assign(Object.assign({}, errorsRef.current), fieldErrors);\r\n                if (shouldFocusError) {\r\n                    focusOnErrorField(fieldsRef.current, fieldErrors);\r\n                }\r\n            }\r\n        }\r\n        finally {\r\n            isSubmittedRef.current = true;\r\n            isSubmittingRef.current = false;\r\n            submitCountRef.current = submitCountRef.current + 1;\r\n            reRender();\r\n        }\r\n    }, [shouldFocusError, isValidateAllFieldCriteria]);\r\n    const resetRefs = ({ errors, isDirty, isSubmitted, touched, isValid, submitCount, dirtyFields, }) => {\r\n        if (!errors) {\r\n            errorsRef.current = {};\r\n        }\r\n        if (!touched) {\r\n            touchedFieldsRef.current = {};\r\n        }\r\n        if (!isValid) {\r\n            validFieldsRef.current = new Set();\r\n            fieldsWithValidationRef.current = new Set();\r\n            isValidRef.current = true;\r\n        }\r\n        if (!isDirty) {\r\n            isDirtyRef.current = false;\r\n        }\r\n        if (!dirtyFields) {\r\n            dirtyFieldsRef.current = {};\r\n        }\r\n        if (!isSubmitted) {\r\n            isSubmittedRef.current = false;\r\n        }\r\n        if (!submitCount) {\r\n            submitCountRef.current = 0;\r\n        }\r\n        defaultValuesAtRenderRef.current = {};\r\n        fieldArrayDefaultValues.current = {};\r\n        watchFieldsRef.current = new Set();\r\n        isWatchAllRef.current = false;\r\n    };\r\n    const reset = (values, omitResetState = {}) => {\r\n        if (isWeb) {\r\n            for (const field of Object.values(fieldsRef.current)) {\r\n                if (field) {\r\n                    const { ref, options } = field;\r\n                    const inputRef = isRadioOrCheckboxFunction(ref) && isArray(options)\r\n                        ? options[0].ref\r\n                        : ref;\r\n                    if (isHTMLElement(inputRef)) {\r\n                        try {\r\n                            inputRef.closest('form').reset();\r\n                            break;\r\n                        }\r\n                        catch (_a) { }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        fieldsRef.current = {};\r\n        defaultValuesRef.current = values || Object.assign({}, defaultValuesRef.current);\r\n        if (values) {\r\n            renderWatchedInputs('');\r\n        }\r\n        unmountFieldsStateRef.current = shouldUnregister ? {} : values || {};\r\n        Object.values(resetFieldArrayFunctionRef.current).forEach((resetFieldArray) => isFunction(resetFieldArray) && resetFieldArray());\r\n        resetRefs(omitResetState);\r\n        reRender();\r\n    };\r\n    useEffect(() => {\r\n        isUnMount.current = false;\r\n        return () => {\r\n            isUnMount.current = true;\r\n            fieldsRef.current &&\r\n                process.env.NODE_ENV === 'production' &&\r\n                Object.values(fieldsRef.current).forEach((field) => removeFieldEventListenerAndRef(field, true));\r\n        };\r\n    }, [removeFieldEventListenerAndRef]);\r\n    if (!resolver) {\r\n        isValidRef.current =\r\n            validFieldsRef.current.size >= fieldsWithValidationRef.current.size &&\r\n                isEmptyObject(errorsRef.current);\r\n    }\r\n    const formState = {\r\n        dirtyFields: dirtyFieldsRef.current,\r\n        isSubmitted: isSubmittedRef.current,\r\n        submitCount: submitCountRef.current,\r\n        touched: touchedFieldsRef.current,\r\n        isDirty: isDirtyRef.current,\r\n        isSubmitting: isSubmittingRef.current,\r\n        isValid: isOnSubmit\r\n            ? isSubmittedRef.current && isEmptyObject(errorsRef.current)\r\n            : isValidRef.current,\r\n    };\r\n    const commonProps = {\r\n        trigger,\r\n        setValue: useCallback(setValue, [\r\n            reRender,\r\n            setInternalValue,\r\n            trigger,\r\n        ]),\r\n        getValues: useCallback(getValues, []),\r\n        register: useCallback(register, [defaultValuesRef.current]),\r\n        unregister: useCallback(unregister, []),\r\n        formState: isProxyEnabled\r\n            ? new Proxy(formState, {\r\n                get: (obj, prop) => {\r\n                    if (process.env.NODE_ENV !== 'production' &&\r\n                        prop === 'isValid' &&\r\n                        isOnSubmit) {\r\n                        console.warn('📋 `formState.isValid` is applicable with `onChange` or `onBlur` mode. https://react-hook-form.com/api#formState');\r\n                    }\r\n                    if (prop in obj) {\r\n                        readFormStateRef.current[prop] = true;\r\n                        return obj[prop];\r\n                    }\r\n                    return undefined;\r\n                },\r\n            })\r\n            : formState,\r\n    };\r\n    const control = Object.assign(Object.assign({ removeFieldEventListener,\r\n        renderWatchedInputs,\r\n        watchInternal,\r\n        reRender, mode: modeRef.current, reValidateMode: {\r\n            isReValidateOnBlur,\r\n            isReValidateOnChange,\r\n        }, errorsRef,\r\n        touchedFieldsRef,\r\n        fieldsRef,\r\n        isWatchAllRef,\r\n        watchFieldsRef,\r\n        resetFieldArrayFunctionRef,\r\n        watchFieldsHookRef,\r\n        watchFieldsHookRenderRef,\r\n        fieldArrayDefaultValues,\r\n        validFieldsRef,\r\n        dirtyFieldsRef,\r\n        fieldsWithValidationRef,\r\n        fieldArrayNamesRef,\r\n        isDirtyRef,\r\n        isSubmittedRef,\r\n        readFormStateRef,\r\n        defaultValuesRef,\r\n        unmountFieldsStateRef }, (resolver ? { validateSchemaIsValid: validateResolver } : {})), commonProps);\r\n    return Object.assign({ watch,\r\n        control,\r\n        handleSubmit, reset: useCallback(reset, []), clearErrors: useCallback(clearErrors, []), setError: useCallback(setError, []), errors: errorsRef.current }, commonProps);\r\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nconst FormContext = createContext(null);\r\nFormContext.displayName = 'RHFContext';\r\nconst useFormContext = () => useContext(FormContext);\r\nconst FormProvider = (_a) => {\r\n    var { children } = _a, props = __rest(_a, [\"children\"]);\r\n    return (createElement(FormContext.Provider, { value: Object.assign({}, props) }, children));\r\n};\n\nvar generateId = () => {\r\n    const d = typeof performance === UNDEFINED ? Date.now() : performance.now() * 1000;\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n        const r = (Math.random() * 16 + d) % 16 | 0;\r\n        return (c == 'x' ? r : (r & 0x3) | 0x8).toString(16);\r\n    });\r\n};\n\nconst removeAt = (data, index) => [\r\n    ...data.slice(0, index),\r\n    ...data.slice(index + 1),\r\n];\r\nfunction removeAtIndexes(data, index) {\r\n    let k = -1;\r\n    while (++k < data.length) {\r\n        if (index.indexOf(k) >= 0) {\r\n            delete data[k];\r\n        }\r\n    }\r\n    return unique(data);\r\n}\r\nvar removeArrayAt = (data, index) => isUndefined(index)\r\n    ? []\r\n    : isArray(index)\r\n        ? removeAtIndexes(data, index)\r\n        : removeAt(data, index);\n\nvar moveArrayAt = (data, from, to) => {\r\n    if (isArray(data)) {\r\n        if (isUndefined(data[to])) {\r\n            data[to] = undefined;\r\n        }\r\n        data.splice(to, 0, data.splice(from, 1)[0]);\r\n        return data;\r\n    }\r\n    return [];\r\n};\n\nvar swapArrayAt = (data, indexA, indexB) => {\r\n    const temp = [data[indexB], data[indexA]];\r\n    data[indexA] = temp[0];\r\n    data[indexB] = temp[1];\r\n};\n\nfunction prepend(data, value) {\r\n    return [...(isArray(value) ? value : [value || undefined]), ...data];\r\n}\n\nfunction insert(data, index, value) {\r\n    return [\r\n        ...data.slice(0, index),\r\n        ...(isArray(value) ? value : [value || undefined]),\r\n        ...data.slice(index),\r\n    ];\r\n}\n\nvar fillEmptyArray = (value) => isArray(value) ? Array(value.length).fill(undefined) : undefined;\n\nfunction mapValueToBoolean(value) {\r\n    if (isObject(value)) {\r\n        const object = {};\r\n        for (const key in value) {\r\n            object[key] = true;\r\n        }\r\n        return [object];\r\n    }\r\n    return [true];\r\n}\r\nconst filterBooleanArray = (value) => isArray(value)\r\n    ? value.map(mapValueToBoolean).flat()\r\n    : mapValueToBoolean(value);\n\nconst appendId = (value, keyName) => (Object.assign({ [keyName]: generateId() }, (isObject(value) ? value : { value })));\r\nconst mapIds = (data, keyName) => (isArray(data) ? data : []).map((value) => appendId(value, keyName));\r\nconst useFieldArray = ({ control, name, keyName = 'id', }) => {\r\n    const methods = useFormContext();\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        if (!control && !methods) {\r\n            throw new Error('📋 useFieldArray is missing `control` prop.');\r\n        }\r\n        if (!name) {\r\n            console.warn('📋 useFieldArray is missing `name` attribute.');\r\n        }\r\n    }\r\n    const focusIndexRef = useRef(-1);\r\n    const { isWatchAllRef, resetFieldArrayFunctionRef, fieldArrayNamesRef, reRender, fieldsRef, defaultValuesRef, removeFieldEventListener, errorsRef, dirtyFieldsRef, isDirtyRef, touchedFieldsRef, readFormStateRef, watchFieldsRef, validFieldsRef, fieldsWithValidationRef, fieldArrayDefaultValues, validateSchemaIsValid, renderWatchedInputs, getValues, } = control || methods.control;\r\n    let shouldRender;\r\n    const getDefaultValues = () => [\r\n        ...(get(fieldArrayDefaultValues.current, name) ||\r\n            get(defaultValuesRef.current, name) ||\r\n            []),\r\n    ];\r\n    const memoizedDefaultValues = useRef(getDefaultValues());\r\n    const [fields, setField] = useState(mapIds(memoizedDefaultValues.current, keyName));\r\n    const allFields = useRef(fields);\r\n    const rootParentName = getFieldArrayParentName(name);\r\n    const getCurrentFieldsValues = () => get(getValues() || {}, name, allFields.current).map((item, index) => (Object.assign(Object.assign({}, allFields.current[index]), item)));\r\n    allFields.current = fields;\r\n    fieldArrayNamesRef.current.add(name);\r\n    if (!get(fieldArrayDefaultValues.current, name) && rootParentName) {\r\n        set(fieldArrayDefaultValues.current, rootParentName, get(defaultValuesRef.current, rootParentName));\r\n    }\r\n    const appendValueWithKey = (values) => values.map((value) => appendId(value, keyName));\r\n    const setFieldAndValidState = (fieldsValues) => {\r\n        setField(fieldsValues);\r\n        if (readFormStateRef.current.isValid && validateSchemaIsValid) {\r\n            validateSchemaIsValid({\r\n                [name]: fieldsValues,\r\n            });\r\n        }\r\n    };\r\n    const shouldRenderFieldArray = (shouldRender) => {\r\n        if (readFormStateRef.current.dirtyFields ||\r\n            readFormStateRef.current.isDirty ||\r\n            readFormStateRef.current.isValid) {\r\n            shouldRender = true;\r\n        }\r\n        renderWatchedInputs(name);\r\n        shouldRender && !isWatchAllRef.current && reRender();\r\n    };\r\n    const resetFields = (flagOrFields) => {\r\n        if (readFormStateRef.current.isDirty ||\r\n            readFormStateRef.current.dirtyFields) {\r\n            isDirtyRef.current =\r\n                isUndefined(flagOrFields) ||\r\n                    !deepEqual(flagOrFields.map((_a = {}) => {\r\n                        var _b = keyName, omitted = _a[_b], rest = __rest(_a, [typeof _b === \"symbol\" ? _b : _b + \"\"]);\r\n                        return rest;\r\n                    }), get(defaultValuesRef.current, name, []));\r\n        }\r\n        for (const key in fieldsRef.current) {\r\n            if (isMatchFieldArrayName(key, name) && fieldsRef.current[key]) {\r\n                removeFieldEventListener(fieldsRef.current[key], true);\r\n            }\r\n        }\r\n    };\r\n    const append = (value, shouldFocus = true) => {\r\n        shouldRender = false;\r\n        setFieldAndValidState([\r\n            ...allFields.current,\r\n            ...(isArray(value)\r\n                ? appendValueWithKey(value)\r\n                : [appendId(value, keyName)]),\r\n        ]);\r\n        if (readFormStateRef.current.dirtyFields ||\r\n            readFormStateRef.current.isDirty) {\r\n            set(dirtyFieldsRef.current, name, [\r\n                ...(get(dirtyFieldsRef.current, name) ||\r\n                    fillEmptyArray(fields.slice(0, 1))),\r\n                ...filterBooleanArray(value),\r\n            ]);\r\n            isDirtyRef.current = true;\r\n            shouldRender = true;\r\n        }\r\n        focusIndexRef.current = shouldFocus ? allFields.current.length : -1;\r\n        shouldRenderFieldArray(shouldRender);\r\n    };\r\n    const prepend$1 = (value, shouldFocus = true) => {\r\n        const emptyArray = fillEmptyArray(value);\r\n        shouldRender = false;\r\n        setFieldAndValidState(prepend(getCurrentFieldsValues(), isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)]));\r\n        resetFields();\r\n        if (isArray(get(errorsRef.current, name))) {\r\n            set(errorsRef.current, name, prepend(get(errorsRef.current, name), emptyArray));\r\n        }\r\n        if (readFormStateRef.current.touched &&\r\n            get(touchedFieldsRef.current, name)) {\r\n            set(touchedFieldsRef.current, name, prepend(get(touchedFieldsRef.current, name), emptyArray));\r\n            shouldRender = true;\r\n        }\r\n        if (readFormStateRef.current.dirtyFields ||\r\n            readFormStateRef.current.isDirty) {\r\n            set(dirtyFieldsRef.current, name, prepend(get(dirtyFieldsRef.current, name) || [], filterBooleanArray(value)));\r\n            shouldRender = true;\r\n        }\r\n        shouldRenderFieldArray(shouldRender);\r\n        focusIndexRef.current = shouldFocus ? 0 : -1;\r\n    };\r\n    const remove = (index) => {\r\n        shouldRender = false;\r\n        const fieldValues = getCurrentFieldsValues();\r\n        setFieldAndValidState(removeArrayAt(fieldValues, index));\r\n        resetFields(removeArrayAt(fieldValues, index));\r\n        if (isArray(get(errorsRef.current, name))) {\r\n            set(errorsRef.current, name, removeArrayAt(get(errorsRef.current, name), index));\r\n            if (!unique(get(errorsRef.current, name, [])).length) {\r\n                unset(errorsRef.current, name);\r\n            }\r\n        }\r\n        if (readFormStateRef.current.touched &&\r\n            get(touchedFieldsRef.current, name)) {\r\n            set(touchedFieldsRef.current, name, removeArrayAt(get(touchedFieldsRef.current, name), index));\r\n            shouldRender = true;\r\n        }\r\n        if ((readFormStateRef.current.dirtyFields ||\r\n            readFormStateRef.current.isDirty) &&\r\n            get(dirtyFieldsRef.current, name)) {\r\n            set(dirtyFieldsRef.current, name, removeArrayAt(get(dirtyFieldsRef.current, name), index));\r\n            if (!unique(get(dirtyFieldsRef.current, name, [])).length) {\r\n                unset(dirtyFieldsRef.current, name);\r\n            }\r\n            shouldRender = true;\r\n        }\r\n        if (readFormStateRef.current.isValid && !validateSchemaIsValid) {\r\n            let fieldIndex = -1;\r\n            let isFound = false;\r\n            const isIndexUndefined = isUndefined(index);\r\n            while (fieldIndex++ < fields.length) {\r\n                const isLast = fieldIndex === fields.length - 1;\r\n                const isCurrentIndex = (isArray(index) ? index : [index]).indexOf(fieldIndex) >= 0;\r\n                if (isCurrentIndex || isIndexUndefined) {\r\n                    isFound = true;\r\n                }\r\n                if (!isFound) {\r\n                    continue;\r\n                }\r\n                for (const key in fields[fieldIndex]) {\r\n                    const currentFieldName = `${name}[${fieldIndex}].${key}`;\r\n                    if (isCurrentIndex || isLast || isIndexUndefined) {\r\n                        validFieldsRef.current.delete(currentFieldName);\r\n                        fieldsWithValidationRef.current.delete(currentFieldName);\r\n                    }\r\n                    else {\r\n                        const previousFieldName = `${name}[${fieldIndex - 1}].${key}`;\r\n                        if (validFieldsRef.current.has(currentFieldName)) {\r\n                            validFieldsRef.current.add(previousFieldName);\r\n                        }\r\n                        if (fieldsWithValidationRef.current.has(currentFieldName)) {\r\n                            fieldsWithValidationRef.current.add(previousFieldName);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        shouldRenderFieldArray(shouldRender);\r\n    };\r\n    const insert$1 = (index, value, shouldFocus = true) => {\r\n        shouldRender = false;\r\n        const emptyArray = fillEmptyArray(value);\r\n        const fieldValues = getCurrentFieldsValues();\r\n        setFieldAndValidState(insert(fieldValues, index, isArray(value) ? appendValueWithKey(value) : [appendId(value, keyName)]));\r\n        resetFields(insert(fieldValues, index));\r\n        if (isArray(get(errorsRef.current, name))) {\r\n            set(errorsRef.current, name, insert(get(errorsRef.current, name), index, emptyArray));\r\n        }\r\n        if (readFormStateRef.current.touched &&\r\n            get(touchedFieldsRef.current, name)) {\r\n            set(touchedFieldsRef.current, name, insert(get(touchedFieldsRef.current, name), index, emptyArray));\r\n            shouldRender = true;\r\n        }\r\n        if ((readFormStateRef.current.dirtyFields ||\r\n            readFormStateRef.current.isDirty) &&\r\n            get(dirtyFieldsRef.current, name)) {\r\n            set(dirtyFieldsRef.current, name, insert(get(dirtyFieldsRef.current, name), index, filterBooleanArray(value)));\r\n            shouldRender = true;\r\n        }\r\n        shouldRenderFieldArray(shouldRender);\r\n        focusIndexRef.current = shouldFocus ? index : -1;\r\n    };\r\n    const swap = (indexA, indexB) => {\r\n        shouldRender = false;\r\n        const fieldValues = getCurrentFieldsValues();\r\n        swapArrayAt(fieldValues, indexA, indexB);\r\n        resetFields(fieldValues);\r\n        setFieldAndValidState([...fieldValues]);\r\n        if (isArray(get(errorsRef.current, name))) {\r\n            swapArrayAt(get(errorsRef.current, name), indexA, indexB);\r\n        }\r\n        if (readFormStateRef.current.touched &&\r\n            get(touchedFieldsRef.current, name)) {\r\n            swapArrayAt(get(touchedFieldsRef.current, name), indexA, indexB);\r\n            shouldRender = true;\r\n        }\r\n        if ((readFormStateRef.current.dirtyFields ||\r\n            readFormStateRef.current.isDirty) &&\r\n            get(dirtyFieldsRef.current, name)) {\r\n            swapArrayAt(get(dirtyFieldsRef.current, name), indexA, indexB);\r\n            shouldRender = true;\r\n        }\r\n        shouldRenderFieldArray(shouldRender);\r\n    };\r\n    const move = (from, to) => {\r\n        shouldRender = false;\r\n        const fieldValues = getCurrentFieldsValues();\r\n        moveArrayAt(fieldValues, from, to);\r\n        resetFields(fieldValues);\r\n        setFieldAndValidState([...fieldValues]);\r\n        if (isArray(get(errorsRef.current, name))) {\r\n            moveArrayAt(get(errorsRef.current, name), from, to);\r\n        }\r\n        if (readFormStateRef.current.touched &&\r\n            get(touchedFieldsRef.current, name)) {\r\n            moveArrayAt(get(touchedFieldsRef.current, name), from, to);\r\n            shouldRender = true;\r\n        }\r\n        if ((readFormStateRef.current.dirtyFields ||\r\n            readFormStateRef.current.isDirty) &&\r\n            get(dirtyFieldsRef.current, name)) {\r\n            moveArrayAt(get(dirtyFieldsRef.current, name), from, to);\r\n            shouldRender = true;\r\n        }\r\n        shouldRenderFieldArray(shouldRender);\r\n    };\r\n    const reset = () => {\r\n        resetFields();\r\n        memoizedDefaultValues.current = getDefaultValues();\r\n        setField(mapIds(memoizedDefaultValues.current, keyName));\r\n    };\r\n    useEffect(() => {\r\n        const defaultValues = get(fieldArrayDefaultValues.current, name);\r\n        if (defaultValues && fields.length < defaultValues.length) {\r\n            defaultValues.pop();\r\n            set(fieldArrayDefaultValues.current, name, defaultValues);\r\n        }\r\n        if (isWatchAllRef.current) {\r\n            reRender();\r\n        }\r\n        else if (watchFieldsRef) {\r\n            let shouldRenderUseWatch = true;\r\n            for (const watchField of watchFieldsRef.current) {\r\n                if (watchField.startsWith(name)) {\r\n                    reRender();\r\n                    shouldRenderUseWatch = false;\r\n                    break;\r\n                }\r\n            }\r\n            shouldRenderUseWatch && renderWatchedInputs(name);\r\n        }\r\n        if (focusIndexRef.current > -1) {\r\n            for (const key in fieldsRef.current) {\r\n                const field = fieldsRef.current[key];\r\n                if (key.startsWith(`${name}[${focusIndexRef.current}]`) &&\r\n                    field.ref.focus) {\r\n                    field.ref.focus();\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        focusIndexRef.current = -1;\r\n    }, [\r\n        fields,\r\n        name,\r\n        fieldArrayDefaultValues,\r\n        reRender,\r\n        fieldsRef,\r\n        watchFieldsRef,\r\n        isWatchAllRef,\r\n    ]);\r\n    useEffect(() => {\r\n        const resetFunctions = resetFieldArrayFunctionRef.current;\r\n        resetFunctions[name] = reset;\r\n        return () => {\r\n            resetFields();\r\n            delete resetFunctions[name];\r\n            fieldArrayNamesRef.current.delete(name);\r\n        };\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    return {\r\n        swap: useCallback(swap, [name]),\r\n        move: useCallback(move, [name]),\r\n        prepend: useCallback(prepend$1, [name]),\r\n        append: useCallback(append, [name]),\r\n        remove: useCallback(remove, [fields, name]),\r\n        insert: useCallback(insert$1, [name]),\r\n        fields,\r\n    };\r\n};\n\nfunction useWatch({ control, name, defaultValue, }) {\r\n    const methods = useFormContext();\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        if (!control && !methods) {\r\n            throw new Error('📋 useWatch is missing `control` prop.');\r\n        }\r\n        if (name === '') {\r\n            console.warn('📋 useWatch is missing `name` attribute.');\r\n        }\r\n    }\r\n    const { watchFieldsHookRef, watchFieldsHookRenderRef, watchInternal, defaultValuesRef, } = control || methods.control;\r\n    const [value, setValue] = useState(isUndefined(defaultValue)\r\n        ? isString(name)\r\n            ? get(defaultValuesRef.current, name)\r\n            : isArray(name)\r\n                ? name.reduce((previous, inputName) => (Object.assign(Object.assign({}, previous), { [inputName]: get(defaultValuesRef.current, inputName) })), {})\r\n                : defaultValuesRef.current\r\n        : defaultValue);\r\n    const idRef = useRef();\r\n    const defaultValueRef = useRef(defaultValue);\r\n    const updateWatchValue = useCallback(() => setValue(watchInternal(name, defaultValueRef.current, idRef.current)), [setValue, watchInternal, defaultValueRef, name, idRef]);\r\n    useEffect(() => {\r\n        const id = (idRef.current = generateId());\r\n        const watchFieldsHookRender = watchFieldsHookRenderRef.current;\r\n        const watchFieldsHook = watchFieldsHookRef.current;\r\n        watchFieldsHook[id] = new Set();\r\n        watchFieldsHookRender[id] = updateWatchValue;\r\n        watchInternal(name, defaultValueRef.current, id);\r\n        return () => {\r\n            delete watchFieldsHook[id];\r\n            delete watchFieldsHookRender[id];\r\n        };\r\n    }, [\r\n        name,\r\n        updateWatchValue,\r\n        watchFieldsHookRenderRef,\r\n        watchFieldsHookRef,\r\n        watchInternal,\r\n        defaultValueRef,\r\n    ]);\r\n    return (isUndefined(value) ? defaultValue : value);\r\n}\n\nvar getInputValue = (event) => isPrimitive(event) ||\r\n    !isObject(event.target) ||\r\n    (isObject(event.target) && !event.type)\r\n    ? event\r\n    : isUndefined(event.target.value)\r\n        ? event.target.checked\r\n        : event.target.value;\n\nconst Controller = (_a) => {\r\n    var { name, rules, as, render, defaultValue, control, onFocus } = _a, rest = __rest(_a, [\"name\", \"rules\", \"as\", \"render\", \"defaultValue\", \"control\", \"onFocus\"]);\r\n    const methods = useFormContext();\r\n    if (process.env.NODE_ENV !== 'production' && !control && !methods) {\r\n        throw new Error('📋 Controller is missing `control` prop.');\r\n    }\r\n    const { defaultValuesRef, setValue, register, unregister, trigger, mode, reValidateMode: { isReValidateOnBlur, isReValidateOnChange }, isSubmittedRef, touchedFieldsRef, readFormStateRef, reRender, fieldsRef, fieldArrayNamesRef, unmountFieldsStateRef, } = control || methods.control;\r\n    const isNotFieldArray = !isNameInFieldArray(fieldArrayNamesRef.current, name);\r\n    const getInitialValue = () => !isUndefined(get(unmountFieldsStateRef.current, name)) && isNotFieldArray\r\n        ? unmountFieldsStateRef.current[name]\r\n        : isUndefined(defaultValue)\r\n            ? get(defaultValuesRef.current, name)\r\n            : defaultValue;\r\n    const [value, setInputStateValue] = useState(getInitialValue());\r\n    const valueRef = useRef(value);\r\n    const onFocusRef = useRef(onFocus);\r\n    const isSubmitted = isSubmittedRef.current;\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        if (isUndefined(value)) {\r\n            console.warn('📋 Controller `defaultValue` or useForm `defaultValues` is missing.');\r\n        }\r\n        if (as && render) {\r\n            console.warn('📋 Should use either `as` or `render` prop.');\r\n        }\r\n        if (!isNotFieldArray && isUndefined(defaultValue)) {\r\n            console.warn('📋 Controller is missing `defaultValue` prop when using `useFieldArray`.');\r\n        }\r\n    }\r\n    const shouldValidate = (isBlurEvent) => !skipValidation(Object.assign({ isBlurEvent,\r\n        isReValidateOnBlur,\r\n        isReValidateOnChange,\r\n        isSubmitted }, mode));\r\n    const commonTask = ([event]) => {\r\n        const data = getInputValue(event);\r\n        setInputStateValue(data);\r\n        valueRef.current = data;\r\n        return data;\r\n    };\r\n    const registerField = useCallback(() => {\r\n        if (process.env.NODE_ENV !== 'production' && !name) {\r\n            return console.warn('📋 Field is missing `name` prop.');\r\n        }\r\n        if (fieldsRef.current[name]) {\r\n            fieldsRef.current[name] = Object.assign({ ref: fieldsRef.current[name].ref }, rules);\r\n        }\r\n        else {\r\n            register(Object.defineProperty({ name, focus: onFocusRef.current }, VALUE, {\r\n                set(data) {\r\n                    setInputStateValue(data);\r\n                    valueRef.current = data;\r\n                },\r\n                get() {\r\n                    return valueRef.current;\r\n                },\r\n            }), rules);\r\n            if (isNotFieldArray && !get(defaultValuesRef.current, name)) {\r\n                setInputStateValue(getInitialValue());\r\n            }\r\n        }\r\n    }, [fieldsRef, rules, name, onFocusRef, register]);\r\n    useEffect(() => () => {\r\n        !isNameInFieldArray(fieldArrayNamesRef.current, name) && unregister(name);\r\n    }, [unregister, name, fieldArrayNamesRef]);\r\n    useEffect(() => {\r\n        registerField();\r\n    }, [registerField]);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    useEffect(() => {\r\n        if (!fieldsRef.current[name]) {\r\n            registerField();\r\n            if (isNotFieldArray) {\r\n                setInputStateValue(getInitialValue());\r\n            }\r\n        }\r\n    });\r\n    const onBlur = () => {\r\n        if (readFormStateRef.current.touched &&\r\n            !get(touchedFieldsRef.current, name)) {\r\n            set(touchedFieldsRef.current, name, true);\r\n            reRender();\r\n        }\r\n        if (shouldValidate(true)) {\r\n            trigger(name);\r\n        }\r\n    };\r\n    const onChange = (...event) => setValue(name, commonTask(event), {\r\n        shouldValidate: shouldValidate(),\r\n        shouldDirty: true,\r\n    });\r\n    const props = Object.assign(Object.assign({}, rest), { onChange,\r\n        onBlur,\r\n        name,\r\n        value });\r\n    return as\r\n        ? isValidElement(as)\r\n            ? cloneElement(as, props)\r\n            : createElement(as, props)\r\n        : render\r\n            ? render({\r\n                onChange,\r\n                onBlur,\r\n                value,\r\n            })\r\n            : null;\r\n};\n\nexport { Controller, FormProvider, appendErrors, get, transformToNestObject, useFieldArray, useForm, useFormContext, useWatch };\n//# sourceMappingURL=index.esm.js.map\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');\n\nexports.default = _default;","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');\n\nexports.default = _default;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport useControlled from '../utils/useControlled';\nimport useFormControl from '../FormControl/useFormControl';\nimport withStyles from '../styles/withStyles';\nimport IconButton from '../IconButton';\nexport var styles = {\n  root: {\n    padding: 9\n  },\n  checked: {},\n  disabled: {},\n  input: {\n    cursor: 'inherit',\n    position: 'absolute',\n    opacity: 0,\n    width: '100%',\n    height: '100%',\n    top: 0,\n    left: 0,\n    margin: 0,\n    padding: 0,\n    zIndex: 1\n  }\n};\n/**\n * @ignore - internal component.\n */\n\nvar SwitchBase = /*#__PURE__*/React.forwardRef(function SwitchBase(props, ref) {\n  var autoFocus = props.autoFocus,\n      checkedProp = props.checked,\n      checkedIcon = props.checkedIcon,\n      classes = props.classes,\n      className = props.className,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      icon = props.icon,\n      id = props.id,\n      inputProps = props.inputProps,\n      inputRef = props.inputRef,\n      name = props.name,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      readOnly = props.readOnly,\n      required = props.required,\n      tabIndex = props.tabIndex,\n      type = props.type,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"autoFocus\", \"checked\", \"checkedIcon\", \"classes\", \"className\", \"defaultChecked\", \"disabled\", \"icon\", \"id\", \"inputProps\", \"inputRef\", \"name\", \"onBlur\", \"onChange\", \"onFocus\", \"readOnly\", \"required\", \"tabIndex\", \"type\", \"value\"]);\n\n  var _useControlled = useControlled({\n    controlled: checkedProp,\n    default: Boolean(defaultChecked),\n    name: 'SwitchBase',\n    state: 'checked'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      checked = _useControlled2[0],\n      setCheckedState = _useControlled2[1];\n\n  var muiFormControl = useFormControl();\n\n  var handleFocus = function handleFocus(event) {\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    if (muiFormControl && muiFormControl.onFocus) {\n      muiFormControl.onFocus(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    if (onBlur) {\n      onBlur(event);\n    }\n\n    if (muiFormControl && muiFormControl.onBlur) {\n      muiFormControl.onBlur(event);\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newChecked = event.target.checked;\n    setCheckedState(newChecked);\n\n    if (onChange) {\n      // TODO v5: remove the second argument.\n      onChange(event, newChecked);\n    }\n  };\n\n  var disabled = disabledProp;\n\n  if (muiFormControl) {\n    if (typeof disabled === 'undefined') {\n      disabled = muiFormControl.disabled;\n    }\n  }\n\n  var hasLabelFor = type === 'checkbox' || type === 'radio';\n  return /*#__PURE__*/React.createElement(IconButton, _extends({\n    component: \"span\",\n    className: clsx(classes.root, className, checked && classes.checked, disabled && classes.disabled),\n    disabled: disabled,\n    tabIndex: null,\n    role: undefined,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(\"input\", _extends({\n    autoFocus: autoFocus,\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    className: classes.input,\n    disabled: disabled,\n    id: hasLabelFor && id,\n    name: name,\n    onChange: handleInputChange,\n    readOnly: readOnly,\n    ref: inputRef,\n    required: required,\n    tabIndex: tabIndex,\n    type: type,\n    value: value\n  }, inputProps)), checked ? checkedIcon : icon);\n}); // NB: If changed, please update Checkbox, Switch and Radio\n// so that the API documentation is updated.\n\nprocess.env.NODE_ENV !== \"production\" ? SwitchBase.propTypes = {\n  /**\n   * If `true`, the `input` element will be focused during the first mount.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node.isRequired,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /*\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * It prevents the user from changing the value of the field\n   * (not from interacting with the field).\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The input component prop `type`.\n   */\n  type: PropTypes.string.isRequired,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateSwitchBase'\n})(SwitchBase);","import * as React from 'react';\nimport RadioGroupContext from './RadioGroupContext';\nexport default function useRadioGroup() {\n  return React.useContext(RadioGroupContext);\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n    '@keyframes circular-rotate': {\n      '0%': {\n        // Fix IE 11 wobbly\n        transformOrigin: '50% 50%'\n      },\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = /*#__PURE__*/React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = \"\".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), \"px\");\n      rootStyle.transform = \"rotate(\".concat((easeOut(value / 70) * 270).toFixed(3), \"deg)\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['inherit', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: You have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport FormGroup from '../FormGroup';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport RadioGroupContext from './RadioGroupContext';\nimport useId from '../utils/unstable_useId';\nvar RadioGroup = /*#__PURE__*/React.forwardRef(function RadioGroup(props, ref) {\n  var actions = props.actions,\n      children = props.children,\n      nameProp = props.name,\n      valueProp = props.value,\n      onChange = props.onChange,\n      other = _objectWithoutProperties(props, [\"actions\", \"children\", \"name\", \"value\", \"onChange\"]);\n\n  var rootRef = React.useRef(null);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: props.defaultValue,\n    name: 'RadioGroup'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  React.useImperativeHandle(actions, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector('input:not(:disabled):checked');\n\n        if (!input) {\n          input = rootRef.current.querySelector('input:not(:disabled)');\n        }\n\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n  var handleRef = useForkRef(ref, rootRef);\n\n  var handleChange = function handleChange(event) {\n    setValue(event.target.value);\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  };\n\n  var name = useId(nameProp);\n  return /*#__PURE__*/React.createElement(RadioGroupContext.Provider, {\n    value: {\n      name: name,\n      onChange: handleChange,\n      value: value\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, _extends({\n    role: \"radiogroup\",\n    ref: handleRef\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? RadioGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * The default `input` element value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.number, PropTypes.string]),\n\n  /**\n   * The name used to reference the value of the control.\n   * If you don't provide this prop, it falls back to a randomly generated name.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when a radio button is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Value of the selected radio button. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default RadioGroup;","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nvar RadioGroupContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  RadioGroupContext.displayName = 'RadioGroupContext';\n}\n\nexport default RadioGroupContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = /*#__PURE__*/React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport { useFormControl } from '../FormControl';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      alignItems: 'center',\n      cursor: 'pointer',\n      // For correct alignment with the text.\n      verticalAlign: 'middle',\n      WebkitTapHighlightColor: 'transparent',\n      marginLeft: -11,\n      marginRight: 16,\n      // used for row presentation of radio/checkbox\n      '&$disabled': {\n        cursor: 'default'\n      }\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"start\"`. */\n    labelPlacementStart: {\n      flexDirection: 'row-reverse',\n      marginLeft: 16,\n      // used for row presentation of radio/checkbox\n      marginRight: -11\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"top\"`. */\n    labelPlacementTop: {\n      flexDirection: 'column-reverse',\n      marginLeft: 16\n    },\n\n    /* Styles applied to the root element if `labelPlacement=\"bottom\"`. */\n    labelPlacementBottom: {\n      flexDirection: 'column',\n      marginLeft: 16\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the label's Typography component. */\n    label: {\n      '&$disabled': {\n        color: theme.palette.text.disabled\n      }\n    }\n  };\n};\n/**\n * Drop in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nvar FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(props, ref) {\n  var checked = props.checked,\n      classes = props.classes,\n      className = props.className,\n      control = props.control,\n      disabledProp = props.disabled,\n      inputRef = props.inputRef,\n      label = props.label,\n      _props$labelPlacement = props.labelPlacement,\n      labelPlacement = _props$labelPlacement === void 0 ? 'end' : _props$labelPlacement,\n      name = props.name,\n      onChange = props.onChange,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"className\", \"control\", \"disabled\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"]);\n\n  var muiFormControl = useFormControl();\n  var disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  var controlProps = {\n    disabled: disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(function (key) {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"label\", _extends({\n    className: clsx(classes.root, className, labelPlacement !== 'end' && classes[\"labelPlacement\".concat(capitalize(labelPlacement))], disabled && classes.disabled),\n    ref: ref\n  }, other), /*#__PURE__*/React.cloneElement(control, controlProps), /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    className: clsx(classes.label, disabled && classes.disabled)\n  }, label));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * A control element. For instance, it can be be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * The text to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControlLabel'\n})(FormControlLabel);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CancelIcon from '../internal/svg-icons/Cancel';\nimport withStyles from '../styles/withStyles';\nimport { emphasize, fade } from '../styles/colorManipulator';\nimport useForkRef from '../utils/useForkRef';\nimport unsupportedProp from '../utils/unsupportedProp';\nimport capitalize from '../utils/capitalize';\nimport ButtonBase from '../ButtonBase';\nexport var styles = function styles(theme) {\n  var backgroundColor = theme.palette.type === 'light' ? theme.palette.grey[300] : theme.palette.grey[700];\n  var deleteIconColor = fade(theme.palette.text.primary, 0.26);\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(13),\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: 32,\n      color: theme.palette.getContrastText(backgroundColor),\n      backgroundColor: backgroundColor,\n      borderRadius: 32 / 2,\n      whiteSpace: 'nowrap',\n      transition: theme.transitions.create(['background-color', 'box-shadow']),\n      // label will inherit this from root, then `clickable` class overrides this for both\n      cursor: 'default',\n      // We disable the focus ring for mouse, touch and keyboard users.\n      outline: 0,\n      textDecoration: 'none',\n      border: 'none',\n      // Remove `button` border\n      padding: 0,\n      // Remove `button` padding\n      verticalAlign: 'middle',\n      boxSizing: 'border-box',\n      '&$disabled': {\n        opacity: 0.5,\n        pointerEvents: 'none'\n      },\n      '& $avatar': {\n        marginLeft: 5,\n        marginRight: -6,\n        width: 24,\n        height: 24,\n        color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n        fontSize: theme.typography.pxToRem(12)\n      },\n      '& $avatarColorPrimary': {\n        color: theme.palette.primary.contrastText,\n        backgroundColor: theme.palette.primary.dark\n      },\n      '& $avatarColorSecondary': {\n        color: theme.palette.secondary.contrastText,\n        backgroundColor: theme.palette.secondary.dark\n      },\n      '& $avatarSmall': {\n        marginLeft: 4,\n        marginRight: -4,\n        width: 18,\n        height: 18,\n        fontSize: theme.typography.pxToRem(10)\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      height: 24\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      backgroundColor: theme.palette.primary.main,\n      color: theme.palette.primary.contrastText\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      backgroundColor: theme.palette.secondary.main,\n      color: theme.palette.secondary.contrastText\n    },\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `onClick` is defined or `clickable={true}`. */\n    clickable: {\n      userSelect: 'none',\n      WebkitTapHighlightColor: 'transparent',\n      cursor: 'pointer',\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      },\n      '&:active': {\n        boxShadow: theme.shadows[1]\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"primary\"` is defined or `clickable={true}`. */\n    clickableColorPrimary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onClick` and `color=\"secondary\"` is defined or `clickable={true}`. */\n    clickableColorSecondary: {\n      '&:hover, &:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` is defined. */\n    deletable: {\n      '&:focus': {\n        backgroundColor: emphasize(backgroundColor, 0.08)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"primary\"` is defined. */\n    deletableColorPrimary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.primary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `onDelete` and `color=\"secondary\"` is defined. */\n    deletableColorSecondary: {\n      '&:focus': {\n        backgroundColor: emphasize(theme.palette.secondary.main, 0.2)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      backgroundColor: 'transparent',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity)\n      },\n      '& $avatar': {\n        marginLeft: 4\n      },\n      '& $avatarSmall': {\n        marginLeft: 2\n      },\n      '& $icon': {\n        marginLeft: 4\n      },\n      '& $iconSmall': {\n        marginLeft: 2\n      },\n      '& $deleteIcon': {\n        marginRight: 5\n      },\n      '& $deleteIconSmall': {\n        marginRight: 3\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(theme.palette.primary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(theme.palette.secondary.main),\n      '$clickable&:hover, $clickable&:focus, $deletable&:focus': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity)\n      }\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the `avatar` element. */\n    avatar: {},\n\n    /* Styles applied to the `avatar` element if `size=\"small\"`. */\n    avatarSmall: {},\n\n    /* Styles applied to the `avatar` element if `color=\"primary\"`. */\n    avatarColorPrimary: {},\n\n    /* Styles applied to the `avatar` element if `color=\"secondary\"`. */\n    avatarColorSecondary: {},\n\n    /* Styles applied to the `icon` element. */\n    icon: {\n      color: theme.palette.type === 'light' ? theme.palette.grey[700] : theme.palette.grey[300],\n      marginLeft: 5,\n      marginRight: -6\n    },\n\n    /* Styles applied to the `icon` element if `size=\"small\"`. */\n    iconSmall: {\n      width: 18,\n      height: 18,\n      marginLeft: 4,\n      marginRight: -4\n    },\n\n    /* Styles applied to the `icon` element if `color=\"primary\"`. */\n    iconColorPrimary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the `icon` element if `color=\"secondary\"`. */\n    iconColorSecondary: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the label `span` element. */\n    label: {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      paddingLeft: 12,\n      paddingRight: 12,\n      whiteSpace: 'nowrap'\n    },\n\n    /* Styles applied to the label `span` element if `size=\"small\"`. */\n    labelSmall: {\n      paddingLeft: 8,\n      paddingRight: 8\n    },\n\n    /* Styles applied to the `deleteIcon` element. */\n    deleteIcon: {\n      WebkitTapHighlightColor: 'transparent',\n      color: deleteIconColor,\n      height: 22,\n      width: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: fade(deleteIconColor, 0.4)\n      }\n    },\n\n    /* Styles applied to the `deleteIcon` element if `size=\"small\"`. */\n    deleteIconSmall: {\n      height: 16,\n      width: 16,\n      marginRight: 4,\n      marginLeft: -4\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"default\"`. */\n    deleteIconColorPrimary: {\n      color: fade(theme.palette.primary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"default\"`. */\n    deleteIconColorSecondary: {\n      color: fade(theme.palette.secondary.contrastText, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.contrastText\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"primary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorPrimary: {\n      color: fade(theme.palette.primary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.primary.main\n      }\n    },\n\n    /* Styles applied to the deleteIcon element if `color=\"secondary\"` and `variant=\"outlined\"`. */\n    deleteIconOutlinedColorSecondary: {\n      color: fade(theme.palette.secondary.main, 0.7),\n      '&:hover, &:active': {\n        color: theme.palette.secondary.main\n      }\n    }\n  };\n};\n\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\n\n\nvar Chip = /*#__PURE__*/React.forwardRef(function Chip(props, ref) {\n  var avatarProp = props.avatar,\n      classes = props.classes,\n      className = props.className,\n      clickableProp = props.clickable,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      ComponentProp = props.component,\n      deleteIconProp = props.deleteIcon,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      iconProp = props.icon,\n      label = props.label,\n      onClick = props.onClick,\n      onDelete = props.onDelete,\n      onKeyDown = props.onKeyDown,\n      onKeyUp = props.onKeyUp,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'default' : _props$variant,\n      other = _objectWithoutProperties(props, [\"avatar\", \"classes\", \"className\", \"clickable\", \"color\", \"component\", \"deleteIcon\", \"disabled\", \"icon\", \"label\", \"onClick\", \"onDelete\", \"onKeyDown\", \"onKeyUp\", \"size\", \"variant\"]);\n\n  var chipRef = React.useRef(null);\n  var handleRef = useForkRef(chipRef, ref);\n\n  var handleDeleteIconClick = function handleDeleteIconClick(event) {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n\n  var handleKeyUp = function handleKeyUp(event) {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      } else if (event.key === 'Escape' && chipRef.current) {\n        chipRef.current.blur();\n      }\n    }\n\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n\n  var clickable = clickableProp !== false && onClick ? true : clickableProp;\n  var small = size === 'small';\n  var Component = ComponentProp || (clickable ? ButtonBase : 'div');\n  var moreProps = Component === ButtonBase ? {\n    component: 'div'\n  } : {};\n  var deleteIcon = null;\n\n  if (onDelete) {\n    var customClasses = clsx(color !== 'default' && (variant === \"default\" ? classes[\"deleteIconColor\".concat(capitalize(color))] : classes[\"deleteIconOutlinedColor\".concat(capitalize(color))]), small && classes.deleteIconSmall);\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    }) : /*#__PURE__*/React.createElement(CancelIcon, {\n      className: clsx(classes.deleteIcon, customClasses),\n      onClick: handleDeleteIconClick\n    });\n  }\n\n  var avatar = null;\n\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className, small && classes.avatarSmall, color !== 'default' && classes[\"avatarColor\".concat(capitalize(color))])\n    });\n  }\n\n  var icon = null;\n\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className, small && classes.iconSmall, color !== 'default' && classes[\"iconColor\".concat(capitalize(color))])\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('Material-UI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: clickable || onDelete ? 'button' : undefined,\n    className: clsx(classes.root, className, color !== 'default' && [classes[\"color\".concat(capitalize(color))], clickable && classes[\"clickableColor\".concat(capitalize(color))], onDelete && classes[\"deletableColor\".concat(capitalize(color))]], variant !== \"default\" && [classes.outlined, {\n      'primary': classes.outlinedPrimary,\n      'secondary': classes.outlinedSecondary\n    }[color]], disabled && classes.disabled, small && classes.sizeSmall, clickable && classes.clickable, onDelete && classes.deletable),\n    \"aria-disabled\": disabled ? true : undefined,\n    tabIndex: clickable || onDelete ? 0 : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef\n  }, moreProps, other), avatar || icon, /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.label, small && classes.labelSmall)\n  }, label), deleteIcon);\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Avatar element.\n   */\n  avatar: PropTypes.element,\n\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If false, the chip will not be clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   */\n  clickable: PropTypes.bool,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n\n  /**\n   * If `true`, the chip should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n\n  /**\n   * The content of the label.\n   */\n  label: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Callback function fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n\n  /**\n   * The size of the chip.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['default', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiChip'\n})(Chip);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      boxSizing: 'border-box',\n      lineHeight: '48px',\n      listStyle: 'none',\n      color: theme.palette.text.secondary,\n      fontFamily: theme.typography.fontFamily,\n      fontWeight: theme.typography.fontWeightMedium,\n      fontSize: theme.typography.pxToRem(14)\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit'\n    },\n\n    /* Styles applied to the inner `component` element if `disableGutters={false}`. */\n    gutters: {\n      paddingLeft: 16,\n      paddingRight: 16\n    },\n\n    /* Styles applied to the root element if `inset={true}`. */\n    inset: {\n      paddingLeft: 72\n    },\n\n    /* Styles applied to the root element if `disableSticky={false}`. */\n    sticky: {\n      position: 'sticky',\n      top: 0,\n      zIndex: 1,\n      backgroundColor: 'inherit'\n    }\n  };\n};\nvar ListSubheader = /*#__PURE__*/React.forwardRef(function ListSubheader(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'li' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$disableSticky = props.disableSticky,\n      disableSticky = _props$disableSticky === void 0 ? false : _props$disableSticky,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"component\", \"disableGutters\", \"disableSticky\", \"inset\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, color !== 'default' && classes[\"color\".concat(capitalize(color))], inset && classes.inset, !disableSticky && classes.sticky, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListSubheader.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'inherit']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the List Subheader will not have gutters.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will not stick to the top during scroll.\n   */\n  disableSticky: PropTypes.bool,\n\n  /**\n   * If `true`, the List Subheader will be indented.\n   */\n  inset: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListSubheader'\n})(ListSubheader);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'RadioButtonUnchecked');","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z\"\n}), 'RadioButtonChecked');","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport RadioButtonUncheckedIcon from '../internal/svg-icons/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '../internal/svg-icons/RadioButtonChecked';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    root: {\n      position: 'relative',\n      display: 'flex',\n      '&$checked $layer': {\n        transform: 'scale(1)',\n        transition: theme.transitions.create('transform', {\n          easing: theme.transitions.easing.easeOut,\n          duration: theme.transitions.duration.shortest\n        })\n      }\n    },\n    layer: {\n      left: 0,\n      position: 'absolute',\n      transform: 'scale(0)',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.easeIn,\n        duration: theme.transitions.duration.shortest\n      })\n    },\n    checked: {}\n  };\n};\n/**\n * @ignore - internal component.\n */\n\nfunction RadioButtonIcon(props) {\n  var checked = props.checked,\n      classes = props.classes,\n      fontSize = props.fontSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.root, checked && classes.checked)\n  }, /*#__PURE__*/React.createElement(RadioButtonUncheckedIcon, {\n    fontSize: fontSize\n  }), /*#__PURE__*/React.createElement(RadioButtonCheckedIcon, {\n    fontSize: fontSize,\n    className: classes.layer\n  }));\n}\n\nprocess.env.NODE_ENV !== \"production\" ? RadioButtonIcon.propTypes = {\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  fontSize: PropTypes.oneOf(['small', 'default'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'PrivateRadioButtonIcon'\n})(RadioButtonIcon);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport SwitchBase from '../internal/SwitchBase';\nimport RadioButtonIcon from './RadioButtonIcon';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport withStyles from '../styles/withStyles';\nimport useRadioGroup from '../RadioGroup/useRadioGroup';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.secondary\n    },\n\n    /* Pseudo-class applied to the root element if `checked={true}`. */\n    checked: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          // Reset on touch devices, it doesn't add specificity\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }\n  };\n};\nvar defaultCheckedIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, {\n  checked: true\n});\nvar defaultIcon = /*#__PURE__*/React.createElement(RadioButtonIcon, null);\nvar Radio = /*#__PURE__*/React.forwardRef(function Radio(props, ref) {\n  var checkedProp = props.checked,\n      classes = props.classes,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      nameProp = props.name,\n      onChangeProp = props.onChange,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"checked\", \"classes\", \"color\", \"name\", \"onChange\", \"size\"]);\n\n  var radioGroup = useRadioGroup();\n  var checked = checkedProp;\n  var onChange = createChainedFunction(onChangeProp, radioGroup && radioGroup.onChange);\n  var name = nameProp;\n\n  if (radioGroup) {\n    if (typeof checked === 'undefined') {\n      checked = radioGroup.value === props.value;\n    }\n\n    if (typeof name === 'undefined') {\n      name = radioGroup.name;\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    color: color,\n    type: \"radio\",\n    icon: /*#__PURE__*/React.cloneElement(defaultIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    checkedIcon: /*#__PURE__*/React.cloneElement(defaultCheckedIcon, {\n      fontSize: size === 'small' ? 'small' : 'default'\n    }),\n    classes: {\n      root: clsx(classes.root, classes[\"color\".concat(capitalize(color))]),\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    name: name,\n    checked: checked,\n    onChange: onChange,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Radio.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * If `true`, the radio will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Name attribute of the `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the radio.\n   * `small` is equivalent to the dense radio styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiRadio'\n})(Radio);","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import * as React from 'react';\nimport { createSvgIcon } from '@material-ui/core/utils';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7 10l5 5 5-5z\"\n}), 'ArrowDropDown');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { setRef, useEventCallback, useControlled, unstable_useId as useId } from '@material-ui/core/utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE 11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _config$ignoreAccents = config.ignoreAccents,\n      ignoreAccents = _config$ignoreAccents === void 0 ? true : _config$ignoreAccents,\n      _config$ignoreCase = config.ignoreCase,\n      ignoreCase = _config$ignoreCase === void 0 ? true : _config$ignoreCase,\n      limit = config.limit,\n      _config$matchFrom = config.matchFrom,\n      matchFrom = _config$matchFrom === void 0 ? 'any' : _config$matchFrom,\n      stringify = config.stringify,\n      _config$trim = config.trim,\n      trim = _config$trim === void 0 ? false : _config$trim;\n  return function (options, _ref) {\n    var inputValue = _ref.inputValue,\n        getOptionLabel = _ref.getOptionLabel;\n    var input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    var filteredOptions = options.filter(function (option) {\n      var candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE 11 support.\n\nfunction findIndex(array, comp) {\n  for (var i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nvar defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nvar pageSize = 5;\nexport default function useAutocomplete(props) {\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$componentName = props.componentName,\n      componentName = _props$componentName === void 0 ? 'useAutocomplete' : _props$componentName,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$filterOptions = props.filterOptions,\n      filterOptions = _props$filterOptions === void 0 ? defaultFilterOptions : _props$filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabelProp = _props$getOptionLabel === void 0 ? function (option) {\n    return option;\n  } : _props$getOptionLabel,\n      _props$getOptionSelec = props.getOptionSelected,\n      getOptionSelected = _props$getOptionSelec === void 0 ? function (option, value) {\n    return option === value;\n  } : _props$getOptionSelec,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      options = props.options,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      valueProp = props.value;\n  var id = useId(idProp);\n  var getOptionLabel = getOptionLabelProp;\n\n  if (process.env.NODE_ENV !== 'production') {\n    getOptionLabel = function getOptionLabel(option) {\n      var optionLabel = getOptionLabelProp(option);\n\n      if (typeof optionLabel !== 'string') {\n        var erroneousReturn = optionLabel === undefined ? 'undefined' : \"\".concat(_typeof(optionLabel), \" (\").concat(optionLabel, \")\");\n        console.error(\"Material-UI: The `getOptionLabel` method of \".concat(componentName, \" returned \").concat(erroneousReturn, \" instead of a string for \").concat(JSON.stringify(option), \".\"));\n      }\n\n      return optionLabel;\n    };\n  }\n\n  var ignoreFocus = React.useRef(false);\n  var firstFocus = React.useRef(true);\n  var inputRef = React.useRef(null);\n  var listboxRef = React.useRef(null);\n\n  var _React$useState = React.useState(null),\n      anchorEl = _React$useState[0],\n      setAnchorEl = _React$useState[1];\n\n  var _React$useState2 = React.useState(-1),\n      focusedTag = _React$useState2[0],\n      setFocusedTag = _React$useState2[1];\n\n  var defaultHighlighted = autoHighlight ? 0 : -1;\n  var highlightedIndexRef = React.useRef(defaultHighlighted);\n\n  var _useControlled = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      value = _useControlled2[0],\n      setValue = _useControlled2[1];\n\n  var _useControlled3 = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  }),\n      _useControlled4 = _slicedToArray(_useControlled3, 2),\n      inputValue = _useControlled4[0],\n      setInputValue = _useControlled4[1];\n\n  var _React$useState3 = React.useState(false),\n      focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var resetInputValue = useEventCallback(function (event, newValue) {\n    var newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      var optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValue(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(function () {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n\n  var _useControlled5 = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  }),\n      _useControlled6 = _slicedToArray(_useControlled5, 2),\n      open = _useControlled6[0],\n      setOpenState = _useControlled6[1];\n\n  var inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  var popupOpen = open;\n  var filteredOptions = popupOpen ? filterOptions(options.filter(function (option) {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(function (value2) {\n      return value2 !== null && getOptionSelected(option, value2);\n    })) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue ? '' : inputValue,\n    getOptionLabel: getOptionLabel\n  }) : [];\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      var missingValue = (multiple ? value : [value]).filter(function (value2) {\n        return !options.some(function (option) {\n          return getOptionSelected(option, value2);\n        });\n      });\n\n      if (missingValue.length > 0) {\n        console.warn([\"Material-UI: The value provided to \".concat(componentName, \" is invalid.\"), \"None of the options match with `\".concat(missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0]), \"`.\"), 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  var focusTag = useEventCallback(function (tagToFocus) {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(tagToFocus, \"\\\"]\")).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(function () {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      var nextFocusDisabled = disabledItemsFocusable ? false : option && (option.disabled || option.getAttribute('aria-disabled') === 'true');\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var setHighlightedIndex = useEventCallback(function (_ref2) {\n    var event = _ref2.event,\n        index = _ref2.index,\n        _ref2$reason = _ref2.reason,\n        reason = _ref2$reason === void 0 ? 'auto' : _ref2$reason;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', \"\".concat(id, \"-option-\").concat(index));\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    var prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n    }\n\n    var listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    var option = listboxRef.current.querySelector(\"[data-option-index=\\\"\".concat(index, \"\\\"]\"));\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true'); // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      var element = option;\n      var scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      var elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  var changeHighlightedIndex = useEventCallback(function (_ref3) {\n    var event = _ref3.event,\n        diff = _ref3.diff,\n        _ref3$direction = _ref3.direction,\n        direction = _ref3$direction === void 0 ? 'next' : _ref3$direction,\n        _ref3$reason = _ref3.reason,\n        reason = _ref3$reason === void 0 ? 'auto' : _ref3$reason;\n\n    if (!popupOpen) {\n      return;\n    }\n\n    var getNextIndex = function getNextIndex() {\n      var maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      var newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    var nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason: reason,\n      event: event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        var option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        var index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  var syncHighlightedIndex = React.useCallback(function () {\n    if (!popupOpen) {\n      return;\n    }\n\n    var valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (!filterSelectedOptions && valueItem != null) {\n      var currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, function (val) {\n        return getOptionSelected(currentOption, val);\n      }) !== -1) {\n        return;\n      }\n\n      var itemIndex = findIndex(filteredOptions, function (optionItem) {\n        return getOptionSelected(optionItem, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, getOptionSelected, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  filteredOptions.length === 0, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  var handleListboxRef = useEventCallback(function (node) {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n  React.useEffect(function () {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  var handleOpen = function handleOpen(event) {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  var handleClose = function handleClose(event, reason) {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  var handleValue = function handleValue(event, newValue, reason, details) {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValue(newValue);\n  };\n\n  var isTouch = React.useRef(false);\n\n  var selectNewValue = function selectNewValue(event, option) {\n    var reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'select-option';\n    var origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    var reason = reasonProp;\n    var newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        var matches = newValue.filter(function (val) {\n          return getOptionSelected(option, val);\n        });\n\n        if (matches.length > 1) {\n          console.error([\"Material-UI: The `getOptionSelected` method of \".concat(componentName, \" do not handle the arguments correctly.\"), \"The component expects a single value to match a given option but found \".concat(matches.length, \" matches.\")].join('\\n'));\n        }\n      }\n\n      var itemIndex = findIndex(newValue, function (valueItem) {\n        return getOptionSelected(option, valueItem);\n      });\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option: option\n    });\n\n    if (!disableCloseOnSelect) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    var nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      var option = anchorEl.querySelector(\"[data-tag-index=\\\"\".concat(nextFocus, \"\\\"]\")); // Same logic as MenuList.js\n\n      if (option && (!option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true')) {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  var handleFocusTag = function handleFocusTag(event, direction) {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    var nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  var handleClear = function handleClear(event) {\n    ignoreFocus.current = true;\n    setInputValue('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  var handleKeyDown = function handleKeyDown(other) {\n    return function (event) {\n      if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n        setFocusedTag(-1);\n        focusTag(-1);\n      }\n\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event: event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event: event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event: event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          // Wait until IME is settled.\n          if (event.which === 229) {\n            break;\n          }\n\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            var option = filteredOptions[highlightedIndexRef.current];\n            var disabled = getOptionDisabled ? getOptionDisabled(option) : false; // We don't want to validate the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            var index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            var newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'remove-option', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n\n      if (other.onKeyDown) {\n        other.onKeyDown(event);\n      }\n    };\n  };\n\n  var handleFocus = function handleFocus(event) {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    // Ignore the event when using the scrollbar with IE 11\n    if (listboxRef.current !== null && document.activeElement === listboxRef.current.parentElement) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (debug && inputValue !== '') {\n      return;\n    }\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValue(newValue);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  var handleOptionMouseOver = function handleOptionMouseOver(event) {\n    setHighlightedIndex({\n      event: event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  var handleOptionTouchStart = function handleOptionTouchStart() {\n    isTouch.current = true;\n  };\n\n  var handleOptionClick = function handleOptionClick(event) {\n    var index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n    isTouch.current = false;\n  };\n\n  var handleTagDelete = function handleTagDelete(index) {\n    return function (event) {\n      var newValue = value.slice();\n      newValue.splice(index, 1);\n      handleValue(event, newValue, 'remove-option', {\n        option: value[index]\n      });\n    };\n  };\n\n  var handlePopupIndicator = function handlePopupIndicator(event) {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  var handleMouseDown = function handleMouseDown(event) {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  var handleClick = function handleClick() {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  var handleInputMouseDown = function handleInputMouseDown(event) {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  var dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  var groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    var indexBy = new Map();\n    var warn = false;\n    groupedOptions = filteredOptions.reduce(function (acc, option, index) {\n      var group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(\"Material-UI: The options provided combined with the `groupBy` method of \".concat(componentName, \" returns duplicated headers.\"), 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index: index,\n          group: group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: function getRootProps() {\n      var other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        role: 'combobox',\n        'aria-expanded': popupOpen\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: function getInputLabelProps() {\n      return {\n        id: \"\".concat(id, \"-label\"),\n        htmlFor: id\n      };\n    },\n    getInputProps: function getInputProps() {\n      return {\n        id: id,\n        value: inputValue,\n        onBlur: handleBlur,\n        onFocus: handleFocus,\n        onChange: handleInputChange,\n        onMouseDown: handleInputMouseDown,\n        // if open then this is handled imperativeley so don't let react override\n        // only have an opinion about this when closed\n        'aria-activedescendant': popupOpen ? '' : null,\n        'aria-autocomplete': autoComplete ? 'both' : 'list',\n        'aria-controls': popupOpen ? \"\".concat(id, \"-popup\") : null,\n        // Disable browser's suggestion that might overlap with the popup.\n        // Handle autocomplete but not autofill.\n        autoComplete: 'off',\n        ref: inputRef,\n        autoCapitalize: 'none',\n        spellCheck: 'false'\n      };\n    },\n    getClearProps: function getClearProps() {\n      return {\n        tabIndex: -1,\n        onClick: handleClear\n      };\n    },\n    getPopupIndicatorProps: function getPopupIndicatorProps() {\n      return {\n        tabIndex: -1,\n        onClick: handlePopupIndicator\n      };\n    },\n    getTagProps: function getTagProps(_ref4) {\n      var index = _ref4.index;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: function getListboxProps() {\n      return {\n        role: 'listbox',\n        id: \"\".concat(id, \"-popup\"),\n        'aria-labelledby': \"\".concat(id, \"-label\"),\n        ref: handleListboxRef,\n        onMouseDown: function onMouseDown(event) {\n          // Prevent blur\n          event.preventDefault();\n        }\n      };\n    },\n    getOptionProps: function getOptionProps(_ref5) {\n      var index = _ref5.index,\n          option = _ref5.option;\n      var selected = (multiple ? value : [value]).some(function (value2) {\n        return value2 != null && getOptionSelected(option, value2);\n      });\n      var disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: index,\n        tabIndex: -1,\n        role: 'option',\n        id: \"\".concat(id, \"-option-\").concat(index),\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id: id,\n    inputValue: inputValue,\n    value: value,\n    dirty: dirty,\n    popupOpen: popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    focusedTag: focusedTag,\n    groupedOptions: groupedOptions\n  };\n}","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { withStyles } from '@material-ui/core/styles';\nimport Popper from '@material-ui/core/Popper';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chip from '@material-ui/core/Chip';\nimport CloseIcon from '../internal/svg-icons/Close';\nimport ArrowDropDownIcon from '../internal/svg-icons/ArrowDropDown';\nimport useAutocomplete, { createFilterOptions } from '../useAutocomplete';\nexport { createFilterOptions };\nexport var styles = function styles(theme) {\n  var _option;\n\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      '&$focused $clearIndicatorDirty': {\n        visibility: 'visible'\n      },\n\n      /* Avoid double tap issue on iOS */\n      '@media (pointer: fine)': {\n        '&:hover $clearIndicatorDirty': {\n          visibility: 'visible'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Pseudo-class applied to the root element if focused. */\n    focused: {},\n\n    /* Styles applied to the tag elements, e.g. the chips. */\n    tag: {\n      margin: 3,\n      maxWidth: 'calc(100% - 6px)'\n    },\n\n    /* Styles applied to the tag elements, e.g. the chips if `size=\"small\"`. */\n    tagSizeSmall: {\n      margin: 2,\n      maxWidth: 'calc(100% - 4px)'\n    },\n\n    /* Styles applied when the popup icon is rendered. */\n    hasPopupIcon: {},\n\n    /* Styles applied when the clear icon is rendered. */\n    hasClearIcon: {},\n\n    /* Styles applied to the Input element. */\n    inputRoot: {\n      flexWrap: 'wrap',\n      '$hasPopupIcon &, $hasClearIcon &': {\n        paddingRight: 26 + 4\n      },\n      '$hasPopupIcon$hasClearIcon &': {\n        paddingRight: 52 + 4\n      },\n      '& $input': {\n        width: 0,\n        minWidth: 30\n      },\n      '&[class*=\"MuiInput-root\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: 4\n        },\n        '& $input:first-child': {\n          padding: '6px 0'\n        }\n      },\n      '&[class*=\"MuiInput-root\"][class*=\"MuiInput-marginDense\"]': {\n        '& $input': {\n          padding: '4px 4px 5px'\n        },\n        '& $input:first-child': {\n          padding: '3px 0 6px'\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"]': {\n        padding: 9,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9.5px 4px'\n        },\n        '& $input:first-child': {\n          paddingLeft: 6\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiOutlinedInput-root\"][class*=\"MuiOutlinedInput-marginDense\"]': {\n        padding: 6,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"]': {\n        paddingTop: 19,\n        paddingLeft: 8,\n        '$hasPopupIcon &, $hasClearIcon &': {\n          paddingRight: 26 + 4 + 9\n        },\n        '$hasPopupIcon$hasClearIcon &': {\n          paddingRight: 52 + 4 + 9\n        },\n        '& $input': {\n          padding: '9px 4px'\n        },\n        '& $endAdornment': {\n          right: 9\n        }\n      },\n      '&[class*=\"MuiFilledInput-root\"][class*=\"MuiFilledInput-marginDense\"]': {\n        paddingBottom: 1,\n        '& $input': {\n          padding: '4.5px 4px'\n        }\n      }\n    },\n\n    /* Styles applied to the input element. */\n    input: {\n      flexGrow: 1,\n      textOverflow: 'ellipsis',\n      opacity: 0\n    },\n\n    /* Styles applied to the input element if tag focused. */\n    inputFocused: {\n      opacity: 1\n    },\n\n    /* Styles applied to the endAdornment element. */\n    endAdornment: {\n      // We use a position absolute to support wrapping tags.\n      position: 'absolute',\n      right: 0,\n      top: 'calc(50% - 14px)' // Center vertically\n\n    },\n\n    /* Styles applied to the clear indicator. */\n    clearIndicator: {\n      marginRight: -2,\n      padding: 4,\n      visibility: 'hidden'\n    },\n\n    /* Styles applied to the clear indicator if the input is dirty. */\n    clearIndicatorDirty: {},\n\n    /* Styles applied to the popup indicator. */\n    popupIndicator: {\n      padding: 2,\n      marginRight: -2\n    },\n\n    /* Styles applied to the popup indicator if the popup is open. */\n    popupIndicatorOpen: {\n      transform: 'rotate(180deg)'\n    },\n\n    /* Styles applied to the popper element. */\n    popper: {\n      zIndex: theme.zIndex.modal\n    },\n\n    /* Styles applied to the popper element if `disablePortal={true}`. */\n    popperDisablePortal: {\n      position: 'absolute'\n    },\n\n    /* Styles applied to the `Paper` component. */\n    paper: _extends({}, theme.typography.body1, {\n      overflow: 'hidden',\n      margin: '4px 0'\n    }),\n\n    /* Styles applied to the `listbox` component. */\n    listbox: {\n      listStyle: 'none',\n      margin: 0,\n      padding: '8px 0',\n      maxHeight: '40vh',\n      overflow: 'auto'\n    },\n\n    /* Styles applied to the loading wrapper. */\n    loading: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the no option wrapper. */\n    noOptions: {\n      color: theme.palette.text.secondary,\n      padding: '14px 16px'\n    },\n\n    /* Styles applied to the option elements. */\n    option: (_option = {\n      minHeight: 48,\n      display: 'flex',\n      justifyContent: 'flex-start',\n      alignItems: 'center',\n      cursor: 'pointer',\n      paddingTop: 6,\n      boxSizing: 'border-box',\n      outline: '0',\n      WebkitTapHighlightColor: 'transparent',\n      paddingBottom: 6,\n      paddingLeft: 16,\n      paddingRight: 16\n    }, _defineProperty(_option, theme.breakpoints.up('sm'), {\n      minHeight: 'auto'\n    }), _defineProperty(_option, '&[aria-selected=\"true\"]', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[data-focus=\"true\"]', {\n      backgroundColor: theme.palette.action.hover\n    }), _defineProperty(_option, '&:active', {\n      backgroundColor: theme.palette.action.selected\n    }), _defineProperty(_option, '&[aria-disabled=\"true\"]', {\n      opacity: theme.palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    }), _option),\n\n    /* Styles applied to the group's label elements. */\n    groupLabel: {\n      backgroundColor: theme.palette.background.paper,\n      top: -8\n    },\n\n    /* Styles applied to the group's ul elements. */\n    groupUl: {\n      padding: 0,\n      '& $option': {\n        paddingLeft: 24\n      }\n    }\n  };\n};\n\nfunction DisablePortal(props) {\n  // eslint-disable-next-line react/prop-types\n  var anchorEl = props.anchorEl,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"anchorEl\", \"open\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", other);\n}\n\nvar _ref = /*#__PURE__*/React.createElement(CloseIcon, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/React.createElement(ArrowDropDownIcon, null);\n\nvar Autocomplete = /*#__PURE__*/React.forwardRef(function Autocomplete(props, ref) {\n  /* eslint-disable no-unused-vars */\n  var _props$autoComplete = props.autoComplete,\n      autoComplete = _props$autoComplete === void 0 ? false : _props$autoComplete,\n      _props$autoHighlight = props.autoHighlight,\n      autoHighlight = _props$autoHighlight === void 0 ? false : _props$autoHighlight,\n      _props$autoSelect = props.autoSelect,\n      autoSelect = _props$autoSelect === void 0 ? false : _props$autoSelect,\n      _props$blurOnSelect = props.blurOnSelect,\n      blurOnSelect = _props$blurOnSelect === void 0 ? false : _props$blurOnSelect,\n      ChipProps = props.ChipProps,\n      classes = props.classes,\n      className = props.className,\n      _props$clearOnBlur = props.clearOnBlur,\n      clearOnBlur = _props$clearOnBlur === void 0 ? !props.freeSolo : _props$clearOnBlur,\n      _props$clearOnEscape = props.clearOnEscape,\n      clearOnEscape = _props$clearOnEscape === void 0 ? false : _props$clearOnEscape,\n      _props$clearText = props.clearText,\n      clearText = _props$clearText === void 0 ? 'Clear' : _props$clearText,\n      _props$closeIcon = props.closeIcon,\n      closeIcon = _props$closeIcon === void 0 ? _ref : _props$closeIcon,\n      _props$closeText = props.closeText,\n      closeText = _props$closeText === void 0 ? 'Close' : _props$closeText,\n      _props$debug = props.debug,\n      debug = _props$debug === void 0 ? false : _props$debug,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? props.multiple ? [] : null : _props$defaultValue,\n      _props$disableClearab = props.disableClearable,\n      disableClearable = _props$disableClearab === void 0 ? false : _props$disableClearab,\n      _props$disableCloseOn = props.disableCloseOnSelect,\n      disableCloseOnSelect = _props$disableCloseOn === void 0 ? false : _props$disableCloseOn,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disabledItemsF = props.disabledItemsFocusable,\n      disabledItemsFocusable = _props$disabledItemsF === void 0 ? false : _props$disabledItemsF,\n      _props$disableListWra = props.disableListWrap,\n      disableListWrap = _props$disableListWra === void 0 ? false : _props$disableListWra,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      filterOptions = props.filterOptions,\n      _props$filterSelected = props.filterSelectedOptions,\n      filterSelectedOptions = _props$filterSelected === void 0 ? false : _props$filterSelected,\n      _props$forcePopupIcon = props.forcePopupIcon,\n      forcePopupIcon = _props$forcePopupIcon === void 0 ? 'auto' : _props$forcePopupIcon,\n      _props$freeSolo = props.freeSolo,\n      freeSolo = _props$freeSolo === void 0 ? false : _props$freeSolo,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$getLimitTagsTe = props.getLimitTagsText,\n      getLimitTagsText = _props$getLimitTagsTe === void 0 ? function (more) {\n    return \"+\".concat(more);\n  } : _props$getLimitTagsTe,\n      getOptionDisabled = props.getOptionDisabled,\n      _props$getOptionLabel = props.getOptionLabel,\n      getOptionLabel = _props$getOptionLabel === void 0 ? function (x) {\n    return x;\n  } : _props$getOptionLabel,\n      getOptionSelected = props.getOptionSelected,\n      groupBy = props.groupBy,\n      _props$handleHomeEndK = props.handleHomeEndKeys,\n      handleHomeEndKeys = _props$handleHomeEndK === void 0 ? !props.freeSolo : _props$handleHomeEndK,\n      idProp = props.id,\n      _props$includeInputIn = props.includeInputInList,\n      includeInputInList = _props$includeInputIn === void 0 ? false : _props$includeInputIn,\n      inputValueProp = props.inputValue,\n      _props$limitTags = props.limitTags,\n      limitTags = _props$limitTags === void 0 ? -1 : _props$limitTags,\n      _props$ListboxCompone = props.ListboxComponent,\n      ListboxComponent = _props$ListboxCompone === void 0 ? 'ul' : _props$ListboxCompone,\n      ListboxProps = props.ListboxProps,\n      _props$loading = props.loading,\n      loading = _props$loading === void 0 ? false : _props$loading,\n      _props$loadingText = props.loadingText,\n      loadingText = _props$loadingText === void 0 ? 'Loading…' : _props$loadingText,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      _props$noOptionsText = props.noOptionsText,\n      noOptionsText = _props$noOptionsText === void 0 ? 'No options' : _props$noOptionsText,\n      onChange = props.onChange,\n      onClose = props.onClose,\n      onHighlightChange = props.onHighlightChange,\n      onInputChange = props.onInputChange,\n      onOpen = props.onOpen,\n      open = props.open,\n      _props$openOnFocus = props.openOnFocus,\n      openOnFocus = _props$openOnFocus === void 0 ? false : _props$openOnFocus,\n      _props$openText = props.openText,\n      openText = _props$openText === void 0 ? 'Open' : _props$openText,\n      options = props.options,\n      _props$PaperComponent = props.PaperComponent,\n      PaperComponent = _props$PaperComponent === void 0 ? Paper : _props$PaperComponent,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponentProp = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      _props$popupIcon = props.popupIcon,\n      popupIcon = _props$popupIcon === void 0 ? _ref2 : _props$popupIcon,\n      renderGroupProp = props.renderGroup,\n      renderInput = props.renderInput,\n      renderOptionProp = props.renderOption,\n      renderTags = props.renderTags,\n      _props$selectOnFocus = props.selectOnFocus,\n      selectOnFocus = _props$selectOnFocus === void 0 ? !props.freeSolo : _props$selectOnFocus,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      valueProp = props.value,\n      other = _objectWithoutProperties(props, [\"autoComplete\", \"autoHighlight\", \"autoSelect\", \"blurOnSelect\", \"ChipProps\", \"classes\", \"className\", \"clearOnBlur\", \"clearOnEscape\", \"clearText\", \"closeIcon\", \"closeText\", \"debug\", \"defaultValue\", \"disableClearable\", \"disableCloseOnSelect\", \"disabled\", \"disabledItemsFocusable\", \"disableListWrap\", \"disablePortal\", \"filterOptions\", \"filterSelectedOptions\", \"forcePopupIcon\", \"freeSolo\", \"fullWidth\", \"getLimitTagsText\", \"getOptionDisabled\", \"getOptionLabel\", \"getOptionSelected\", \"groupBy\", \"handleHomeEndKeys\", \"id\", \"includeInputInList\", \"inputValue\", \"limitTags\", \"ListboxComponent\", \"ListboxProps\", \"loading\", \"loadingText\", \"multiple\", \"noOptionsText\", \"onChange\", \"onClose\", \"onHighlightChange\", \"onInputChange\", \"onOpen\", \"open\", \"openOnFocus\", \"openText\", \"options\", \"PaperComponent\", \"PopperComponent\", \"popupIcon\", \"renderGroup\", \"renderInput\", \"renderOption\", \"renderTags\", \"selectOnFocus\", \"size\", \"value\"]);\n  /* eslint-enable no-unused-vars */\n\n\n  var PopperComponent = disablePortal ? DisablePortal : PopperComponentProp;\n\n  var _useAutocomplete = useAutocomplete(_extends({}, props, {\n    componentName: 'Autocomplete'\n  })),\n      getRootProps = _useAutocomplete.getRootProps,\n      getInputProps = _useAutocomplete.getInputProps,\n      getInputLabelProps = _useAutocomplete.getInputLabelProps,\n      getPopupIndicatorProps = _useAutocomplete.getPopupIndicatorProps,\n      getClearProps = _useAutocomplete.getClearProps,\n      getTagProps = _useAutocomplete.getTagProps,\n      getListboxProps = _useAutocomplete.getListboxProps,\n      getOptionProps = _useAutocomplete.getOptionProps,\n      value = _useAutocomplete.value,\n      dirty = _useAutocomplete.dirty,\n      id = _useAutocomplete.id,\n      popupOpen = _useAutocomplete.popupOpen,\n      focused = _useAutocomplete.focused,\n      focusedTag = _useAutocomplete.focusedTag,\n      anchorEl = _useAutocomplete.anchorEl,\n      setAnchorEl = _useAutocomplete.setAnchorEl,\n      inputValue = _useAutocomplete.inputValue,\n      groupedOptions = _useAutocomplete.groupedOptions;\n\n  var startAdornment;\n\n  if (multiple && value.length > 0) {\n    var getCustomizedTagProps = function getCustomizedTagProps(params) {\n      return _extends({\n        className: clsx(classes.tag, size === 'small' && classes.tagSizeSmall),\n        disabled: disabled\n      }, getTagProps(params));\n    };\n\n    if (renderTags) {\n      startAdornment = renderTags(value, getCustomizedTagProps);\n    } else {\n      startAdornment = value.map(function (option, index) {\n        return /*#__PURE__*/React.createElement(Chip, _extends({\n          label: getOptionLabel(option),\n          size: size\n        }, getCustomizedTagProps({\n          index: index\n        }), ChipProps));\n      });\n    }\n  }\n\n  if (limitTags > -1 && Array.isArray(startAdornment)) {\n    var more = startAdornment.length - limitTags;\n\n    if (!focused && more > 0) {\n      startAdornment = startAdornment.splice(0, limitTags);\n      startAdornment.push( /*#__PURE__*/React.createElement(\"span\", {\n        className: classes.tag,\n        key: startAdornment.length\n      }, getLimitTagsText(more)));\n    }\n  }\n\n  var defaultRenderGroup = function defaultRenderGroup(params) {\n    return /*#__PURE__*/React.createElement(\"li\", {\n      key: params.key\n    }, /*#__PURE__*/React.createElement(ListSubheader, {\n      className: classes.groupLabel,\n      component: \"div\"\n    }, params.group), /*#__PURE__*/React.createElement(\"ul\", {\n      className: classes.groupUl\n    }, params.children));\n  };\n\n  var renderGroup = renderGroupProp || defaultRenderGroup;\n  var renderOption = renderOptionProp || getOptionLabel;\n\n  var renderListOption = function renderListOption(option, index) {\n    var optionProps = getOptionProps({\n      option: option,\n      index: index\n    });\n    return /*#__PURE__*/React.createElement(\"li\", _extends({}, optionProps, {\n      className: classes.option\n    }), renderOption(option, {\n      selected: optionProps['aria-selected'],\n      inputValue: inputValue\n    }));\n  };\n\n  var hasClearIcon = !disableClearable && !disabled;\n  var hasPopupIcon = (!freeSolo || forcePopupIcon === true) && forcePopupIcon !== false;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref,\n    className: clsx(classes.root, className, focused && classes.focused, fullWidth && classes.fullWidth, hasClearIcon && classes.hasClearIcon, hasPopupIcon && classes.hasPopupIcon)\n  }, getRootProps(other)), renderInput({\n    id: id,\n    disabled: disabled,\n    fullWidth: true,\n    size: size === 'small' ? 'small' : undefined,\n    InputLabelProps: getInputLabelProps(),\n    InputProps: {\n      ref: setAnchorEl,\n      className: classes.inputRoot,\n      startAdornment: startAdornment,\n      endAdornment: /*#__PURE__*/React.createElement(\"div\", {\n        className: classes.endAdornment\n      }, hasClearIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getClearProps(), {\n        \"aria-label\": clearText,\n        title: clearText,\n        className: clsx(classes.clearIndicator, dirty && classes.clearIndicatorDirty)\n      }), closeIcon) : null, hasPopupIcon ? /*#__PURE__*/React.createElement(IconButton, _extends({}, getPopupIndicatorProps(), {\n        disabled: disabled,\n        \"aria-label\": popupOpen ? closeText : openText,\n        title: popupOpen ? closeText : openText,\n        className: clsx(classes.popupIndicator, popupOpen && classes.popupIndicatorOpen)\n      }), popupIcon) : null)\n    },\n    inputProps: _extends({\n      className: clsx(classes.input, focusedTag === -1 && classes.inputFocused),\n      disabled: disabled\n    }, getInputProps())\n  })), popupOpen && anchorEl ? /*#__PURE__*/React.createElement(PopperComponent, {\n    className: clsx(classes.popper, disablePortal && classes.popperDisablePortal),\n    style: {\n      width: anchorEl ? anchorEl.clientWidth : null\n    },\n    role: \"presentation\",\n    anchorEl: anchorEl,\n    open: true\n  }, /*#__PURE__*/React.createElement(PaperComponent, {\n    className: classes.paper\n  }, loading && groupedOptions.length === 0 ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.loading\n  }, loadingText) : null, groupedOptions.length === 0 && !freeSolo && !loading ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.noOptions\n  }, noOptionsText) : null, groupedOptions.length > 0 ? /*#__PURE__*/React.createElement(ListboxComponent, _extends({\n    className: classes.listbox\n  }, getListboxProps(), ListboxProps), groupedOptions.map(function (option, index) {\n    if (groupBy) {\n      return renderGroup({\n        key: option.key,\n        group: option.group,\n        children: option.options.map(function (option2, index2) {\n          return renderListOption(option2, option.index + index2);\n        })\n      });\n    }\n\n    return renderListOption(option, index);\n  })) : null)) : null);\n});\nprocess.env.NODE_ENV !== \"production\" ? Autocomplete.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the portion of the selected suggestion that has not been typed by the user,\n   * known as the completion string, appears inline after the input cursor in the textbox.\n   * The inline completion string is visually highlighted and has a selected state.\n   */\n  autoComplete: PropTypes.bool,\n\n  /**\n   * If `true`, the first option is automatically highlighted.\n   */\n  autoHighlight: PropTypes.bool,\n\n  /**\n   * If `true`, the selected option becomes the value of the input\n   * when the Autocomplete loses focus unless the user chooses\n   * a different option or changes the character string in the input.\n   */\n  autoSelect: PropTypes.bool,\n\n  /**\n   * Control if the input should be blurred when an option is selected:\n   *\n   * - `false` the input is not blurred.\n   * - `true` the input is always blurred.\n   * - `touch` the input is blurred after a touch event.\n   * - `mouse` the input is blurred after a mouse event.\n   */\n  blurOnSelect: PropTypes.oneOfType([PropTypes.oneOf(['mouse', 'touch']), PropTypes.bool]),\n\n  /**\n   * Props applied to the [`Chip`](/api/chip/) element.\n   */\n  ChipProps: PropTypes.object,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the input's text will be cleared on blur if no value is selected.\n   *\n   * Set to `true` if you want to help the user enter a new value.\n   * Set to `false` if you want to help the user resume his search.\n   */\n  clearOnBlur: PropTypes.bool,\n\n  /**\n   * If `true`, clear all values when the user presses escape and the popup is closed.\n   */\n  clearOnEscape: PropTypes.bool,\n\n  /**\n   * Override the default text for the *clear* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  clearText: PropTypes.string,\n\n  /**\n   * The icon to display in place of the default close icon.\n   */\n  closeIcon: PropTypes.node,\n\n  /**\n   * Override the default text for the *close popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  closeText: PropTypes.string,\n\n  /**\n   * If `true`, the popup will ignore the blur event if the input is filled.\n   * You can inspect the popup markup with your browser tools.\n   * Consider this option when you need to customize the component.\n   */\n  debug: PropTypes.bool,\n\n  /**\n   * The default input value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the input can't be cleared.\n   */\n  disableClearable: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\n   * If `true`, the popup won't close when a value is selected.\n   */\n  disableCloseOnSelect: PropTypes.bool,\n\n  /**\n   * If `true`, the input will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, will allow focus on disabled items.\n   */\n  disabledItemsFocusable: PropTypes.bool,\n\n  /**\n   * If `true`, the list box in the popup will not wrap focus.\n   */\n  disableListWrap: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * A filter function that determines the options that are eligible.\n   *\n   * @param {T[]} options The options to render.\n   * @param {object} state The state of the component.\n   * @returns {T[]}\n   */\n  filterOptions: PropTypes.func,\n\n  /**\n   * If `true`, hide the selected options from the list box.\n   */\n  filterSelectedOptions: PropTypes.bool,\n\n  /**\n   * Force the visibility display of the popup icon.\n   */\n  forcePopupIcon: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.bool]),\n\n  /**\n   * If `true`, the Autocomplete is free solo, meaning that the user input is not bound to provided options.\n   */\n  freeSolo: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\n   * If `true`, the input will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The label to display when the tags are truncated (`limitTags`).\n   *\n   * @param {number} more The number of truncated tags.\n   * @returns {ReactNode}\n   */\n  getLimitTagsText: PropTypes.func,\n\n  /**\n   * Used to determine the disabled state for a given option.\n   *\n   * @param {T} option The option to test.\n   * @returns {boolean}\n   */\n  getOptionDisabled: PropTypes.func,\n\n  /**\n   * Used to determine the string value for a given option.\n   * It's used to fill the input (and the list box options if `renderOption` is not provided).\n   *\n   * @param {T} option\n   * @returns {string}\n   */\n  getOptionLabel: PropTypes.func,\n\n  /**\n   * Used to determine if an option is selected, considering the current value.\n   * Uses strict equality by default.\n   *\n   * @param {T} option The option to test.\n   * @param {T} value The value to test against.\n   * @returns {boolean}\n   */\n  getOptionSelected: PropTypes.func,\n\n  /**\n   * If provided, the options will be grouped under the returned string.\n   * The groupBy value is also used as the text for group headings when `renderGroup` is not provided.\n   *\n   * @param {T} options The options to group.\n   * @returns {string}\n   */\n  groupBy: PropTypes.func,\n\n  /**\n   * If `true`, the component handles the \"Home\" and \"End\" keys when the popup is open.\n   * It should move focus to the first option and last option, respectively.\n   */\n  handleHomeEndKeys: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * If `true`, the highlight can move to the input.\n   */\n  includeInputInList: PropTypes.bool,\n\n  /**\n   * The input value.\n   */\n  inputValue: PropTypes.string,\n\n  /**\n   * The maximum number of tags that will be visible when not focused.\n   * Set `-1` to disable the limit.\n   */\n  limitTags: PropTypes.number,\n\n  /**\n   * The component used to render the listbox.\n   */\n  ListboxComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the Listbox element.\n   */\n  ListboxProps: PropTypes.object,\n\n  /**\n   * If `true`, the component is in a loading state.\n   */\n  loading: PropTypes.bool,\n\n  /**\n   * Text to display when in a loading state.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  loadingText: PropTypes.node,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .bool,\n\n  /**\n   * Text to display when there are no options.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  noOptionsText: PropTypes.node,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T|T[]} value The new value of the component.\n   * @param {string} reason One of \"create-option\", \"select-option\", \"remove-option\", \"blur\" or \"clear\".\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"toggleInput\"`, `\"escape\"`, `\"select-option\"`, `\"blur\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the highlight option changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {T} option The highlighted option.\n   * @param {string} reason Can be: `\"keyboard\"`, `\"auto\"`, `\"mouse\"`.\n   */\n  onHighlightChange: PropTypes.func,\n\n  /**\n   * Callback fired when the input value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} value The new value of the text input.\n   * @param {string} reason Can be: `\"input\"` (user input), `\"reset\"` (programmatic change), `\"clear\"`.\n   */\n  onInputChange: PropTypes.func,\n\n  /**\n   * Callback fired when the popup requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * Control the popup` open state.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * If `true`, the popup will open on input focus.\n   */\n  openOnFocus: PropTypes.bool,\n\n  /**\n   * Override the default text for the *open popup* icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  openText: PropTypes.string,\n\n  /**\n   * Array of options.\n   */\n  options: PropTypes.array.isRequired,\n\n  /**\n   * The component used to render the body of the popup.\n   */\n  PaperComponent: PropTypes.elementType,\n\n  /**\n   * The component used to position the popup.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * The icon to display in place of the default popup icon.\n   */\n  popupIcon: PropTypes.node,\n\n  /**\n   * Render the group.\n   *\n   * @param {any} option The group to render.\n   * @returns {ReactNode}\n   */\n  renderGroup: PropTypes.func,\n\n  /**\n   * Render the input.\n   *\n   * @param {object} params\n   * @returns {ReactNode}\n   */\n  renderInput: PropTypes.func.isRequired,\n\n  /**\n   * Render the option, use `getOptionLabel` by default.\n   *\n   * @param {T} option The option to render.\n   * @param {object} state The state of the component.\n   * @returns {ReactNode}\n   */\n  renderOption: PropTypes.func,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {T[]} value The `value` provided to the component.\n   * @param {function} getTagProps A tag props getter.\n   * @returns {ReactNode}\n   */\n  renderTags: PropTypes.func,\n\n  /**\n   * If `true`, the input's text will be selected on focus.\n   * It helps the user clear the selected value.\n   */\n  selectOnFocus: PropTypes.bool,\n\n  /**\n   * The size of the autocomplete.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the autocomplete.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   * You can customize the equality behavior with the `getOptionSelected` prop.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAutocomplete'\n})(Autocomplete);"],"sourceRoot":""}